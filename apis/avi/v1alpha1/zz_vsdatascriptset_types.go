/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DatascriptInitParameters struct {
	Evt *string `json:"evt,omitempty" tf:"evt,omitempty"`

	Script *string `json:"script,omitempty" tf:"script,omitempty"`
}

type DatascriptObservation struct {
	Evt *string `json:"evt,omitempty" tf:"evt,omitempty"`

	Script *string `json:"script,omitempty" tf:"script,omitempty"`
}

type DatascriptParameters struct {

	// +kubebuilder:validation:Optional
	Evt *string `json:"evt" tf:"evt,omitempty"`

	// +kubebuilder:validation:Optional
	Script *string `json:"script" tf:"script,omitempty"`
}

type RateLimitersInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateLimitersObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateLimitersParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type VsDataScriptSetConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VsDataScriptSetConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VsDataScriptSetConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VsDataScriptSetInitParameters struct {
	ConfigpbAttributes []VsDataScriptSetConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Datascript []DatascriptInitParameters `json:"datascript,omitempty" tf:"datascript,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	IpgroupRefs []*string `json:"ipgroupRefs,omitempty" tf:"ipgroup_refs,omitempty"`

	Markers []VsDataScriptSetMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PkiProfileRefs []*string `json:"pkiProfileRefs,omitempty" tf:"pki_profile_refs,omitempty"`

	PoolGroupRefs []*string `json:"poolGroupRefs,omitempty" tf:"pool_group_refs,omitempty"`

	PoolRefs []*string `json:"poolRefs,omitempty" tf:"pool_refs,omitempty"`

	ProtocolParserRefs []*string `json:"protocolParserRefs,omitempty" tf:"protocol_parser_refs,omitempty"`

	RateLimiters []RateLimitersInitParameters `json:"rateLimiters,omitempty" tf:"rate_limiters,omitempty"`

	SSLKeyCertificateRefs []*string `json:"sslKeyCertificateRefs,omitempty" tf:"ssl_key_certificate_refs,omitempty"`

	SSLProfileRefs []*string `json:"sslProfileRefs,omitempty" tf:"ssl_profile_refs,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type VsDataScriptSetMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VsDataScriptSetMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VsDataScriptSetMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VsDataScriptSetObservation struct {
	ConfigpbAttributes []VsDataScriptSetConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Datascript []DatascriptObservation `json:"datascript,omitempty" tf:"datascript,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	IpgroupRefs []*string `json:"ipgroupRefs,omitempty" tf:"ipgroup_refs,omitempty"`

	Markers []VsDataScriptSetMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PkiProfileRefs []*string `json:"pkiProfileRefs,omitempty" tf:"pki_profile_refs,omitempty"`

	PoolGroupRefs []*string `json:"poolGroupRefs,omitempty" tf:"pool_group_refs,omitempty"`

	PoolRefs []*string `json:"poolRefs,omitempty" tf:"pool_refs,omitempty"`

	ProtocolParserRefs []*string `json:"protocolParserRefs,omitempty" tf:"protocol_parser_refs,omitempty"`

	RateLimiters []RateLimitersObservation `json:"rateLimiters,omitempty" tf:"rate_limiters,omitempty"`

	SSLKeyCertificateRefs []*string `json:"sslKeyCertificateRefs,omitempty" tf:"ssl_key_certificate_refs,omitempty"`

	SSLProfileRefs []*string `json:"sslProfileRefs,omitempty" tf:"ssl_profile_refs,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type VsDataScriptSetParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []VsDataScriptSetConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	Datascript []DatascriptParameters `json:"datascript,omitempty" tf:"datascript,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	// +kubebuilder:validation:Optional
	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	// +kubebuilder:validation:Optional
	IpgroupRefs []*string `json:"ipgroupRefs,omitempty" tf:"ipgroup_refs,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []VsDataScriptSetMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PkiProfileRefs []*string `json:"pkiProfileRefs,omitempty" tf:"pki_profile_refs,omitempty"`

	// +kubebuilder:validation:Optional
	PoolGroupRefs []*string `json:"poolGroupRefs,omitempty" tf:"pool_group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	PoolRefs []*string `json:"poolRefs,omitempty" tf:"pool_refs,omitempty"`

	// +kubebuilder:validation:Optional
	ProtocolParserRefs []*string `json:"protocolParserRefs,omitempty" tf:"protocol_parser_refs,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiters []RateLimitersParameters `json:"rateLimiters,omitempty" tf:"rate_limiters,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyCertificateRefs []*string `json:"sslKeyCertificateRefs,omitempty" tf:"ssl_key_certificate_refs,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRefs []*string `json:"sslProfileRefs,omitempty" tf:"ssl_profile_refs,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// VsDataScriptSetSpec defines the desired state of VsDataScriptSet
type VsDataScriptSetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VsDataScriptSetParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VsDataScriptSetInitParameters `json:"initProvider,omitempty"`
}

// VsDataScriptSetStatus defines the observed state of VsDataScriptSet.
type VsDataScriptSetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VsDataScriptSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VsDataScriptSet is the Schema for the VsDataScriptSets API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type VsDataScriptSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   VsDataScriptSetSpec   `json:"spec"`
	Status VsDataScriptSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VsDataScriptSetList contains a list of VsDataScriptSets
type VsDataScriptSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VsDataScriptSet `json:"items"`
}

// Repository type metadata.
var (
	VsDataScriptSet_Kind             = "VsDataScriptSet"
	VsDataScriptSet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VsDataScriptSet_Kind}.String()
	VsDataScriptSet_KindAPIVersion   = VsDataScriptSet_Kind + "." + CRDGroupVersion.String()
	VsDataScriptSet_GroupVersionKind = CRDGroupVersion.WithKind(VsDataScriptSet_Kind)
)

func init() {
	SchemeBuilder.Register(&VsDataScriptSet{}, &VsDataScriptSetList{})
}
