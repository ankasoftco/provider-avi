/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RmCloudOpsProtoInitParameters struct {
	LastQueriedSeCreationLimit *string `json:"lastQueriedSeCreationLimit,omitempty" tf:"last_queried_se_creation_limit,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PendingSeCreationCount *string `json:"pendingSeCreationCount,omitempty" tf:"pending_se_creation_count,omitempty"`

	PendingVnicOpCount *string `json:"pendingVnicOpCount,omitempty" tf:"pending_vnic_op_count,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type RmCloudOpsProtoObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LastQueriedSeCreationLimit *string `json:"lastQueriedSeCreationLimit,omitempty" tf:"last_queried_se_creation_limit,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PendingSeCreationCount *string `json:"pendingSeCreationCount,omitempty" tf:"pending_se_creation_count,omitempty"`

	PendingVnicOpCount *string `json:"pendingVnicOpCount,omitempty" tf:"pending_vnic_op_count,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type RmCloudOpsProtoParameters struct {

	// +kubebuilder:validation:Optional
	LastQueriedSeCreationLimit *string `json:"lastQueriedSeCreationLimit,omitempty" tf:"last_queried_se_creation_limit,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PendingSeCreationCount *string `json:"pendingSeCreationCount,omitempty" tf:"pending_se_creation_count,omitempty"`

	// +kubebuilder:validation:Optional
	PendingVnicOpCount *string `json:"pendingVnicOpCount,omitempty" tf:"pending_vnic_op_count,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// RmCloudOpsProtoSpec defines the desired state of RmCloudOpsProto
type RmCloudOpsProtoSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RmCloudOpsProtoParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RmCloudOpsProtoInitParameters `json:"initProvider,omitempty"`
}

// RmCloudOpsProtoStatus defines the observed state of RmCloudOpsProto.
type RmCloudOpsProtoStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RmCloudOpsProtoObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RmCloudOpsProto is the Schema for the RmCloudOpsProtos API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type RmCloudOpsProto struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RmCloudOpsProtoSpec   `json:"spec"`
	Status            RmCloudOpsProtoStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RmCloudOpsProtoList contains a list of RmCloudOpsProtos
type RmCloudOpsProtoList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RmCloudOpsProto `json:"items"`
}

// Repository type metadata.
var (
	RmCloudOpsProto_Kind             = "RmCloudOpsProto"
	RmCloudOpsProto_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RmCloudOpsProto_Kind}.String()
	RmCloudOpsProto_KindAPIVersion   = RmCloudOpsProto_Kind + "." + CRDGroupVersion.String()
	RmCloudOpsProto_GroupVersionKind = CRDGroupVersion.WithKind(RmCloudOpsProto_Kind)
)

func init() {
	SchemeBuilder.Register(&RmCloudOpsProto{}, &RmCloudOpsProtoList{})
}
