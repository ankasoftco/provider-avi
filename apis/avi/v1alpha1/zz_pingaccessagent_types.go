/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PingAccessAgentConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PingAccessAgentConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PingAccessAgentConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PingAccessAgentInitParameters struct {
	ConfigpbAttributes []PingAccessAgentConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Markers []PingAccessAgentMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PingaccessPoolRef *string `json:"pingaccessPoolRef,omitempty" tf:"pingaccess_pool_ref,omitempty"`

	PrimaryServer []PrimaryServerInitParameters `json:"primaryServer,omitempty" tf:"primary_server,omitempty"`

	PropertiesFileData *string `json:"propertiesFileData,omitempty" tf:"properties_file_data,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type PingAccessAgentMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PingAccessAgentMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PingAccessAgentMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PingAccessAgentObservation struct {
	ConfigpbAttributes []PingAccessAgentConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []PingAccessAgentMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PingaccessPoolRef *string `json:"pingaccessPoolRef,omitempty" tf:"pingaccess_pool_ref,omitempty"`

	PrimaryServer []PrimaryServerObservation `json:"primaryServer,omitempty" tf:"primary_server,omitempty"`

	PropertiesFileData *string `json:"propertiesFileData,omitempty" tf:"properties_file_data,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type PingAccessAgentParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []PingAccessAgentConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []PingAccessAgentMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PingaccessPoolRef *string `json:"pingaccessPoolRef,omitempty" tf:"pingaccess_pool_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PrimaryServer []PrimaryServerParameters `json:"primaryServer,omitempty" tf:"primary_server,omitempty"`

	// +kubebuilder:validation:Optional
	PropertiesFileData *string `json:"propertiesFileData,omitempty" tf:"properties_file_data,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type PrimaryServerIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PrimaryServerIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PrimaryServerIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PrimaryServerInitParameters struct {
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []PrimaryServerIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type PrimaryServerObservation struct {
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []PrimaryServerIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type PrimaryServerParameters struct {

	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// +kubebuilder:validation:Optional
	IP []PrimaryServerIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

// PingAccessAgentSpec defines the desired state of PingAccessAgent
type PingAccessAgentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PingAccessAgentParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PingAccessAgentInitParameters `json:"initProvider,omitempty"`
}

// PingAccessAgentStatus defines the observed state of PingAccessAgent.
type PingAccessAgentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PingAccessAgentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PingAccessAgent is the Schema for the PingAccessAgents API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type PingAccessAgent struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pingaccessPoolRef) || has(self.initProvider.pingaccessPoolRef)",message="pingaccessPoolRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.primaryServer) || has(self.initProvider.primaryServer)",message="primaryServer is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.propertiesFileData) || has(self.initProvider.propertiesFileData)",message="propertiesFileData is a required parameter"
	Spec   PingAccessAgentSpec   `json:"spec"`
	Status PingAccessAgentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PingAccessAgentList contains a list of PingAccessAgents
type PingAccessAgentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PingAccessAgent `json:"items"`
}

// Repository type metadata.
var (
	PingAccessAgent_Kind             = "PingAccessAgent"
	PingAccessAgent_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PingAccessAgent_Kind}.String()
	PingAccessAgent_KindAPIVersion   = PingAccessAgent_Kind + "." + CRDGroupVersion.String()
	PingAccessAgent_GroupVersionKind = CRDGroupVersion.WithKind(PingAccessAgent_Kind)
)

func init() {
	SchemeBuilder.Register(&PingAccessAgent{}, &PingAccessAgentList{})
}
