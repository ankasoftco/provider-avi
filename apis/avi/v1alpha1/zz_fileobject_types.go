/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FileObjectInitParameters struct {
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	Compressed *string `json:"compressed,omitempty" tf:"compressed,omitempty"`

	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	ReadOnly *string `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	RestrictDownload *string `json:"restrictDownload,omitempty" tf:"restrict_download,omitempty"`

	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FileObjectObservation struct {
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	Compressed *string `json:"compressed,omitempty" tf:"compressed,omitempty"`

	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	ReadOnly *string `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	RestrictDownload *string `json:"restrictDownload,omitempty" tf:"restrict_download,omitempty"`

	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FileObjectParameters struct {

	// +kubebuilder:validation:Optional
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	// +kubebuilder:validation:Optional
	Compressed *string `json:"compressed,omitempty" tf:"compressed,omitempty"`

	// +kubebuilder:validation:Optional
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// +kubebuilder:validation:Optional
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	ReadOnly *string `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	// +kubebuilder:validation:Optional
	RestrictDownload *string `json:"restrictDownload,omitempty" tf:"restrict_download,omitempty"`

	// +kubebuilder:validation:Optional
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// FileObjectSpec defines the desired state of FileObject
type FileObjectSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FileObjectParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FileObjectInitParameters `json:"initProvider,omitempty"`
}

// FileObjectStatus defines the observed state of FileObject.
type FileObjectStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FileObjectObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FileObject is the Schema for the FileObjects API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type FileObject struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || has(self.initProvider.type)",message="type is a required parameter"
	Spec   FileObjectSpec   `json:"spec"`
	Status FileObjectStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FileObjectList contains a list of FileObjects
type FileObjectList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FileObject `json:"items"`
}

// Repository type metadata.
var (
	FileObject_Kind             = "FileObject"
	FileObject_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FileObject_Kind}.String()
	FileObject_KindAPIVersion   = FileObject_Kind + "." + CRDGroupVersion.String()
	FileObject_GroupVersionKind = CRDGroupVersion.WithKind(FileObject_Kind)
)

func init() {
	SchemeBuilder.Register(&FileObject{}, &FileObjectList{})
}
