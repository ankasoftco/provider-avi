/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureInfoInitParameters struct {
	CloudCredentialRef *string `json:"cloudCredentialRef,omitempty" tf:"cloud_credential_ref,omitempty"`

	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type AzureInfoObservation struct {
	CloudCredentialRef *string `json:"cloudCredentialRef,omitempty" tf:"cloud_credential_ref,omitempty"`

	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type AzureInfoParameters struct {

	// +kubebuilder:validation:Optional
	CloudCredentialRef *string `json:"cloudCredentialRef" tf:"cloud_credential_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId" tf:"subscription_id,omitempty"`
}

type ClusterCloudDetailsConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ClusterCloudDetailsConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ClusterCloudDetailsConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ClusterCloudDetailsInitParameters struct {
	AzureInfo []AzureInfoInitParameters `json:"azureInfo,omitempty" tf:"azure_info,omitempty"`

	ConfigpbAttributes []ClusterCloudDetailsConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ClusterCloudDetailsObservation struct {
	AzureInfo []AzureInfoObservation `json:"azureInfo,omitempty" tf:"azure_info,omitempty"`

	ConfigpbAttributes []ClusterCloudDetailsConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ClusterCloudDetailsParameters struct {

	// +kubebuilder:validation:Optional
	AzureInfo []AzureInfoParameters `json:"azureInfo,omitempty" tf:"azure_info,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []ClusterCloudDetailsConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// ClusterCloudDetailsSpec defines the desired state of ClusterCloudDetails
type ClusterCloudDetailsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterCloudDetailsParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterCloudDetailsInitParameters `json:"initProvider,omitempty"`
}

// ClusterCloudDetailsStatus defines the observed state of ClusterCloudDetails.
type ClusterCloudDetailsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterCloudDetailsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterCloudDetails is the Schema for the ClusterCloudDetailss API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type ClusterCloudDetails struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   ClusterCloudDetailsSpec   `json:"spec"`
	Status ClusterCloudDetailsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterCloudDetailsList contains a list of ClusterCloudDetailss
type ClusterCloudDetailsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterCloudDetails `json:"items"`
}

// Repository type metadata.
var (
	ClusterCloudDetails_Kind             = "ClusterCloudDetails"
	ClusterCloudDetails_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterCloudDetails_Kind}.String()
	ClusterCloudDetails_KindAPIVersion   = ClusterCloudDetails_Kind + "." + CRDGroupVersion.String()
	ClusterCloudDetails_GroupVersionKind = CRDGroupVersion.WithKind(ClusterCloudDetails_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterCloudDetails{}, &ClusterCloudDetailsList{})
}
