/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigInitParameters struct {
	AllowedHTTPVersions []*string `json:"allowedHttpVersions,omitempty" tf:"allowed_http_versions,omitempty"`

	AllowedMethods []*string `json:"allowedMethods,omitempty" tf:"allowed_methods,omitempty"`

	AllowedRequestContentTypeCharsets []*string `json:"allowedRequestContentTypeCharsets,omitempty" tf:"allowed_request_content_type_charsets,omitempty"`

	ArgumentSeparator *string `json:"argumentSeparator,omitempty" tf:"argument_separator,omitempty"`

	ClientRequestMaxBodySize *string `json:"clientRequestMaxBodySize,omitempty" tf:"client_request_max_body_size,omitempty"`

	ContentTypeMappings []ContentTypeMappingsInitParameters `json:"contentTypeMappings,omitempty" tf:"content_type_mappings,omitempty"`

	CookieFormatVersion *string `json:"cookieFormatVersion,omitempty" tf:"cookie_format_version,omitempty"`

	IgnoreIncompleteRequestBodyError *string `json:"ignoreIncompleteRequestBodyError,omitempty" tf:"ignore_incomplete_request_body_error,omitempty"`

	MaxExecutionTime *string `json:"maxExecutionTime,omitempty" tf:"max_execution_time,omitempty"`

	RegexMatchLimit *string `json:"regexMatchLimit,omitempty" tf:"regex_match_limit,omitempty"`

	RegexRecursionLimit *string `json:"regexRecursionLimit,omitempty" tf:"regex_recursion_limit,omitempty"`

	RequestBodyDefaultAction *string `json:"requestBodyDefaultAction,omitempty" tf:"request_body_default_action,omitempty"`

	RequestHdrDefaultAction *string `json:"requestHdrDefaultAction,omitempty" tf:"request_hdr_default_action,omitempty"`

	ResponseBodyDefaultAction *string `json:"responseBodyDefaultAction,omitempty" tf:"response_body_default_action,omitempty"`

	ResponseHdrDefaultAction *string `json:"responseHdrDefaultAction,omitempty" tf:"response_hdr_default_action,omitempty"`

	RestrictedExtensions []*string `json:"restrictedExtensions,omitempty" tf:"restricted_extensions,omitempty"`

	RestrictedHeaders []*string `json:"restrictedHeaders,omitempty" tf:"restricted_headers,omitempty"`

	SendStatusHeader *string `json:"sendStatusHeader,omitempty" tf:"send_status_header,omitempty"`

	ServerResponseMaxBodySize *string `json:"serverResponseMaxBodySize,omitempty" tf:"server_response_max_body_size,omitempty"`

	StaticExtensions []*string `json:"staticExtensions,omitempty" tf:"static_extensions,omitempty"`

	StatusCodeForRejectedRequests *string `json:"statusCodeForRejectedRequests,omitempty" tf:"status_code_for_rejected_requests,omitempty"`

	StatusHeaderName *string `json:"statusHeaderName,omitempty" tf:"status_header_name,omitempty"`

	XMLXxeProtection *string `json:"xmlXxeProtection,omitempty" tf:"xml_xxe_protection,omitempty"`
}

type ConfigObservation struct {
	AllowedHTTPVersions []*string `json:"allowedHttpVersions,omitempty" tf:"allowed_http_versions,omitempty"`

	AllowedMethods []*string `json:"allowedMethods,omitempty" tf:"allowed_methods,omitempty"`

	AllowedRequestContentTypeCharsets []*string `json:"allowedRequestContentTypeCharsets,omitempty" tf:"allowed_request_content_type_charsets,omitempty"`

	ArgumentSeparator *string `json:"argumentSeparator,omitempty" tf:"argument_separator,omitempty"`

	ClientRequestMaxBodySize *string `json:"clientRequestMaxBodySize,omitempty" tf:"client_request_max_body_size,omitempty"`

	ContentTypeMappings []ContentTypeMappingsObservation `json:"contentTypeMappings,omitempty" tf:"content_type_mappings,omitempty"`

	CookieFormatVersion *string `json:"cookieFormatVersion,omitempty" tf:"cookie_format_version,omitempty"`

	IgnoreIncompleteRequestBodyError *string `json:"ignoreIncompleteRequestBodyError,omitempty" tf:"ignore_incomplete_request_body_error,omitempty"`

	MaxExecutionTime *string `json:"maxExecutionTime,omitempty" tf:"max_execution_time,omitempty"`

	RegexMatchLimit *string `json:"regexMatchLimit,omitempty" tf:"regex_match_limit,omitempty"`

	RegexRecursionLimit *string `json:"regexRecursionLimit,omitempty" tf:"regex_recursion_limit,omitempty"`

	RequestBodyDefaultAction *string `json:"requestBodyDefaultAction,omitempty" tf:"request_body_default_action,omitempty"`

	RequestHdrDefaultAction *string `json:"requestHdrDefaultAction,omitempty" tf:"request_hdr_default_action,omitempty"`

	ResponseBodyDefaultAction *string `json:"responseBodyDefaultAction,omitempty" tf:"response_body_default_action,omitempty"`

	ResponseHdrDefaultAction *string `json:"responseHdrDefaultAction,omitempty" tf:"response_hdr_default_action,omitempty"`

	RestrictedExtensions []*string `json:"restrictedExtensions,omitempty" tf:"restricted_extensions,omitempty"`

	RestrictedHeaders []*string `json:"restrictedHeaders,omitempty" tf:"restricted_headers,omitempty"`

	SendStatusHeader *string `json:"sendStatusHeader,omitempty" tf:"send_status_header,omitempty"`

	ServerResponseMaxBodySize *string `json:"serverResponseMaxBodySize,omitempty" tf:"server_response_max_body_size,omitempty"`

	StaticExtensions []*string `json:"staticExtensions,omitempty" tf:"static_extensions,omitempty"`

	StatusCodeForRejectedRequests *string `json:"statusCodeForRejectedRequests,omitempty" tf:"status_code_for_rejected_requests,omitempty"`

	StatusHeaderName *string `json:"statusHeaderName,omitempty" tf:"status_header_name,omitempty"`

	XMLXxeProtection *string `json:"xmlXxeProtection,omitempty" tf:"xml_xxe_protection,omitempty"`
}

type ConfigParameters struct {

	// +kubebuilder:validation:Optional
	AllowedHTTPVersions []*string `json:"allowedHttpVersions,omitempty" tf:"allowed_http_versions,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedMethods []*string `json:"allowedMethods,omitempty" tf:"allowed_methods,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedRequestContentTypeCharsets []*string `json:"allowedRequestContentTypeCharsets,omitempty" tf:"allowed_request_content_type_charsets,omitempty"`

	// +kubebuilder:validation:Optional
	ArgumentSeparator *string `json:"argumentSeparator,omitempty" tf:"argument_separator,omitempty"`

	// +kubebuilder:validation:Optional
	ClientRequestMaxBodySize *string `json:"clientRequestMaxBodySize,omitempty" tf:"client_request_max_body_size,omitempty"`

	// +kubebuilder:validation:Optional
	ContentTypeMappings []ContentTypeMappingsParameters `json:"contentTypeMappings,omitempty" tf:"content_type_mappings,omitempty"`

	// +kubebuilder:validation:Optional
	CookieFormatVersion *string `json:"cookieFormatVersion,omitempty" tf:"cookie_format_version,omitempty"`

	// +kubebuilder:validation:Optional
	IgnoreIncompleteRequestBodyError *string `json:"ignoreIncompleteRequestBodyError,omitempty" tf:"ignore_incomplete_request_body_error,omitempty"`

	// +kubebuilder:validation:Optional
	MaxExecutionTime *string `json:"maxExecutionTime,omitempty" tf:"max_execution_time,omitempty"`

	// +kubebuilder:validation:Optional
	RegexMatchLimit *string `json:"regexMatchLimit,omitempty" tf:"regex_match_limit,omitempty"`

	// +kubebuilder:validation:Optional
	RegexRecursionLimit *string `json:"regexRecursionLimit,omitempty" tf:"regex_recursion_limit,omitempty"`

	// +kubebuilder:validation:Optional
	RequestBodyDefaultAction *string `json:"requestBodyDefaultAction,omitempty" tf:"request_body_default_action,omitempty"`

	// +kubebuilder:validation:Optional
	RequestHdrDefaultAction *string `json:"requestHdrDefaultAction,omitempty" tf:"request_hdr_default_action,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseBodyDefaultAction *string `json:"responseBodyDefaultAction,omitempty" tf:"response_body_default_action,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHdrDefaultAction *string `json:"responseHdrDefaultAction,omitempty" tf:"response_hdr_default_action,omitempty"`

	// +kubebuilder:validation:Optional
	RestrictedExtensions []*string `json:"restrictedExtensions,omitempty" tf:"restricted_extensions,omitempty"`

	// +kubebuilder:validation:Optional
	RestrictedHeaders []*string `json:"restrictedHeaders,omitempty" tf:"restricted_headers,omitempty"`

	// +kubebuilder:validation:Optional
	SendStatusHeader *string `json:"sendStatusHeader,omitempty" tf:"send_status_header,omitempty"`

	// +kubebuilder:validation:Optional
	ServerResponseMaxBodySize *string `json:"serverResponseMaxBodySize,omitempty" tf:"server_response_max_body_size,omitempty"`

	// +kubebuilder:validation:Optional
	StaticExtensions []*string `json:"staticExtensions,omitempty" tf:"static_extensions,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCodeForRejectedRequests *string `json:"statusCodeForRejectedRequests,omitempty" tf:"status_code_for_rejected_requests,omitempty"`

	// +kubebuilder:validation:Optional
	StatusHeaderName *string `json:"statusHeaderName,omitempty" tf:"status_header_name,omitempty"`

	// +kubebuilder:validation:Optional
	XMLXxeProtection *string `json:"xmlXxeProtection,omitempty" tf:"xml_xxe_protection,omitempty"`
}

type ContentTypeMappingsInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	RequestBodyParser *string `json:"requestBodyParser,omitempty" tf:"request_body_parser,omitempty"`
}

type ContentTypeMappingsObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	RequestBodyParser *string `json:"requestBodyParser,omitempty" tf:"request_body_parser,omitempty"`
}

type ContentTypeMappingsParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	// +kubebuilder:validation:Optional
	RequestBodyParser *string `json:"requestBodyParser" tf:"request_body_parser,omitempty"`
}

type WafProfileConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafProfileConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafProfileConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafProfileFilesInitParameters struct {
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WafProfileFilesObservation struct {
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WafProfileFilesParameters struct {

	// +kubebuilder:validation:Optional
	Data *string `json:"data" tf:"data,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WafProfileInitParameters struct {
	Config []ConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	ConfigpbAttributes []WafProfileConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Files []WafProfileFilesInitParameters `json:"files,omitempty" tf:"files,omitempty"`

	Markers []WafProfileMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafProfileMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafProfileMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafProfileMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafProfileObservation struct {
	Config []ConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	ConfigpbAttributes []WafProfileConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Files []WafProfileFilesObservation `json:"files,omitempty" tf:"files,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []WafProfileMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafProfileParameters struct {

	// +kubebuilder:validation:Optional
	Config []ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []WafProfileConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Files []WafProfileFilesParameters `json:"files,omitempty" tf:"files,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []WafProfileMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// WafProfileSpec defines the desired state of WafProfile
type WafProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WafProfileParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WafProfileInitParameters `json:"initProvider,omitempty"`
}

// WafProfileStatus defines the observed state of WafProfile.
type WafProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WafProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafProfile is the Schema for the WafProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type WafProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.config) || has(self.initProvider.config)",message="config is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   WafProfileSpec   `json:"spec"`
	Status WafProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafProfileList contains a list of WafProfiles
type WafProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafProfile `json:"items"`
}

// Repository type metadata.
var (
	WafProfile_Kind             = "WafProfile"
	WafProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WafProfile_Kind}.String()
	WafProfile_KindAPIVersion   = WafProfile_Kind + "." + CRDGroupVersion.String()
	WafProfile_GroupVersionKind = CRDGroupVersion.WithKind(WafProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&WafProfile{}, &WafProfileList{})
}
