/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessTokenInitParameters struct {
	Matches []MatchesInitParameters `json:"matches,omitempty" tf:"matches,omitempty"`

	TokenName *string `json:"tokenName,omitempty" tf:"token_name,omitempty"`
}

type AccessTokenObservation struct {
	Matches []MatchesObservation `json:"matches,omitempty" tf:"matches,omitempty"`

	TokenName *string `json:"tokenName,omitempty" tf:"token_name,omitempty"`
}

type AccessTokenParameters struct {

	// +kubebuilder:validation:Optional
	Matches []MatchesParameters `json:"matches,omitempty" tf:"matches,omitempty"`

	// +kubebuilder:validation:Optional
	TokenName *string `json:"tokenName,omitempty" tf:"token_name,omitempty"`
}

type AttrMatchesInitParameters struct {
	AttributeName *string `json:"attributeName,omitempty" tf:"attribute_name,omitempty"`

	AttributeValueList []AttributeValueListInitParameters `json:"attributeValueList,omitempty" tf:"attribute_value_list,omitempty"`
}

type AttrMatchesObservation struct {
	AttributeName *string `json:"attributeName,omitempty" tf:"attribute_name,omitempty"`

	AttributeValueList []AttributeValueListObservation `json:"attributeValueList,omitempty" tf:"attribute_value_list,omitempty"`
}

type AttrMatchesParameters struct {

	// +kubebuilder:validation:Optional
	AttributeName *string `json:"attributeName" tf:"attribute_name,omitempty"`

	// +kubebuilder:validation:Optional
	AttributeValueList []AttributeValueListParameters `json:"attributeValueList" tf:"attribute_value_list,omitempty"`
}

type AttributeValueListInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AttributeValueListObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AttributeValueListParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthenticationPolicyInitParameters struct {
	AuthnRules []AuthnRulesInitParameters `json:"authnRules,omitempty" tf:"authn_rules,omitempty"`

	DefaultAuthProfileRef *string `json:"defaultAuthProfileRef,omitempty" tf:"default_auth_profile_ref,omitempty"`
}

type AuthenticationPolicyObservation struct {
	AuthnRules []AuthnRulesObservation `json:"authnRules,omitempty" tf:"authn_rules,omitempty"`

	DefaultAuthProfileRef *string `json:"defaultAuthProfileRef,omitempty" tf:"default_auth_profile_ref,omitempty"`
}

type AuthenticationPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AuthnRules []AuthnRulesParameters `json:"authnRules,omitempty" tf:"authn_rules,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultAuthProfileRef *string `json:"defaultAuthProfileRef,omitempty" tf:"default_auth_profile_ref,omitempty"`
}

type AuthnRulesActionInitParameters struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesActionObservation struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesActionParameters struct {

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesInitParameters struct {
	Action []AuthnRulesActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AuthnRulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AuthnRulesMatchClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPInitParameters struct {
	Addrs []AuthnRulesMatchClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AuthnRulesMatchClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AuthnRulesMatchClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AuthnRulesMatchClientIPObservation struct {
	Addrs []AuthnRulesMatchClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AuthnRulesMatchClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AuthnRulesMatchClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AuthnRulesMatchClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []AuthnRulesMatchClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []AuthnRulesMatchClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []AuthnRulesMatchClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesInitParameters struct {
	IPAddr []AuthnRulesMatchClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesObservation struct {
	IPAddr []AuthnRulesMatchClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AuthnRulesMatchClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []AuthnRulesMatchClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type AuthnRulesMatchClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AuthnRulesMatchClientIPRangesInitParameters struct {
	Begin []AuthnRulesMatchClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AuthnRulesMatchClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type AuthnRulesMatchClientIPRangesObservation struct {
	Begin []AuthnRulesMatchClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AuthnRulesMatchClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type AuthnRulesMatchClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []AuthnRulesMatchClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []AuthnRulesMatchClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type AuthnRulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthnRulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthnRulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthnRulesMatchInitParameters struct {
	ClientIP []AuthnRulesMatchClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	HostHdr []AuthnRulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Path []AuthnRulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthnRulesMatchObservation struct {
	ClientIP []AuthnRulesMatchClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	HostHdr []AuthnRulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Path []AuthnRulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthnRulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	ClientIP []AuthnRulesMatchClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []AuthnRulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	Path []AuthnRulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthnRulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthnRulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthnRulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthnRulesObservation struct {
	Action []AuthnRulesActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AuthnRulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AuthnRulesParameters struct {

	// +kubebuilder:validation:Optional
	Action []AuthnRulesActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Match []AuthnRulesMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type AuthorizationPolicyInitParameters struct {
	AuthzRules []AuthzRulesInitParameters `json:"authzRules,omitempty" tf:"authz_rules,omitempty"`
}

type AuthorizationPolicyObservation struct {
	AuthzRules []AuthzRulesObservation `json:"authzRules,omitempty" tf:"authz_rules,omitempty"`
}

type AuthorizationPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AuthzRules []AuthzRulesParameters `json:"authzRules,omitempty" tf:"authz_rules,omitempty"`
}

type AuthzRulesActionInitParameters struct {
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthzRulesActionObservation struct {
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthzRulesActionParameters struct {

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthzRulesInitParameters struct {
	Action []AuthzRulesActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AuthzRulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AuthzRulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthzRulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthzRulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AuthzRulesMatchInitParameters struct {
	AccessToken []AccessTokenInitParameters `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	AttrMatches []AttrMatchesInitParameters `json:"attrMatches,omitempty" tf:"attr_matches,omitempty"`

	HostHdr []AuthzRulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Method []AuthzRulesMatchMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []AuthzRulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthzRulesMatchMethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type AuthzRulesMatchMethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type AuthzRulesMatchMethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type AuthzRulesMatchObservation struct {
	AccessToken []AccessTokenObservation `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	AttrMatches []AttrMatchesObservation `json:"attrMatches,omitempty" tf:"attr_matches,omitempty"`

	HostHdr []AuthzRulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Method []AuthzRulesMatchMethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []AuthzRulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthzRulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	AccessToken []AccessTokenParameters `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	// +kubebuilder:validation:Optional
	AttrMatches []AttrMatchesParameters `json:"attrMatches,omitempty" tf:"attr_matches,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []AuthzRulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AuthzRulesMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []AuthzRulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type AuthzRulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthzRulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthzRulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AuthzRulesObservation struct {
	Action []AuthzRulesActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AuthzRulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AuthzRulesParameters struct {

	// +kubebuilder:validation:Optional
	Action []AuthzRulesActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Match []AuthzRulesMatchParameters `json:"match" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type MatchesInitParameters struct {
	BoolMatch *string `json:"boolMatch,omitempty" tf:"bool_match,omitempty"`

	IntMatch *string `json:"intMatch,omitempty" tf:"int_match,omitempty"`

	IsMandatory *string `json:"isMandatory,omitempty" tf:"is_mandatory,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	StringMatch []StringMatchInitParameters `json:"stringMatch,omitempty" tf:"string_match,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Validate *string `json:"validate,omitempty" tf:"validate,omitempty"`
}

type MatchesObservation struct {
	BoolMatch *string `json:"boolMatch,omitempty" tf:"bool_match,omitempty"`

	IntMatch *string `json:"intMatch,omitempty" tf:"int_match,omitempty"`

	IsMandatory *string `json:"isMandatory,omitempty" tf:"is_mandatory,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	StringMatch []StringMatchObservation `json:"stringMatch,omitempty" tf:"string_match,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Validate *string `json:"validate,omitempty" tf:"validate,omitempty"`
}

type MatchesParameters struct {

	// +kubebuilder:validation:Optional
	BoolMatch *string `json:"boolMatch,omitempty" tf:"bool_match,omitempty"`

	// +kubebuilder:validation:Optional
	IntMatch *string `json:"intMatch,omitempty" tf:"int_match,omitempty"`

	// +kubebuilder:validation:Optional
	IsMandatory *string `json:"isMandatory" tf:"is_mandatory,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	StringMatch []StringMatchParameters `json:"stringMatch,omitempty" tf:"string_match,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	Validate *string `json:"validate" tf:"validate,omitempty"`
}

type SsoPolicyConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SsoPolicyConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SsoPolicyConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SsoPolicyInitParameters struct {
	AuthenticationPolicy []AuthenticationPolicyInitParameters `json:"authenticationPolicy,omitempty" tf:"authentication_policy,omitempty"`

	AuthorizationPolicy []AuthorizationPolicyInitParameters `json:"authorizationPolicy,omitempty" tf:"authorization_policy,omitempty"`

	ConfigpbAttributes []SsoPolicyConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Markers []SsoPolicyMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type SsoPolicyMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SsoPolicyMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SsoPolicyMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SsoPolicyObservation struct {
	AuthenticationPolicy []AuthenticationPolicyObservation `json:"authenticationPolicy,omitempty" tf:"authentication_policy,omitempty"`

	AuthorizationPolicy []AuthorizationPolicyObservation `json:"authorizationPolicy,omitempty" tf:"authorization_policy,omitempty"`

	ConfigpbAttributes []SsoPolicyConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []SsoPolicyMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type SsoPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AuthenticationPolicy []AuthenticationPolicyParameters `json:"authenticationPolicy,omitempty" tf:"authentication_policy,omitempty"`

	// +kubebuilder:validation:Optional
	AuthorizationPolicy []AuthorizationPolicyParameters `json:"authorizationPolicy,omitempty" tf:"authorization_policy,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []SsoPolicyConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []SsoPolicyMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type StringMatchInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type StringMatchObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type StringMatchParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

// SsoPolicySpec defines the desired state of SsoPolicy
type SsoPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SsoPolicyParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SsoPolicyInitParameters `json:"initProvider,omitempty"`
}

// SsoPolicyStatus defines the observed state of SsoPolicy.
type SsoPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SsoPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SsoPolicy is the Schema for the SsoPolicys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type SsoPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   SsoPolicySpec   `json:"spec"`
	Status SsoPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SsoPolicyList contains a list of SsoPolicys
type SsoPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SsoPolicy `json:"items"`
}

// Repository type metadata.
var (
	SsoPolicy_Kind             = "SsoPolicy"
	SsoPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SsoPolicy_Kind}.String()
	SsoPolicy_KindAPIVersion   = SsoPolicy_Kind + "." + CRDGroupVersion.String()
	SsoPolicy_GroupVersionKind = CRDGroupVersion.WithKind(SsoPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&SsoPolicy{}, &SsoPolicyList{})
}
