/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BotDetectionResultClassificationsInitParameters struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type BotDetectionResultClassificationsObservation struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type BotDetectionResultClassificationsParameters struct {

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type HTTPPolicySetConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPPolicySetConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPPolicySetConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPPolicySetInitParameters struct {
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	ConfigpbAttributes []HTTPPolicySetConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	HTTPRequestPolicy []HTTPRequestPolicyInitParameters `json:"httpRequestPolicy,omitempty" tf:"http_request_policy,omitempty"`

	HTTPResponsePolicy []HTTPResponsePolicyInitParameters `json:"httpResponsePolicy,omitempty" tf:"http_response_policy,omitempty"`

	HTTPSecurityPolicy []HTTPSecurityPolicyInitParameters `json:"httpSecurityPolicy,omitempty" tf:"http_security_policy,omitempty"`

	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	IsInternalPolicy *string `json:"isInternalPolicy,omitempty" tf:"is_internal_policy,omitempty"`

	Markers []HTTPPolicySetMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HTTPPolicySetMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPPolicySetMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPPolicySetMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPPolicySetObservation struct {
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	ConfigpbAttributes []HTTPPolicySetConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	HTTPRequestPolicy []HTTPRequestPolicyObservation `json:"httpRequestPolicy,omitempty" tf:"http_request_policy,omitempty"`

	HTTPResponsePolicy []HTTPResponsePolicyObservation `json:"httpResponsePolicy,omitempty" tf:"http_response_policy,omitempty"`

	HTTPSecurityPolicy []HTTPSecurityPolicyObservation `json:"httpSecurityPolicy,omitempty" tf:"http_security_policy,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	IsInternalPolicy *string `json:"isInternalPolicy,omitempty" tf:"is_internal_policy,omitempty"`

	Markers []HTTPPolicySetMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HTTPPolicySetParameters struct {

	// +kubebuilder:validation:Optional
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []HTTPPolicySetConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRequestPolicy []HTTPRequestPolicyParameters `json:"httpRequestPolicy,omitempty" tf:"http_request_policy,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPResponsePolicy []HTTPResponsePolicyParameters `json:"httpResponsePolicy,omitempty" tf:"http_response_policy,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPSecurityPolicy []HTTPSecurityPolicyParameters `json:"httpSecurityPolicy,omitempty" tf:"http_security_policy,omitempty"`

	// +kubebuilder:validation:Optional
	IPReputationDBRef *string `json:"ipReputationDbRef,omitempty" tf:"ip_reputation_db_ref,omitempty"`

	// +kubebuilder:validation:Optional
	IsInternalPolicy *string `json:"isInternalPolicy,omitempty" tf:"is_internal_policy,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []HTTPPolicySetMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HTTPRequestPolicyInitParameters struct {
	Rules []HTTPRequestPolicyRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPRequestPolicyObservation struct {
	Rules []HTTPRequestPolicyRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPRequestPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Rules []HTTPRequestPolicyRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPRequestPolicyRulesInitParameters struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HdrAction []HdrActionInitParameters `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []RulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RedirectAction []RedirectActionInitParameters `json:"redirectAction,omitempty" tf:"redirect_action,omitempty"`

	RewriteURLAction []RewriteURLActionInitParameters `json:"rewriteUrlAction,omitempty" tf:"rewrite_url_action,omitempty"`

	SwitchingAction []SwitchingActionInitParameters `json:"switchingAction,omitempty" tf:"switching_action,omitempty"`
}

type HTTPRequestPolicyRulesObservation struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HdrAction []HdrActionObservation `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []RulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RedirectAction []RedirectActionObservation `json:"redirectAction,omitempty" tf:"redirect_action,omitempty"`

	RewriteURLAction []RewriteURLActionObservation `json:"rewriteUrlAction,omitempty" tf:"rewrite_url_action,omitempty"`

	SwitchingAction []SwitchingActionObservation `json:"switchingAction,omitempty" tf:"switching_action,omitempty"`
}

type HTTPRequestPolicyRulesParameters struct {

	// +kubebuilder:validation:Optional
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	HdrAction []HdrActionParameters `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// +kubebuilder:validation:Optional
	Match []RulesMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	RedirectAction []RedirectActionParameters `json:"redirectAction,omitempty" tf:"redirect_action,omitempty"`

	// +kubebuilder:validation:Optional
	RewriteURLAction []RewriteURLActionParameters `json:"rewriteUrlAction,omitempty" tf:"rewrite_url_action,omitempty"`

	// +kubebuilder:validation:Optional
	SwitchingAction []SwitchingActionParameters `json:"switchingAction,omitempty" tf:"switching_action,omitempty"`
}

type HTTPResponsePolicyInitParameters struct {
	Rules []HTTPResponsePolicyRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPResponsePolicyObservation struct {
	Rules []HTTPResponsePolicyRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPResponsePolicyParameters struct {

	// +kubebuilder:validation:Optional
	Rules []HTTPResponsePolicyRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPResponsePolicyRulesInitParameters struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HdrAction []RulesHdrActionInitParameters `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	LocHdrAction []LocHdrActionInitParameters `json:"locHdrAction,omitempty" tf:"loc_hdr_action,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []HTTPResponsePolicyRulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPInitParameters struct {
	Addrs []RulesMatchClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []RulesMatchClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPResponsePolicyRulesMatchClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPObservation struct {
	Addrs []RulesMatchClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []RulesMatchClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPResponsePolicyRulesMatchClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []RulesMatchClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []RulesMatchClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []HTTPResponsePolicyRulesMatchClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPRangesInitParameters struct {
	Begin []RulesMatchClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RulesMatchClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPRangesObservation struct {
	Begin []RulesMatchClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RulesMatchClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPResponsePolicyRulesMatchClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []RulesMatchClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []RulesMatchClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type HTTPResponsePolicyRulesMatchHdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchHdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchHdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPResponsePolicyRulesMatchInitParameters struct {
	ClientIP []HTTPResponsePolicyRulesMatchClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []RulesMatchCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdrs []HTTPResponsePolicyRulesMatchHdrsInitParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HTTPResponsePolicyRulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	LocHdr []LocHdrInitParameters `json:"locHdr,omitempty" tf:"loc_hdr,omitempty"`

	Method []HTTPResponsePolicyRulesMatchMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []HTTPResponsePolicyRulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []HTTPResponsePolicyRulesMatchProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []RulesMatchQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	RspHdrs []RspHdrsInitParameters `json:"rspHdrs,omitempty" tf:"rsp_hdrs,omitempty"`

	SourceIP []RulesMatchSourceIPInitParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	Status []StatusInitParameters `json:"status,omitempty" tf:"status,omitempty"`

	Version []RulesMatchVersionInitParameters `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []RulesMatchVsPortInitParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPResponsePolicyRulesMatchMethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type HTTPResponsePolicyRulesMatchMethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type HTTPResponsePolicyRulesMatchMethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type HTTPResponsePolicyRulesMatchObservation struct {
	ClientIP []HTTPResponsePolicyRulesMatchClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []RulesMatchCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdrs []HTTPResponsePolicyRulesMatchHdrsObservation `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HTTPResponsePolicyRulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	LocHdr []LocHdrObservation `json:"locHdr,omitempty" tf:"loc_hdr,omitempty"`

	Method []HTTPResponsePolicyRulesMatchMethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []HTTPResponsePolicyRulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []HTTPResponsePolicyRulesMatchProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []RulesMatchQueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	RspHdrs []RspHdrsObservation `json:"rspHdrs,omitempty" tf:"rsp_hdrs,omitempty"`

	SourceIP []RulesMatchSourceIPObservation `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	Status []StatusObservation `json:"status,omitempty" tf:"status,omitempty"`

	Version []RulesMatchVersionObservation `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []RulesMatchVsPortObservation `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPResponsePolicyRulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	ClientIP []HTTPResponsePolicyRulesMatchClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []RulesMatchCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	Hdrs []HTTPResponsePolicyRulesMatchHdrsParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []HTTPResponsePolicyRulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	LocHdr []LocHdrParameters `json:"locHdr,omitempty" tf:"loc_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	Method []HTTPResponsePolicyRulesMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []HTTPResponsePolicyRulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []HTTPResponsePolicyRulesMatchProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query []RulesMatchQueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	RspHdrs []RspHdrsParameters `json:"rspHdrs,omitempty" tf:"rsp_hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP []RulesMatchSourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Status []StatusParameters `json:"status,omitempty" tf:"status,omitempty"`

	// +kubebuilder:validation:Optional
	Version []RulesMatchVersionParameters `json:"version,omitempty" tf:"version,omitempty"`

	// +kubebuilder:validation:Optional
	VsPort []RulesMatchVsPortParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPResponsePolicyRulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPResponsePolicyRulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPResponsePolicyRulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPResponsePolicyRulesMatchProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type HTTPResponsePolicyRulesMatchProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type HTTPResponsePolicyRulesMatchProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocols *string `json:"protocols" tf:"protocols,omitempty"`
}

type HTTPResponsePolicyRulesObservation struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HdrAction []RulesHdrActionObservation `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	LocHdrAction []LocHdrActionObservation `json:"locHdrAction,omitempty" tf:"loc_hdr_action,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []HTTPResponsePolicyRulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPResponsePolicyRulesParameters struct {

	// +kubebuilder:validation:Optional
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	HdrAction []RulesHdrActionParameters `json:"hdrAction,omitempty" tf:"hdr_action,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	LocHdrAction []LocHdrActionParameters `json:"locHdrAction,omitempty" tf:"loc_hdr_action,omitempty"`

	// +kubebuilder:validation:Optional
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// +kubebuilder:validation:Optional
	Match []HTTPResponsePolicyRulesMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type HTTPSecurityPolicyInitParameters struct {
	Rules []HTTPSecurityPolicyRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPSecurityPolicyObservation struct {
	Rules []HTTPSecurityPolicyRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPSecurityPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Rules []HTTPSecurityPolicyRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HTTPSecurityPolicyRulesInitParameters struct {
	Action []RulesActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []HTTPSecurityPolicyRulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPInitParameters struct {
	Addrs []HTTPSecurityPolicyRulesMatchClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []HTTPSecurityPolicyRulesMatchClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPSecurityPolicyRulesMatchClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPObservation struct {
	Addrs []HTTPSecurityPolicyRulesMatchClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []HTTPSecurityPolicyRulesMatchClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPSecurityPolicyRulesMatchClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []HTTPSecurityPolicyRulesMatchClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []HTTPSecurityPolicyRulesMatchClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []HTTPSecurityPolicyRulesMatchClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesInitParameters struct {
	IPAddr []HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesObservation struct {
	IPAddr []HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []HTTPSecurityPolicyRulesMatchClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesInitParameters struct {
	Begin []HTTPSecurityPolicyRulesMatchClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []HTTPSecurityPolicyRulesMatchClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesObservation struct {
	Begin []HTTPSecurityPolicyRulesMatchClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []HTTPSecurityPolicyRulesMatchClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []HTTPSecurityPolicyRulesMatchClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []HTTPSecurityPolicyRulesMatchClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchCookieInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchCookieObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchCookieParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPSecurityPolicyRulesMatchInitParameters struct {
	BotDetectionResult []RulesMatchBotDetectionResultInitParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []HTTPSecurityPolicyRulesMatchClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []HTTPSecurityPolicyRulesMatchCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []RulesMatchGeoMatchesInitParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []HTTPSecurityPolicyRulesMatchHdrsInitParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HTTPSecurityPolicyRulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []RulesMatchIPReputationTypeInitParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []HTTPSecurityPolicyRulesMatchMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []HTTPSecurityPolicyRulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []HTTPSecurityPolicyRulesMatchProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []HTTPSecurityPolicyRulesMatchQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []HTTPSecurityPolicyRulesMatchSourceIPInitParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []RulesMatchTLSFingerprintMatchInitParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []HTTPSecurityPolicyRulesMatchVersionInitParameters `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []HTTPSecurityPolicyRulesMatchVsPortInitParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPSecurityPolicyRulesMatchMethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type HTTPSecurityPolicyRulesMatchMethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type HTTPSecurityPolicyRulesMatchMethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type HTTPSecurityPolicyRulesMatchObservation struct {
	BotDetectionResult []RulesMatchBotDetectionResultObservation `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []HTTPSecurityPolicyRulesMatchClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []HTTPSecurityPolicyRulesMatchCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []RulesMatchGeoMatchesObservation `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []HTTPSecurityPolicyRulesMatchHdrsObservation `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HTTPSecurityPolicyRulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []RulesMatchIPReputationTypeObservation `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []HTTPSecurityPolicyRulesMatchMethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []HTTPSecurityPolicyRulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []HTTPSecurityPolicyRulesMatchProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []HTTPSecurityPolicyRulesMatchQueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []HTTPSecurityPolicyRulesMatchSourceIPObservation `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []RulesMatchTLSFingerprintMatchObservation `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []HTTPSecurityPolicyRulesMatchVersionObservation `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []HTTPSecurityPolicyRulesMatchVsPortObservation `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPSecurityPolicyRulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	BotDetectionResult []RulesMatchBotDetectionResultParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP []HTTPSecurityPolicyRulesMatchClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []HTTPSecurityPolicyRulesMatchCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatches []RulesMatchGeoMatchesParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	// +kubebuilder:validation:Optional
	Hdrs []HTTPSecurityPolicyRulesMatchHdrsParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []HTTPSecurityPolicyRulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	IPReputationType []RulesMatchIPReputationTypeParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	// +kubebuilder:validation:Optional
	Method []HTTPSecurityPolicyRulesMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []HTTPSecurityPolicyRulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []HTTPSecurityPolicyRulesMatchProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query []HTTPSecurityPolicyRulesMatchQueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP []HTTPSecurityPolicyRulesMatchSourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatch []RulesMatchTLSFingerprintMatchParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	// +kubebuilder:validation:Optional
	Version []HTTPSecurityPolicyRulesMatchVersionParameters `json:"version,omitempty" tf:"version,omitempty"`

	// +kubebuilder:validation:Optional
	VsPort []HTTPSecurityPolicyRulesMatchVsPortParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type HTTPSecurityPolicyRulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type HTTPSecurityPolicyRulesMatchProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type HTTPSecurityPolicyRulesMatchProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocols *string `json:"protocols" tf:"protocols,omitempty"`
}

type HTTPSecurityPolicyRulesMatchQueryInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchQueryObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchQueryParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPInitParameters struct {
	Addrs []HTTPSecurityPolicyRulesMatchSourceIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []HTTPSecurityPolicyRulesMatchSourceIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPSecurityPolicyRulesMatchSourceIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPObservation struct {
	Addrs []HTTPSecurityPolicyRulesMatchSourceIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []HTTPSecurityPolicyRulesMatchSourceIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []HTTPSecurityPolicyRulesMatchSourceIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []HTTPSecurityPolicyRulesMatchSourceIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []HTTPSecurityPolicyRulesMatchSourceIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []HTTPSecurityPolicyRulesMatchSourceIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesInitParameters struct {
	IPAddr []HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesObservation struct {
	IPAddr []HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []HTTPSecurityPolicyRulesMatchSourceIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesInitParameters struct {
	Begin []HTTPSecurityPolicyRulesMatchSourceIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []HTTPSecurityPolicyRulesMatchSourceIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesObservation struct {
	Begin []HTTPSecurityPolicyRulesMatchSourceIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []HTTPSecurityPolicyRulesMatchSourceIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchSourceIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []HTTPSecurityPolicyRulesMatchSourceIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []HTTPSecurityPolicyRulesMatchSourceIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVersionInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVersionObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVersionParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Versions []*string `json:"versions" tf:"versions,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVsPortInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVsPortObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type HTTPSecurityPolicyRulesMatchVsPortParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*float64 `json:"ports" tf:"ports,omitempty"`
}

type HTTPSecurityPolicyRulesObservation struct {
	Action []RulesActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []HTTPSecurityPolicyRulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPSecurityPolicyRulesParameters struct {

	// +kubebuilder:validation:Optional
	Action []RulesActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// +kubebuilder:validation:Optional
	Match []HTTPSecurityPolicyRulesMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type HdrActionCookieInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionCookieObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionCookieParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionHdrInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value []HdrValueInitParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionHdrObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value []HdrValueObservation `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionHdrParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value []HdrValueParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrActionInitParameters struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	Cookie []HdrActionCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdr []HdrInitParameters `json:"hdr,omitempty" tf:"hdr,omitempty"`

	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type HdrActionObservation struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	Cookie []HdrActionCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdr []HdrObservation `json:"hdr,omitempty" tf:"hdr,omitempty"`

	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type HdrActionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []HdrActionCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	Hdr []HdrParameters `json:"hdr,omitempty" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type HdrInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value []ValueInitParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value []ValueObservation `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value []ValueParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrValueInitParameters struct {
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

type HdrValueObservation struct {
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

type HdrValueParameters struct {

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	// +kubebuilder:validation:Optional
	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

type HostHdrTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostHdrTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostHdrTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LocHdrActionHostInitParameters struct {
	Tokens []LocHdrActionHostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionHostObservation struct {
	Tokens []LocHdrActionHostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []LocHdrActionHostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LocHdrActionHostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionHostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionHostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LocHdrActionInitParameters struct {
	Host []LocHdrActionHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []LocHdrActionPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type LocHdrActionObservation struct {
	Host []LocHdrActionHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []LocHdrActionPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type LocHdrActionParameters struct {

	// +kubebuilder:validation:Optional
	Host []LocHdrActionHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []LocHdrActionPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`
}

type LocHdrActionPathInitParameters struct {
	Tokens []LocHdrActionPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionPathObservation struct {
	Tokens []LocHdrActionPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []LocHdrActionPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LocHdrActionPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocHdrActionPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LocHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type LocHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type LocHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchBotDetectionResultClassificationsInitParameters struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type MatchBotDetectionResultClassificationsObservation struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type MatchBotDetectionResultClassificationsParameters struct {

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type MatchBotDetectionResultInitParameters struct {
	Classifications []BotDetectionResultClassificationsInitParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type MatchBotDetectionResultObservation struct {
	Classifications []BotDetectionResultClassificationsObservation `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type MatchBotDetectionResultParameters struct {

	// +kubebuilder:validation:Optional
	Classifications []BotDetectionResultClassificationsParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`
}

type MatchClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchClientIPPrefixesInitParameters struct {
	IPAddr []MatchClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchClientIPPrefixesObservation struct {
	IPAddr []MatchClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []MatchClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type MatchClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchCookieInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchCookieObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchCookieParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchGeoMatchesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MatchGeoMatchesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MatchGeoMatchesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type MatchIPReputationTypeInitParameters struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type MatchIPReputationTypeObservation struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type MatchIPReputationTypeParameters struct {

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	ReputationTypes []*string `json:"reputationTypes" tf:"reputation_types,omitempty"`
}

type MatchQueryInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchQueryObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchQueryParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchSourceIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchSourceIPInitParameters struct {
	Addrs []MatchSourceIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchSourceIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []MatchSourceIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchSourceIPObservation struct {
	Addrs []MatchSourceIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchSourceIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []MatchSourceIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchSourceIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []MatchSourceIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []MatchSourceIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []MatchSourceIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchSourceIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchSourceIPPrefixesInitParameters struct {
	IPAddr []MatchSourceIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchSourceIPPrefixesObservation struct {
	IPAddr []MatchSourceIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchSourceIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []MatchSourceIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type MatchSourceIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchSourceIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchSourceIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchSourceIPRangesInitParameters struct {
	Begin []MatchSourceIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchSourceIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type MatchSourceIPRangesObservation struct {
	Begin []MatchSourceIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchSourceIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type MatchSourceIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []MatchSourceIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []MatchSourceIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type MatchTLSFingerprintMatchInitParameters struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchTLSFingerprintMatchObservation struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchTLSFingerprintMatchParameters struct {

	// +kubebuilder:validation:Optional
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchVersionInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type MatchVersionObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type MatchVersionParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Versions []*string `json:"versions" tf:"versions,omitempty"`
}

type MatchVsPortInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type MatchVsPortObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type MatchVsPortParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*float64 `json:"ports" tf:"ports,omitempty"`
}

type RateProfileActionFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RateProfileActionFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RateProfileActionFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RateProfileActionInitParameters struct {
	File []RateProfileActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []RateProfileActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionObservation struct {
	File []RateProfileActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []RateProfileActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionParameters struct {

	// +kubebuilder:validation:Optional
	File []RateProfileActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []RateProfileActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostInitParameters struct {
	Tokens []RateProfileActionRedirectHostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostObservation struct {
	Tokens []RateProfileActionRedirectHostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RateProfileActionRedirectHostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectHostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateProfileActionRedirectInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RateProfileActionRedirectHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RateProfileActionRedirectPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RateProfileActionRedirectObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RateProfileActionRedirectHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RateProfileActionRedirectPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RateProfileActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	Host []RateProfileActionRedirectHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RateProfileActionRedirectPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RateProfileActionRedirectPathInitParameters struct {
	Tokens []RateProfileActionRedirectPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectPathObservation struct {
	Tokens []RateProfileActionRedirectPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RateProfileActionRedirectPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateProfileActionRedirectPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RateProfileActionRedirectPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateProfileInitParameters struct {
	Action []RateProfileActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	PerClientIP *string `json:"perClientIp,omitempty" tf:"per_client_ip,omitempty"`

	PerURIPath *string `json:"perUriPath,omitempty" tf:"per_uri_path,omitempty"`

	RateLimiter []RateProfileRateLimiterInitParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RateProfileObservation struct {
	Action []RateProfileActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	PerClientIP *string `json:"perClientIp,omitempty" tf:"per_client_ip,omitempty"`

	PerURIPath *string `json:"perUriPath,omitempty" tf:"per_uri_path,omitempty"`

	RateLimiter []RateProfileRateLimiterObservation `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RateProfileParameters struct {

	// +kubebuilder:validation:Optional
	Action []RateProfileActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	PerClientIP *string `json:"perClientIp,omitempty" tf:"per_client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	PerURIPath *string `json:"perUriPath,omitempty" tf:"per_uri_path,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiter []RateProfileRateLimiterParameters `json:"rateLimiter" tf:"rate_limiter,omitempty"`
}

type RateProfileRateLimiterInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateProfileRateLimiterObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateProfileRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RedirectActionHostInitParameters struct {
	Tokens []RedirectActionHostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionHostObservation struct {
	Tokens []RedirectActionHostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RedirectActionHostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectActionHostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionHostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionHostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectActionInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RedirectActionHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RedirectActionPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RedirectActionObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RedirectActionHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RedirectActionPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RedirectActionParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	Host []RedirectActionHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RedirectActionPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RedirectActionPathInitParameters struct {
	Tokens []RedirectActionPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionPathObservation struct {
	Tokens []RedirectActionPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RedirectActionPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectActionPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectActionPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RewriteURLActionHostHdrInitParameters struct {
	Tokens []HostHdrTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionHostHdrObservation struct {
	Tokens []HostHdrTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []HostHdrTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RewriteURLActionInitParameters struct {
	HostHdr []RewriteURLActionHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Path []RewriteURLActionPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Query []RewriteURLActionQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`
}

type RewriteURLActionObservation struct {
	HostHdr []RewriteURLActionHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	Path []RewriteURLActionPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Query []RewriteURLActionQueryObservation `json:"query,omitempty" tf:"query,omitempty"`
}

type RewriteURLActionParameters struct {

	// +kubebuilder:validation:Optional
	HostHdr []RewriteURLActionHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RewriteURLActionPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Query []RewriteURLActionQueryParameters `json:"query,omitempty" tf:"query,omitempty"`
}

type RewriteURLActionPathInitParameters struct {
	Tokens []RewriteURLActionPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionPathObservation struct {
	Tokens []RewriteURLActionPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RewriteURLActionPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RewriteURLActionPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RewriteURLActionPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RewriteURLActionQueryInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`
}

type RewriteURLActionQueryObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`
}

type RewriteURLActionQueryParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`
}

type RspHdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RspHdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RspHdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesActionFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RulesActionFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RulesActionFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RulesActionInitParameters struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	File []RulesActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	HTTPSPort *string `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	RateProfile []RateProfileInitParameters `json:"rateProfile,omitempty" tf:"rate_profile,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RulesActionObservation struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	File []RulesActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	HTTPSPort *string `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	RateProfile []RateProfileObservation `json:"rateProfile,omitempty" tf:"rate_profile,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RulesActionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	File []RulesActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPSPort *string `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	// +kubebuilder:validation:Optional
	RateProfile []RateProfileParameters `json:"rateProfile,omitempty" tf:"rate_profile,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RulesHdrActionCookieInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesHdrActionCookieObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesHdrActionCookieParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesHdrActionInitParameters struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	Cookie []RulesHdrActionCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdr []HdrActionHdrInitParameters `json:"hdr,omitempty" tf:"hdr,omitempty"`

	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type RulesHdrActionObservation struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	Cookie []RulesHdrActionCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	Hdr []HdrActionHdrObservation `json:"hdr,omitempty" tf:"hdr,omitempty"`

	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type RulesHdrActionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []RulesHdrActionCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	Hdr []HdrActionHdrParameters `json:"hdr,omitempty" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	HdrIndex *string `json:"hdrIndex,omitempty" tf:"hdr_index,omitempty"`
}

type RulesMatchBotDetectionResultInitParameters struct {
	Classifications []MatchBotDetectionResultClassificationsInitParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type RulesMatchBotDetectionResultObservation struct {
	Classifications []MatchBotDetectionResultClassificationsObservation `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type RulesMatchBotDetectionResultParameters struct {

	// +kubebuilder:validation:Optional
	Classifications []MatchBotDetectionResultClassificationsParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`
}

type RulesMatchClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchClientIPInitParameters struct {
	Addrs []MatchClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []RulesMatchClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchClientIPObservation struct {
	Addrs []MatchClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []RulesMatchClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []MatchClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []MatchClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []RulesMatchClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchClientIPPrefixesInitParameters struct {
	IPAddr []RulesMatchClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RulesMatchClientIPPrefixesObservation struct {
	IPAddr []RulesMatchClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RulesMatchClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []RulesMatchClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type RulesMatchClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchClientIPRangesInitParameters struct {
	Begin []MatchClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type RulesMatchClientIPRangesObservation struct {
	Begin []MatchClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type RulesMatchClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []MatchClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []MatchClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type RulesMatchCookieInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchCookieObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchCookieParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchGeoMatchesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type RulesMatchGeoMatchesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type RulesMatchGeoMatchesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type RulesMatchHdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchHdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchHdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesMatchIPReputationTypeInitParameters struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type RulesMatchIPReputationTypeObservation struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type RulesMatchIPReputationTypeParameters struct {

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	ReputationTypes []*string `json:"reputationTypes" tf:"reputation_types,omitempty"`
}

type RulesMatchInitParameters struct {
	BotDetectionResult []MatchBotDetectionResultInitParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []RulesMatchClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []MatchCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []MatchGeoMatchesInitParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []RulesMatchHdrsInitParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []RulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []MatchIPReputationTypeInitParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []RulesMatchMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []RulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []RulesMatchProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []MatchQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []MatchSourceIPInitParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []MatchTLSFingerprintMatchInitParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []MatchVersionInitParameters `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []MatchVsPortInitParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type RulesMatchMethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type RulesMatchMethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type RulesMatchMethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type RulesMatchObservation struct {
	BotDetectionResult []MatchBotDetectionResultObservation `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []RulesMatchClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []MatchCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []MatchGeoMatchesObservation `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []RulesMatchHdrsObservation `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []RulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []MatchIPReputationTypeObservation `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []RulesMatchMethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []RulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []RulesMatchProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []MatchQueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []MatchSourceIPObservation `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []MatchTLSFingerprintMatchObservation `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []MatchVersionObservation `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []MatchVsPortObservation `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type RulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	BotDetectionResult []MatchBotDetectionResultParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP []RulesMatchClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []MatchCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatches []MatchGeoMatchesParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	// +kubebuilder:validation:Optional
	Hdrs []RulesMatchHdrsParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []RulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	IPReputationType []MatchIPReputationTypeParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RulesMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []RulesMatchProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query []MatchQueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP []MatchSourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatch []MatchTLSFingerprintMatchParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	// +kubebuilder:validation:Optional
	Version []MatchVersionParameters `json:"version,omitempty" tf:"version,omitempty"`

	// +kubebuilder:validation:Optional
	VsPort []MatchVsPortParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type RulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type RulesMatchProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type RulesMatchProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocols *string `json:"protocols" tf:"protocols,omitempty"`
}

type RulesMatchQueryInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchQueryObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchQueryParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchSourceIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchSourceIPInitParameters struct {
	Addrs []RulesMatchSourceIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []RulesMatchSourceIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []RulesMatchSourceIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchSourceIPObservation struct {
	Addrs []RulesMatchSourceIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []RulesMatchSourceIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []RulesMatchSourceIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchSourceIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []RulesMatchSourceIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []RulesMatchSourceIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []RulesMatchSourceIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type RulesMatchSourceIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchSourceIPPrefixesInitParameters struct {
	IPAddr []RulesMatchSourceIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RulesMatchSourceIPPrefixesObservation struct {
	IPAddr []RulesMatchSourceIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RulesMatchSourceIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []RulesMatchSourceIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type RulesMatchSourceIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RulesMatchSourceIPRangesInitParameters struct {
	Begin []RulesMatchSourceIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RulesMatchSourceIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type RulesMatchSourceIPRangesObservation struct {
	Begin []RulesMatchSourceIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RulesMatchSourceIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type RulesMatchSourceIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []RulesMatchSourceIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []RulesMatchSourceIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type RulesMatchTLSFingerprintMatchInitParameters struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchTLSFingerprintMatchObservation struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchTLSFingerprintMatchParameters struct {

	// +kubebuilder:validation:Optional
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RulesMatchVersionInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type RulesMatchVersionObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type RulesMatchVersionParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Versions []*string `json:"versions" tf:"versions,omitempty"`
}

type RulesMatchVsPortInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type RulesMatchVsPortObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type RulesMatchVsPortParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*float64 `json:"ports" tf:"ports,omitempty"`
}

type ServerIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServerIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServerIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatusInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ranges []StatusRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	StatusCodes []*float64 `json:"statusCodes,omitempty" tf:"status_codes,omitempty"`
}

type StatusObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ranges []StatusRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`

	StatusCodes []*float64 `json:"statusCodes,omitempty" tf:"status_codes,omitempty"`
}

type StatusParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []StatusRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCodes []*float64 `json:"statusCodes,omitempty" tf:"status_codes,omitempty"`
}

type StatusRangesInitParameters struct {
	Begin *string `json:"begin,omitempty" tf:"begin,omitempty"`

	End *string `json:"end,omitempty" tf:"end,omitempty"`
}

type StatusRangesObservation struct {
	Begin *string `json:"begin,omitempty" tf:"begin,omitempty"`

	End *string `json:"end,omitempty" tf:"end,omitempty"`
}

type StatusRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin *string `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end" tf:"end,omitempty"`
}

type SwitchingActionFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type SwitchingActionFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type SwitchingActionFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type SwitchingActionInitParameters struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	File []SwitchingActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	Server []SwitchingActionServerInitParameters `json:"server,omitempty" tf:"server,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type SwitchingActionObservation struct {
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	File []SwitchingActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	Server []SwitchingActionServerObservation `json:"server,omitempty" tf:"server,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type SwitchingActionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	File []SwitchingActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Server []SwitchingActionServerParameters `json:"server,omitempty" tf:"server,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type SwitchingActionServerInitParameters struct {
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []ServerIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type SwitchingActionServerObservation struct {
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []ServerIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type SwitchingActionServerParameters struct {

	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// +kubebuilder:validation:Optional
	IP []ServerIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type ValueInitParameters struct {
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

type ValueObservation struct {
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

type ValueParameters struct {

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Val *string `json:"val,omitempty" tf:"val,omitempty"`

	// +kubebuilder:validation:Optional
	Var *string `json:"var,omitempty" tf:"var,omitempty"`
}

// HTTPPolicySetSpec defines the desired state of HTTPPolicySet
type HTTPPolicySetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HTTPPolicySetParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HTTPPolicySetInitParameters `json:"initProvider,omitempty"`
}

// HTTPPolicySetStatus defines the observed state of HTTPPolicySet.
type HTTPPolicySetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HTTPPolicySetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HTTPPolicySet is the Schema for the HTTPPolicySets API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type HTTPPolicySet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   HTTPPolicySetSpec   `json:"spec"`
	Status HTTPPolicySetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HTTPPolicySetList contains a list of HTTPPolicySets
type HTTPPolicySetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HTTPPolicySet `json:"items"`
}

// Repository type metadata.
var (
	HTTPPolicySet_Kind             = "HTTPPolicySet"
	HTTPPolicySet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HTTPPolicySet_Kind}.String()
	HTTPPolicySet_KindAPIVersion   = HTTPPolicySet_Kind + "." + CRDGroupVersion.String()
	HTTPPolicySet_GroupVersionKind = CRDGroupVersion.WithKind(HTTPPolicySet_Kind)
)

func init() {
	SchemeBuilder.Register(&HTTPPolicySet{}, &HTTPPolicySetList{})
}
