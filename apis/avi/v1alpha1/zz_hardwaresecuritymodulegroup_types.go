/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudhsmInitParameters struct {
	ClientConfig *string `json:"clientConfig,omitempty" tf:"client_config,omitempty"`

	ClusterCert *string `json:"clusterCert,omitempty" tf:"cluster_cert,omitempty"`

	CryptoUserName *string `json:"cryptoUserName,omitempty" tf:"crypto_user_name,omitempty"`

	HSMIP []*string `json:"hsmIp,omitempty" tf:"hsm_ip,omitempty"`

	MgmtConfig *string `json:"mgmtConfig,omitempty" tf:"mgmt_config,omitempty"`
}

type CloudhsmObservation struct {
	ClientConfig *string `json:"clientConfig,omitempty" tf:"client_config,omitempty"`

	ClusterCert *string `json:"clusterCert,omitempty" tf:"cluster_cert,omitempty"`

	CryptoUserName *string `json:"cryptoUserName,omitempty" tf:"crypto_user_name,omitempty"`

	HSMIP []*string `json:"hsmIp,omitempty" tf:"hsm_ip,omitempty"`

	MgmtConfig *string `json:"mgmtConfig,omitempty" tf:"mgmt_config,omitempty"`
}

type CloudhsmParameters struct {

	// +kubebuilder:validation:Optional
	ClientConfig *string `json:"clientConfig,omitempty" tf:"client_config,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterCert *string `json:"clusterCert,omitempty" tf:"cluster_cert,omitempty"`

	// +kubebuilder:validation:Optional
	CryptoUserName *string `json:"cryptoUserName,omitempty" tf:"crypto_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	CryptoUserPasswordSecretRef *v1.SecretKeySelector `json:"cryptoUserPasswordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	HSMIP []*string `json:"hsmIp,omitempty" tf:"hsm_ip,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtConfig *string `json:"mgmtConfig,omitempty" tf:"mgmt_config,omitempty"`
}

type HSMInitParameters struct {
	Cloudhsm []CloudhsmInitParameters `json:"cloudhsm,omitempty" tf:"cloudhsm,omitempty"`

	Nethsm []NethsmInitParameters `json:"nethsm,omitempty" tf:"nethsm,omitempty"`

	Rfs []RfsInitParameters `json:"rfs,omitempty" tf:"rfs,omitempty"`

	Sluna []SlunaInitParameters `json:"sluna,omitempty" tf:"sluna,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HSMObservation struct {
	Cloudhsm []CloudhsmObservation `json:"cloudhsm,omitempty" tf:"cloudhsm,omitempty"`

	Nethsm []NethsmObservation `json:"nethsm,omitempty" tf:"nethsm,omitempty"`

	Rfs []RfsObservation `json:"rfs,omitempty" tf:"rfs,omitempty"`

	Sluna []SlunaObservation `json:"sluna,omitempty" tf:"sluna,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HSMParameters struct {

	// +kubebuilder:validation:Optional
	Cloudhsm []CloudhsmParameters `json:"cloudhsm,omitempty" tf:"cloudhsm,omitempty"`

	// +kubebuilder:validation:Optional
	Nethsm []NethsmParameters `json:"nethsm,omitempty" tf:"nethsm,omitempty"`

	// +kubebuilder:validation:Optional
	Rfs []RfsParameters `json:"rfs,omitempty" tf:"rfs,omitempty"`

	// +kubebuilder:validation:Optional
	Sluna []SlunaParameters `json:"sluna,omitempty" tf:"sluna,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HardwareSecurityModuleGroupConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HardwareSecurityModuleGroupConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HardwareSecurityModuleGroupConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HardwareSecurityModuleGroupInitParameters struct {
	ConfigpbAttributes []HardwareSecurityModuleGroupConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	HSM []HSMInitParameters `json:"hsm,omitempty" tf:"hsm,omitempty"`

	Markers []HardwareSecurityModuleGroupMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HardwareSecurityModuleGroupMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HardwareSecurityModuleGroupMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HardwareSecurityModuleGroupMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HardwareSecurityModuleGroupObservation struct {
	ConfigpbAttributes []HardwareSecurityModuleGroupConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	HSM []HSMObservation `json:"hsm,omitempty" tf:"hsm,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []HardwareSecurityModuleGroupMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HardwareSecurityModuleGroupParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []HardwareSecurityModuleGroupConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	HSM []HSMParameters `json:"hsm,omitempty" tf:"hsm,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []HardwareSecurityModuleGroupMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type NethsmInitParameters struct {
	Esn *string `json:"esn,omitempty" tf:"esn,omitempty"`

	Keyhash *string `json:"keyhash,omitempty" tf:"keyhash,omitempty"`

	ModuleID *string `json:"moduleId,omitempty" tf:"module_id,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	RemoteIP []RemoteIPInitParameters `json:"remoteIp,omitempty" tf:"remote_ip,omitempty"`

	RemotePort *string `json:"remotePort,omitempty" tf:"remote_port,omitempty"`
}

type NethsmObservation struct {
	Esn *string `json:"esn,omitempty" tf:"esn,omitempty"`

	Keyhash *string `json:"keyhash,omitempty" tf:"keyhash,omitempty"`

	ModuleID *string `json:"moduleId,omitempty" tf:"module_id,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	RemoteIP []RemoteIPObservation `json:"remoteIp,omitempty" tf:"remote_ip,omitempty"`

	RemotePort *string `json:"remotePort,omitempty" tf:"remote_port,omitempty"`
}

type NethsmParameters struct {

	// +kubebuilder:validation:Optional
	Esn *string `json:"esn" tf:"esn,omitempty"`

	// +kubebuilder:validation:Optional
	Keyhash *string `json:"keyhash" tf:"keyhash,omitempty"`

	// +kubebuilder:validation:Optional
	ModuleID *string `json:"moduleId,omitempty" tf:"module_id,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *string `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteIP []RemoteIPParameters `json:"remoteIp" tf:"remote_ip,omitempty"`

	// +kubebuilder:validation:Optional
	RemotePort *string `json:"remotePort,omitempty" tf:"remote_port,omitempty"`
}

type NodeInfoInitParameters struct {
	ChrystokiConf *string `json:"chrystokiConf,omitempty" tf:"chrystoki_conf,omitempty"`

	ClientCert *string `json:"clientCert,omitempty" tf:"client_cert,omitempty"`

	ClientIP *string `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	SessionMajorNumber *string `json:"sessionMajorNumber,omitempty" tf:"session_major_number,omitempty"`

	SessionMinorNumber *string `json:"sessionMinorNumber,omitempty" tf:"session_minor_number,omitempty"`
}

type NodeInfoObservation struct {
	ChrystokiConf *string `json:"chrystokiConf,omitempty" tf:"chrystoki_conf,omitempty"`

	ClientCert *string `json:"clientCert,omitempty" tf:"client_cert,omitempty"`

	ClientIP *string `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	SessionMajorNumber *string `json:"sessionMajorNumber,omitempty" tf:"session_major_number,omitempty"`

	SessionMinorNumber *string `json:"sessionMinorNumber,omitempty" tf:"session_minor_number,omitempty"`
}

type NodeInfoParameters struct {

	// +kubebuilder:validation:Optional
	ChrystokiConf *string `json:"chrystokiConf,omitempty" tf:"chrystoki_conf,omitempty"`

	// +kubebuilder:validation:Optional
	ClientCert *string `json:"clientCert,omitempty" tf:"client_cert,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP *string `json:"clientIp" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	ClientPrivKeySecretRef *v1.SecretKeySelector `json:"clientPrivKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SessionMajorNumber *string `json:"sessionMajorNumber,omitempty" tf:"session_major_number,omitempty"`

	// +kubebuilder:validation:Optional
	SessionMinorNumber *string `json:"sessionMinorNumber,omitempty" tf:"session_minor_number,omitempty"`
}

type RemoteIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RemoteIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RemoteIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RfsIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RfsIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RfsIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RfsInitParameters struct {
	IP []RfsIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type RfsObservation struct {
	IP []RfsIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type RfsParameters struct {

	// +kubebuilder:validation:Optional
	IP []RfsIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type SlunaInitParameters struct {
	HaGroupNum *string `json:"haGroupNum,omitempty" tf:"ha_group_num,omitempty"`

	IsHa *string `json:"isHa,omitempty" tf:"is_ha,omitempty"`

	NodeInfo []NodeInfoInitParameters `json:"nodeInfo,omitempty" tf:"node_info,omitempty"`

	Server []SlunaServerInitParameters `json:"server,omitempty" tf:"server,omitempty"`

	ServerPem *string `json:"serverPem,omitempty" tf:"server_pem,omitempty"`

	UseDedicatedNetwork *string `json:"useDedicatedNetwork,omitempty" tf:"use_dedicated_network,omitempty"`
}

type SlunaObservation struct {
	HaGroupNum *string `json:"haGroupNum,omitempty" tf:"ha_group_num,omitempty"`

	IsHa *string `json:"isHa,omitempty" tf:"is_ha,omitempty"`

	NodeInfo []NodeInfoObservation `json:"nodeInfo,omitempty" tf:"node_info,omitempty"`

	Server []SlunaServerObservation `json:"server,omitempty" tf:"server,omitempty"`

	ServerPem *string `json:"serverPem,omitempty" tf:"server_pem,omitempty"`

	UseDedicatedNetwork *string `json:"useDedicatedNetwork,omitempty" tf:"use_dedicated_network,omitempty"`
}

type SlunaParameters struct {

	// +kubebuilder:validation:Optional
	HaGroupNum *string `json:"haGroupNum,omitempty" tf:"ha_group_num,omitempty"`

	// +kubebuilder:validation:Optional
	IsHa *string `json:"isHa" tf:"is_ha,omitempty"`

	// +kubebuilder:validation:Optional
	NodeInfo []NodeInfoParameters `json:"nodeInfo,omitempty" tf:"node_info,omitempty"`

	// +kubebuilder:validation:Optional
	Server []SlunaServerParameters `json:"server,omitempty" tf:"server,omitempty"`

	// +kubebuilder:validation:Optional
	ServerPem *string `json:"serverPem,omitempty" tf:"server_pem,omitempty"`

	// +kubebuilder:validation:Optional
	UseDedicatedNetwork *string `json:"useDedicatedNetwork,omitempty" tf:"use_dedicated_network,omitempty"`
}

type SlunaServerInitParameters struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	PartitionSerialNumber *string `json:"partitionSerialNumber,omitempty" tf:"partition_serial_number,omitempty"`

	RemoteIP *string `json:"remoteIp,omitempty" tf:"remote_ip,omitempty"`

	ServerCert *string `json:"serverCert,omitempty" tf:"server_cert,omitempty"`
}

type SlunaServerObservation struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	PartitionSerialNumber *string `json:"partitionSerialNumber,omitempty" tf:"partition_serial_number,omitempty"`

	RemoteIP *string `json:"remoteIp,omitempty" tf:"remote_ip,omitempty"`

	ServerCert *string `json:"serverCert,omitempty" tf:"server_cert,omitempty"`
}

type SlunaServerParameters struct {

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	PartitionPasswdSecretRef *v1.SecretKeySelector `json:"partitionPasswdSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	PartitionSerialNumber *string `json:"partitionSerialNumber,omitempty" tf:"partition_serial_number,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteIP *string `json:"remoteIp" tf:"remote_ip,omitempty"`

	// +kubebuilder:validation:Optional
	ServerCert *string `json:"serverCert" tf:"server_cert,omitempty"`
}

// HardwareSecurityModuleGroupSpec defines the desired state of HardwareSecurityModuleGroup
type HardwareSecurityModuleGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HardwareSecurityModuleGroupParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HardwareSecurityModuleGroupInitParameters `json:"initProvider,omitempty"`
}

// HardwareSecurityModuleGroupStatus defines the observed state of HardwareSecurityModuleGroup.
type HardwareSecurityModuleGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HardwareSecurityModuleGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HardwareSecurityModuleGroup is the Schema for the HardwareSecurityModuleGroups API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type HardwareSecurityModuleGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hsm) || has(self.initProvider.hsm)",message="hsm is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   HardwareSecurityModuleGroupSpec   `json:"spec"`
	Status HardwareSecurityModuleGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HardwareSecurityModuleGroupList contains a list of HardwareSecurityModuleGroups
type HardwareSecurityModuleGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HardwareSecurityModuleGroup `json:"items"`
}

// Repository type metadata.
var (
	HardwareSecurityModuleGroup_Kind             = "HardwareSecurityModuleGroup"
	HardwareSecurityModuleGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HardwareSecurityModuleGroup_Kind}.String()
	HardwareSecurityModuleGroup_KindAPIVersion   = HardwareSecurityModuleGroup_Kind + "." + CRDGroupVersion.String()
	HardwareSecurityModuleGroup_GroupVersionKind = CRDGroupVersion.WithKind(HardwareSecurityModuleGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&HardwareSecurityModuleGroup{}, &HardwareSecurityModuleGroupList{})
}
