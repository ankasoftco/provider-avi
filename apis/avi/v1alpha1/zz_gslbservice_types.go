/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DownResponseInitParameters struct {
	FallbackIP []FallbackIPInitParameters `json:"fallbackIp,omitempty" tf:"fallback_ip,omitempty"`

	FallbackIp6 []FallbackIp6InitParameters `json:"fallbackIp6,omitempty" tf:"fallback_ip6,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DownResponseObservation struct {
	FallbackIP []FallbackIPObservation `json:"fallbackIp,omitempty" tf:"fallback_ip,omitempty"`

	FallbackIp6 []FallbackIp6Observation `json:"fallbackIp6,omitempty" tf:"fallback_ip6,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DownResponseParameters struct {

	// +kubebuilder:validation:Optional
	FallbackIP []FallbackIPParameters `json:"fallbackIp,omitempty" tf:"fallback_ip,omitempty"`

	// +kubebuilder:validation:Optional
	FallbackIp6 []FallbackIp6Parameters `json:"fallbackIp6,omitempty" tf:"fallback_ip6,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FallbackIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FallbackIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FallbackIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FallbackIp6InitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FallbackIp6Observation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FallbackIp6Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type GroupsInitParameters struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	ConsistentHashMask *string `json:"consistentHashMask,omitempty" tf:"consistent_hash_mask,omitempty"`

	ConsistentHashMask6 *string `json:"consistentHashMask6,omitempty" tf:"consistent_hash_mask6,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	FallbackAlgorithm *string `json:"fallbackAlgorithm,omitempty" tf:"fallback_algorithm,omitempty"`

	ManualResume *string `json:"manualResume,omitempty" tf:"manual_resume,omitempty"`

	Members []MembersInitParameters `json:"members,omitempty" tf:"members,omitempty"`

	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`
}

type GroupsObservation struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	ConsistentHashMask *string `json:"consistentHashMask,omitempty" tf:"consistent_hash_mask,omitempty"`

	ConsistentHashMask6 *string `json:"consistentHashMask6,omitempty" tf:"consistent_hash_mask6,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	FallbackAlgorithm *string `json:"fallbackAlgorithm,omitempty" tf:"fallback_algorithm,omitempty"`

	ManualResume *string `json:"manualResume,omitempty" tf:"manual_resume,omitempty"`

	Members []MembersObservation `json:"members,omitempty" tf:"members,omitempty"`

	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`
}

type GroupsParameters struct {

	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// +kubebuilder:validation:Optional
	ConsistentHashMask *string `json:"consistentHashMask,omitempty" tf:"consistent_hash_mask,omitempty"`

	// +kubebuilder:validation:Optional
	ConsistentHashMask6 *string `json:"consistentHashMask6,omitempty" tf:"consistent_hash_mask6,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	FallbackAlgorithm *string `json:"fallbackAlgorithm,omitempty" tf:"fallback_algorithm,omitempty"`

	// +kubebuilder:validation:Optional
	ManualResume *string `json:"manualResume,omitempty" tf:"manual_resume,omitempty"`

	// +kubebuilder:validation:Optional
	Members []MembersParameters `json:"members" tf:"members,omitempty"`

	// +kubebuilder:validation:Optional
	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`
}

type GslbServiceConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbServiceConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbServiceConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbServiceInitParameters struct {
	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	ConfigpbAttributes []GslbServiceConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ControllerHealthStatusEnabled *string `json:"controllerHealthStatusEnabled,omitempty" tf:"controller_health_status_enabled,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`

	DownResponse []DownResponseInitParameters `json:"downResponse,omitempty" tf:"down_response,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Groups []GroupsInitParameters `json:"groups,omitempty" tf:"groups,omitempty"`

	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	HealthMonitorScope *string `json:"healthMonitorScope,omitempty" tf:"health_monitor_scope,omitempty"`

	HmOff *string `json:"hmOff,omitempty" tf:"hm_off,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Markers []GslbServiceMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	MinMembers *string `json:"minMembers,omitempty" tf:"min_members,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NumDNSIP *string `json:"numDnsIp,omitempty" tf:"num_dns_ip,omitempty"`

	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	PoolAlgorithm *string `json:"poolAlgorithm,omitempty" tf:"pool_algorithm,omitempty"`

	ResolveCname *string `json:"resolveCname,omitempty" tf:"resolve_cname,omitempty"`

	SitePersistenceEnabled *string `json:"sitePersistenceEnabled,omitempty" tf:"site_persistence_enabled,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TopologyPolicyEnabled *string `json:"topologyPolicyEnabled,omitempty" tf:"topology_policy_enabled,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UseEdnsClientSubnet *string `json:"useEdnsClientSubnet,omitempty" tf:"use_edns_client_subnet,omitempty"`

	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type GslbServiceMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GslbServiceMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GslbServiceMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GslbServiceObservation struct {
	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	ConfigpbAttributes []GslbServiceConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ControllerHealthStatusEnabled *string `json:"controllerHealthStatusEnabled,omitempty" tf:"controller_health_status_enabled,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`

	DownResponse []DownResponseObservation `json:"downResponse,omitempty" tf:"down_response,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Groups []GroupsObservation `json:"groups,omitempty" tf:"groups,omitempty"`

	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	HealthMonitorScope *string `json:"healthMonitorScope,omitempty" tf:"health_monitor_scope,omitempty"`

	HmOff *string `json:"hmOff,omitempty" tf:"hm_off,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Markers []GslbServiceMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	MinMembers *string `json:"minMembers,omitempty" tf:"min_members,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NumDNSIP *string `json:"numDnsIp,omitempty" tf:"num_dns_ip,omitempty"`

	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	PoolAlgorithm *string `json:"poolAlgorithm,omitempty" tf:"pool_algorithm,omitempty"`

	ResolveCname *string `json:"resolveCname,omitempty" tf:"resolve_cname,omitempty"`

	SitePersistenceEnabled *string `json:"sitePersistenceEnabled,omitempty" tf:"site_persistence_enabled,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TopologyPolicyEnabled *string `json:"topologyPolicyEnabled,omitempty" tf:"topology_policy_enabled,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UseEdnsClientSubnet *string `json:"useEdnsClientSubnet,omitempty" tf:"use_edns_client_subnet,omitempty"`

	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type GslbServiceParameters struct {

	// +kubebuilder:validation:Optional
	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []GslbServiceConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ControllerHealthStatusEnabled *string `json:"controllerHealthStatusEnabled,omitempty" tf:"controller_health_status_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`

	// +kubebuilder:validation:Optional
	DownResponse []DownResponseParameters `json:"downResponse,omitempty" tf:"down_response,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Groups []GroupsParameters `json:"groups,omitempty" tf:"groups,omitempty"`

	// +kubebuilder:validation:Optional
	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	// +kubebuilder:validation:Optional
	HealthMonitorScope *string `json:"healthMonitorScope,omitempty" tf:"health_monitor_scope,omitempty"`

	// +kubebuilder:validation:Optional
	HmOff *string `json:"hmOff,omitempty" tf:"hm_off,omitempty"`

	// +kubebuilder:validation:Optional
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []GslbServiceMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	MinMembers *string `json:"minMembers,omitempty" tf:"min_members,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NumDNSIP *string `json:"numDnsIp,omitempty" tf:"num_dns_ip,omitempty"`

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PoolAlgorithm *string `json:"poolAlgorithm,omitempty" tf:"pool_algorithm,omitempty"`

	// +kubebuilder:validation:Optional
	ResolveCname *string `json:"resolveCname,omitempty" tf:"resolve_cname,omitempty"`

	// +kubebuilder:validation:Optional
	SitePersistenceEnabled *string `json:"sitePersistenceEnabled,omitempty" tf:"site_persistence_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TopologyPolicyEnabled *string `json:"topologyPolicyEnabled,omitempty" tf:"topology_policy_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UseEdnsClientSubnet *string `json:"useEdnsClientSubnet,omitempty" tf:"use_edns_client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type MembersIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MembersIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MembersIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MembersInitParameters struct {
	CloudUUID *string `json:"cloudUuid,omitempty" tf:"cloud_uuid,omitempty"`

	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []MembersIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Location []MembersLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	PublicIP []PublicIPInitParameters `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	ResolveFqdnToV6 *string `json:"resolveFqdnToV6,omitempty" tf:"resolve_fqdn_to_v6,omitempty"`

	VsUUID *string `json:"vsUuid,omitempty" tf:"vs_uuid,omitempty"`
}

type MembersLocationInitParameters struct {
	Location []MembersLocationLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type MembersLocationLocationInitParameters struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type MembersLocationLocationObservation struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type MembersLocationLocationParameters struct {

	// +kubebuilder:validation:Optional
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// +kubebuilder:validation:Optional
	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type MembersLocationObservation struct {
	Location []MembersLocationLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type MembersLocationParameters struct {

	// +kubebuilder:validation:Optional
	Location []MembersLocationLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`
}

type MembersObservation struct {
	CloudUUID *string `json:"cloudUuid,omitempty" tf:"cloud_uuid,omitempty"`

	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []MembersIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Location []MembersLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	PublicIP []PublicIPObservation `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	ResolveFqdnToV6 *string `json:"resolveFqdnToV6,omitempty" tf:"resolve_fqdn_to_v6,omitempty"`

	VsUUID *string `json:"vsUuid,omitempty" tf:"vs_uuid,omitempty"`
}

type MembersParameters struct {

	// +kubebuilder:validation:Optional
	CloudUUID *string `json:"cloudUuid,omitempty" tf:"cloud_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// +kubebuilder:validation:Optional
	IP []MembersIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Location []MembersLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	// +kubebuilder:validation:Optional
	PublicIP []PublicIPParameters `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	// +kubebuilder:validation:Optional
	ResolveFqdnToV6 *string `json:"resolveFqdnToV6,omitempty" tf:"resolve_fqdn_to_v6,omitempty"`

	// +kubebuilder:validation:Optional
	VsUUID *string `json:"vsUuid,omitempty" tf:"vs_uuid,omitempty"`
}

type PublicIPIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PublicIPIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PublicIPIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PublicIPInitParameters struct {
	IP []PublicIPIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`
}

type PublicIPObservation struct {
	IP []PublicIPIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`
}

type PublicIPParameters struct {

	// +kubebuilder:validation:Optional
	IP []PublicIPIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`
}

// GslbServiceSpec defines the desired state of GslbService
type GslbServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GslbServiceParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GslbServiceInitParameters `json:"initProvider,omitempty"`
}

// GslbServiceStatus defines the observed state of GslbService.
type GslbServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GslbServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GslbService is the Schema for the GslbServices API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type GslbService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.domainNames) || has(self.initProvider.domainNames)",message="domainNames is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.groups) || has(self.initProvider.groups)",message="groups is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   GslbServiceSpec   `json:"spec"`
	Status GslbServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GslbServiceList contains a list of GslbServices
type GslbServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GslbService `json:"items"`
}

// Repository type metadata.
var (
	GslbService_Kind             = "GslbService"
	GslbService_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GslbService_Kind}.String()
	GslbService_KindAPIVersion   = GslbService_Kind + "." + CRDGroupVersion.String()
	GslbService_GroupVersionKind = CRDGroupVersion.WithKind(GslbService_Kind)
)

func init() {
	SchemeBuilder.Register(&GslbService{}, &GslbServiceList{})
}
