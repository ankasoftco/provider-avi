/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowlistInitParameters struct {
	Rules []AllowlistRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type AllowlistObservation struct {
	Rules []AllowlistRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type AllowlistParameters struct {

	// +kubebuilder:validation:Optional
	Rules []AllowlistRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type AllowlistRulesInitParameters struct {
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AllowlistRulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`
}

type AllowlistRulesMatchBotDetectionResultInitParameters struct {
	Classifications []RulesMatchBotDetectionResultClassificationsInitParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type AllowlistRulesMatchBotDetectionResultObservation struct {
	Classifications []RulesMatchBotDetectionResultClassificationsObservation `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type AllowlistRulesMatchBotDetectionResultParameters struct {

	// +kubebuilder:validation:Optional
	Classifications []RulesMatchBotDetectionResultClassificationsParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`
}

type AllowlistRulesMatchClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPInitParameters struct {
	Addrs []AllowlistRulesMatchClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AllowlistRulesMatchClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AllowlistRulesMatchClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchClientIPObservation struct {
	Addrs []AllowlistRulesMatchClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AllowlistRulesMatchClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AllowlistRulesMatchClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []AllowlistRulesMatchClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []AllowlistRulesMatchClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []AllowlistRulesMatchClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesInitParameters struct {
	IPAddr []AllowlistRulesMatchClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesObservation struct {
	IPAddr []AllowlistRulesMatchClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AllowlistRulesMatchClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []AllowlistRulesMatchClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type AllowlistRulesMatchClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchClientIPRangesInitParameters struct {
	Begin []AllowlistRulesMatchClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AllowlistRulesMatchClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type AllowlistRulesMatchClientIPRangesObservation struct {
	Begin []AllowlistRulesMatchClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AllowlistRulesMatchClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type AllowlistRulesMatchClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []AllowlistRulesMatchClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []AllowlistRulesMatchClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type AllowlistRulesMatchCookieInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchCookieObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchCookieParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchGeoMatchesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AllowlistRulesMatchGeoMatchesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AllowlistRulesMatchGeoMatchesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AllowlistRulesMatchHdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchHdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchHdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchHostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchHostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchHostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowlistRulesMatchIPReputationTypeInitParameters struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type AllowlistRulesMatchIPReputationTypeObservation struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type AllowlistRulesMatchIPReputationTypeParameters struct {

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	ReputationTypes []*string `json:"reputationTypes" tf:"reputation_types,omitempty"`
}

type AllowlistRulesMatchInitParameters struct {
	BotDetectionResult []AllowlistRulesMatchBotDetectionResultInitParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []AllowlistRulesMatchClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []AllowlistRulesMatchCookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []AllowlistRulesMatchGeoMatchesInitParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []AllowlistRulesMatchHdrsInitParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []AllowlistRulesMatchHostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []AllowlistRulesMatchIPReputationTypeInitParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []AllowlistRulesMatchMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []AllowlistRulesMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []AllowlistRulesMatchProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []AllowlistRulesMatchQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []AllowlistRulesMatchSourceIPInitParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []AllowlistRulesMatchTLSFingerprintMatchInitParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []AllowlistRulesMatchVersionInitParameters `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []AllowlistRulesMatchVsPortInitParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type AllowlistRulesMatchMethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type AllowlistRulesMatchMethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type AllowlistRulesMatchMethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type AllowlistRulesMatchObservation struct {
	BotDetectionResult []AllowlistRulesMatchBotDetectionResultObservation `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []AllowlistRulesMatchClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []AllowlistRulesMatchCookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []AllowlistRulesMatchGeoMatchesObservation `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []AllowlistRulesMatchHdrsObservation `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []AllowlistRulesMatchHostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	IPReputationType []AllowlistRulesMatchIPReputationTypeObservation `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []AllowlistRulesMatchMethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []AllowlistRulesMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []AllowlistRulesMatchProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []AllowlistRulesMatchQueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []AllowlistRulesMatchSourceIPObservation `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []AllowlistRulesMatchTLSFingerprintMatchObservation `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []AllowlistRulesMatchVersionObservation `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []AllowlistRulesMatchVsPortObservation `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type AllowlistRulesMatchParameters struct {

	// +kubebuilder:validation:Optional
	BotDetectionResult []AllowlistRulesMatchBotDetectionResultParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP []AllowlistRulesMatchClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []AllowlistRulesMatchCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatches []AllowlistRulesMatchGeoMatchesParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	// +kubebuilder:validation:Optional
	Hdrs []AllowlistRulesMatchHdrsParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []AllowlistRulesMatchHostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	IPReputationType []AllowlistRulesMatchIPReputationTypeParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AllowlistRulesMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []AllowlistRulesMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []AllowlistRulesMatchProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query []AllowlistRulesMatchQueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP []AllowlistRulesMatchSourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatch []AllowlistRulesMatchTLSFingerprintMatchParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	// +kubebuilder:validation:Optional
	Version []AllowlistRulesMatchVersionParameters `json:"version,omitempty" tf:"version,omitempty"`

	// +kubebuilder:validation:Optional
	VsPort []AllowlistRulesMatchVsPortParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type AllowlistRulesMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type AllowlistRulesMatchProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type AllowlistRulesMatchProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocols *string `json:"protocols" tf:"protocols,omitempty"`
}

type AllowlistRulesMatchQueryInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchQueryObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchQueryParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchSourceIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPInitParameters struct {
	Addrs []AllowlistRulesMatchSourceIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AllowlistRulesMatchSourceIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AllowlistRulesMatchSourceIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchSourceIPObservation struct {
	Addrs []AllowlistRulesMatchSourceIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []AllowlistRulesMatchSourceIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []AllowlistRulesMatchSourceIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchSourceIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []AllowlistRulesMatchSourceIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []AllowlistRulesMatchSourceIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []AllowlistRulesMatchSourceIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesInitParameters struct {
	IPAddr []AllowlistRulesMatchSourceIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesObservation struct {
	IPAddr []AllowlistRulesMatchSourceIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type AllowlistRulesMatchSourceIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []AllowlistRulesMatchSourceIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesInitParameters struct {
	Begin []AllowlistRulesMatchSourceIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AllowlistRulesMatchSourceIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesObservation struct {
	Begin []AllowlistRulesMatchSourceIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []AllowlistRulesMatchSourceIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type AllowlistRulesMatchSourceIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []AllowlistRulesMatchSourceIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []AllowlistRulesMatchSourceIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type AllowlistRulesMatchTLSFingerprintMatchInitParameters struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchTLSFingerprintMatchObservation struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchTLSFingerprintMatchParameters struct {

	// +kubebuilder:validation:Optional
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type AllowlistRulesMatchVersionInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type AllowlistRulesMatchVersionObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type AllowlistRulesMatchVersionParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Versions []*string `json:"versions" tf:"versions,omitempty"`
}

type AllowlistRulesMatchVsPortInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type AllowlistRulesMatchVsPortObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type AllowlistRulesMatchVsPortParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*float64 `json:"ports" tf:"ports,omitempty"`
}

type AllowlistRulesObservation struct {
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []AllowlistRulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`
}

type AllowlistRulesParameters struct {

	// +kubebuilder:validation:Optional
	Actions []*string `json:"actions" tf:"actions,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Match []AllowlistRulesMatchParameters `json:"match" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`
}

type ApplicationSignaturesInitParameters struct {
	ProviderRef *string `json:"providerRef,omitempty" tf:"provider_ref,omitempty"`

	ResolvedRules []ResolvedRulesInitParameters `json:"resolvedRules,omitempty" tf:"resolved_rules,omitempty"`

	RuleOverrides []RuleOverridesInitParameters `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`

	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	SelectedApplications []*string `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`
}

type ApplicationSignaturesObservation struct {
	ProviderRef *string `json:"providerRef,omitempty" tf:"provider_ref,omitempty"`

	ResolvedRules []ResolvedRulesObservation `json:"resolvedRules,omitempty" tf:"resolved_rules,omitempty"`

	RuleOverrides []RuleOverridesObservation `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`

	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	SelectedApplications []*string `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`
}

type ApplicationSignaturesParameters struct {

	// +kubebuilder:validation:Optional
	ProviderRef *string `json:"providerRef,omitempty" tf:"provider_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ResolvedRules []ResolvedRulesParameters `json:"resolvedRules,omitempty" tf:"resolved_rules,omitempty"`

	// +kubebuilder:validation:Optional
	RuleOverrides []RuleOverridesParameters `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`

	// +kubebuilder:validation:Optional
	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	// +kubebuilder:validation:Optional
	SelectedApplications []*string `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`
}

type ConfidenceOverrideInitParameters struct {
	ConfidHighValue *string `json:"confidHighValue,omitempty" tf:"confid_high_value,omitempty"`

	ConfidLowValue *string `json:"confidLowValue,omitempty" tf:"confid_low_value,omitempty"`

	ConfidProbableValue *string `json:"confidProbableValue,omitempty" tf:"confid_probable_value,omitempty"`

	ConfidVeryHighValue *string `json:"confidVeryHighValue,omitempty" tf:"confid_very_high_value,omitempty"`
}

type ConfidenceOverrideObservation struct {
	ConfidHighValue *string `json:"confidHighValue,omitempty" tf:"confid_high_value,omitempty"`

	ConfidLowValue *string `json:"confidLowValue,omitempty" tf:"confid_low_value,omitempty"`

	ConfidProbableValue *string `json:"confidProbableValue,omitempty" tf:"confid_probable_value,omitempty"`

	ConfidVeryHighValue *string `json:"confidVeryHighValue,omitempty" tf:"confid_very_high_value,omitempty"`
}

type ConfidenceOverrideParameters struct {

	// +kubebuilder:validation:Optional
	ConfidHighValue *string `json:"confidHighValue,omitempty" tf:"confid_high_value,omitempty"`

	// +kubebuilder:validation:Optional
	ConfidLowValue *string `json:"confidLowValue,omitempty" tf:"confid_low_value,omitempty"`

	// +kubebuilder:validation:Optional
	ConfidProbableValue *string `json:"confidProbableValue,omitempty" tf:"confid_probable_value,omitempty"`

	// +kubebuilder:validation:Optional
	ConfidVeryHighValue *string `json:"confidVeryHighValue,omitempty" tf:"confid_very_high_value,omitempty"`
}

type CrsOverridesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CrsOverridesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CrsOverridesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type CrsOverridesExcludeListClientSubnetInitParameters struct {
	IPAddr []CrsOverridesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CrsOverridesExcludeListClientSubnetObservation struct {
	IPAddr []CrsOverridesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CrsOverridesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []CrsOverridesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type CrsOverridesExcludeListInitParameters struct {
	ClientSubnet []CrsOverridesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []CrsOverridesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []CrsOverridesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesExcludeListObservation struct {
	ClientSubnet []CrsOverridesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []CrsOverridesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []CrsOverridesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []CrsOverridesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []CrsOverridesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []CrsOverridesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []CrsOverridesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RuleOverrides []CrsOverridesRuleOverridesInitParameters `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`
}

type CrsOverridesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []CrsOverridesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RuleOverrides []CrsOverridesRuleOverridesObservation `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`
}

type CrsOverridesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []CrsOverridesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	RuleOverrides []CrsOverridesRuleOverridesParameters `json:"ruleOverrides,omitempty" tf:"rule_overrides,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetInitParameters struct {
	IPAddr []CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetObservation struct {
	IPAddr []CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []CrsOverridesRuleOverridesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListInitParameters struct {
	ClientSubnet []CrsOverridesRuleOverridesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []CrsOverridesRuleOverridesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []CrsOverridesRuleOverridesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListObservation struct {
	ClientSubnet []CrsOverridesRuleOverridesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []CrsOverridesRuleOverridesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []CrsOverridesRuleOverridesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []CrsOverridesRuleOverridesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []CrsOverridesRuleOverridesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []CrsOverridesRuleOverridesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type CrsOverridesRuleOverridesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []CrsOverridesRuleOverridesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type CrsOverridesRuleOverridesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []CrsOverridesRuleOverridesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type CrsOverridesRuleOverridesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []CrsOverridesRuleOverridesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId" tf:"rule_id,omitempty"`
}

type LearningParamsInitParameters struct {
	EnablePerURILearning *string `json:"enablePerUriLearning,omitempty" tf:"enable_per_uri_learning,omitempty"`

	LearnFromAuthenticatedClientsOnly *string `json:"learnFromAuthenticatedClientsOnly,omitempty" tf:"learn_from_authenticated_clients_only,omitempty"`

	MaxParams *string `json:"maxParams,omitempty" tf:"max_params,omitempty"`

	MaxUris *string `json:"maxUris,omitempty" tf:"max_uris,omitempty"`

	MinHitsToLearn *string `json:"minHitsToLearn,omitempty" tf:"min_hits_to_learn,omitempty"`

	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`

	TrustedIpgroupRef *string `json:"trustedIpgroupRef,omitempty" tf:"trusted_ipgroup_ref,omitempty"`

	UpdateInterval *string `json:"updateInterval,omitempty" tf:"update_interval,omitempty"`
}

type LearningParamsObservation struct {
	EnablePerURILearning *string `json:"enablePerUriLearning,omitempty" tf:"enable_per_uri_learning,omitempty"`

	LearnFromAuthenticatedClientsOnly *string `json:"learnFromAuthenticatedClientsOnly,omitempty" tf:"learn_from_authenticated_clients_only,omitempty"`

	MaxParams *string `json:"maxParams,omitempty" tf:"max_params,omitempty"`

	MaxUris *string `json:"maxUris,omitempty" tf:"max_uris,omitempty"`

	MinHitsToLearn *string `json:"minHitsToLearn,omitempty" tf:"min_hits_to_learn,omitempty"`

	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`

	TrustedIpgroupRef *string `json:"trustedIpgroupRef,omitempty" tf:"trusted_ipgroup_ref,omitempty"`

	UpdateInterval *string `json:"updateInterval,omitempty" tf:"update_interval,omitempty"`
}

type LearningParamsParameters struct {

	// +kubebuilder:validation:Optional
	EnablePerURILearning *string `json:"enablePerUriLearning,omitempty" tf:"enable_per_uri_learning,omitempty"`

	// +kubebuilder:validation:Optional
	LearnFromAuthenticatedClientsOnly *string `json:"learnFromAuthenticatedClientsOnly,omitempty" tf:"learn_from_authenticated_clients_only,omitempty"`

	// +kubebuilder:validation:Optional
	MaxParams *string `json:"maxParams,omitempty" tf:"max_params,omitempty"`

	// +kubebuilder:validation:Optional
	MaxUris *string `json:"maxUris,omitempty" tf:"max_uris,omitempty"`

	// +kubebuilder:validation:Optional
	MinHitsToLearn *string `json:"minHitsToLearn,omitempty" tf:"min_hits_to_learn,omitempty"`

	// +kubebuilder:validation:Optional
	SamplingPercent *string `json:"samplingPercent,omitempty" tf:"sampling_percent,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedIpgroupRef *string `json:"trustedIpgroupRef,omitempty" tf:"trusted_ipgroup_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UpdateInterval *string `json:"updateInterval,omitempty" tf:"update_interval,omitempty"`
}

type PositiveSecurityModelInitParameters struct {
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`
}

type PositiveSecurityModelObservation struct {
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`
}

type PositiveSecurityModelParameters struct {

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetInitParameters struct {
	IPAddr []PostCrsGroupsExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetObservation struct {
	IPAddr []PostCrsGroupsExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PostCrsGroupsExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PostCrsGroupsExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PostCrsGroupsExcludeListInitParameters struct {
	ClientSubnet []PostCrsGroupsExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PostCrsGroupsExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PostCrsGroupsExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsExcludeListObservation struct {
	ClientSubnet []PostCrsGroupsExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PostCrsGroupsExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PostCrsGroupsExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []PostCrsGroupsExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []PostCrsGroupsExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []PostCrsGroupsExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PostCrsGroupsExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PostCrsGroupsRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PostCrsGroupsObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PostCrsGroupsExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PostCrsGroupsRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PostCrsGroupsParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []PostCrsGroupsExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []PostCrsGroupsRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetInitParameters struct {
	IPAddr []PostCrsGroupsRulesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetObservation struct {
	IPAddr []PostCrsGroupsRulesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PostCrsGroupsRulesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PostCrsGroupsRulesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PostCrsGroupsRulesExcludeListInitParameters struct {
	ClientSubnet []PostCrsGroupsRulesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PostCrsGroupsRulesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PostCrsGroupsRulesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsRulesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesExcludeListObservation struct {
	ClientSubnet []PostCrsGroupsRulesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PostCrsGroupsRulesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PostCrsGroupsRulesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsRulesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []PostCrsGroupsRulesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []PostCrsGroupsRulesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []PostCrsGroupsRulesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PostCrsGroupsRulesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PostCrsGroupsRulesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PostCrsGroupsRulesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PostCrsGroupsRulesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PostCrsGroupsRulesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PostCrsGroupsRulesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []PostCrsGroupsRulesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetInitParameters struct {
	IPAddr []PreCrsGroupsExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetObservation struct {
	IPAddr []PreCrsGroupsExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PreCrsGroupsExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PreCrsGroupsExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PreCrsGroupsExcludeListInitParameters struct {
	ClientSubnet []PreCrsGroupsExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PreCrsGroupsExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PreCrsGroupsExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsExcludeListObservation struct {
	ClientSubnet []PreCrsGroupsExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PreCrsGroupsExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PreCrsGroupsExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []PreCrsGroupsExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []PreCrsGroupsExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []PreCrsGroupsExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PreCrsGroupsExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PreCrsGroupsRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PreCrsGroupsObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PreCrsGroupsExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PreCrsGroupsRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PreCrsGroupsParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []PreCrsGroupsExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []PreCrsGroupsRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetInitParameters struct {
	IPAddr []PreCrsGroupsRulesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetObservation struct {
	IPAddr []PreCrsGroupsRulesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PreCrsGroupsRulesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PreCrsGroupsRulesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PreCrsGroupsRulesExcludeListInitParameters struct {
	ClientSubnet []PreCrsGroupsRulesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PreCrsGroupsRulesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PreCrsGroupsRulesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsRulesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesExcludeListObservation struct {
	ClientSubnet []PreCrsGroupsRulesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []PreCrsGroupsRulesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []PreCrsGroupsRulesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsRulesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []PreCrsGroupsRulesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []PreCrsGroupsRulesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []PreCrsGroupsRulesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type PreCrsGroupsRulesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type PreCrsGroupsRulesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PreCrsGroupsRulesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PreCrsGroupsRulesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []PreCrsGroupsRulesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PreCrsGroupsRulesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []PreCrsGroupsRulesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type RequiredDataFilesInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequiredDataFilesObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequiredDataFilesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetInitParameters struct {
	IPAddr []ResolvedRulesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetObservation struct {
	IPAddr []ResolvedRulesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ResolvedRulesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ResolvedRulesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ResolvedRulesExcludeListInitParameters struct {
	ClientSubnet []ResolvedRulesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []ResolvedRulesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []ResolvedRulesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ResolvedRulesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesExcludeListObservation struct {
	ClientSubnet []ResolvedRulesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []ResolvedRulesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []ResolvedRulesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ResolvedRulesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []ResolvedRulesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []ResolvedRulesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []ResolvedRulesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ResolvedRulesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ResolvedRulesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []ResolvedRulesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ResolvedRulesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []ResolvedRulesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ResolvedRulesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []ResolvedRulesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type RuleOverridesExcludeListClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleOverridesExcludeListClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleOverridesExcludeListClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleOverridesExcludeListClientSubnetInitParameters struct {
	IPAddr []RuleOverridesExcludeListClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RuleOverridesExcludeListClientSubnetObservation struct {
	IPAddr []RuleOverridesExcludeListClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RuleOverridesExcludeListClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []RuleOverridesExcludeListClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type RuleOverridesExcludeListInitParameters struct {
	ClientSubnet []RuleOverridesExcludeListClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []RuleOverridesExcludeListMatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []RuleOverridesExcludeListURIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleOverridesExcludeListMatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesExcludeListMatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesExcludeListMatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesExcludeListObservation struct {
	ClientSubnet []RuleOverridesExcludeListClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []RuleOverridesExcludeListMatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []RuleOverridesExcludeListURIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleOverridesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []RuleOverridesExcludeListClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []RuleOverridesExcludeListMatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []RuleOverridesExcludeListURIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleOverridesExcludeListURIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesExcludeListURIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesExcludeListURIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type RuleOverridesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []RuleOverridesExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type RuleOverridesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []RuleOverridesExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type RuleOverridesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []RuleOverridesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId" tf:"rule_id,omitempty"`
}

type RulesMatchBotDetectionResultClassificationsInitParameters struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type RulesMatchBotDetectionResultClassificationsObservation struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type RulesMatchBotDetectionResultClassificationsParameters struct {

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type WafPolicyConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyInitParameters struct {
	AllowModeDelegation *string `json:"allowModeDelegation,omitempty" tf:"allow_mode_delegation,omitempty"`

	Allowlist []AllowlistInitParameters `json:"allowlist,omitempty" tf:"allowlist,omitempty"`

	ApplicationSignatures []ApplicationSignaturesInitParameters `json:"applicationSignatures,omitempty" tf:"application_signatures,omitempty"`

	AutoUpdateCrs *string `json:"autoUpdateCrs,omitempty" tf:"auto_update_crs,omitempty"`

	BypassStaticExtensions *string `json:"bypassStaticExtensions,omitempty" tf:"bypass_static_extensions,omitempty"`

	ConfidenceOverride []ConfidenceOverrideInitParameters `json:"confidenceOverride,omitempty" tf:"confidence_override,omitempty"`

	ConfigpbAttributes []WafPolicyConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	CrsOverrides []CrsOverridesInitParameters `json:"crsOverrides,omitempty" tf:"crs_overrides,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableAppLearning *string `json:"enableAppLearning,omitempty" tf:"enable_app_learning,omitempty"`

	EnableAutoRuleUpdates *string `json:"enableAutoRuleUpdates,omitempty" tf:"enable_auto_rule_updates,omitempty"`

	EnableRegexLearning *string `json:"enableRegexLearning,omitempty" tf:"enable_regex_learning,omitempty"`

	FailureMode *string `json:"failureMode,omitempty" tf:"failure_mode,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	LearningParams []LearningParamsInitParameters `json:"learningParams,omitempty" tf:"learning_params,omitempty"`

	Markers []WafPolicyMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	MinConfidence *string `json:"minConfidence,omitempty" tf:"min_confidence,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	PositiveSecurityModel []PositiveSecurityModelInitParameters `json:"positiveSecurityModel,omitempty" tf:"positive_security_model,omitempty"`

	PostCrsGroups []PostCrsGroupsInitParameters `json:"postCrsGroups,omitempty" tf:"post_crs_groups,omitempty"`

	PreCrsGroups []PreCrsGroupsInitParameters `json:"preCrsGroups,omitempty" tf:"pre_crs_groups,omitempty"`

	RequiredDataFiles []RequiredDataFilesInitParameters `json:"requiredDataFiles,omitempty" tf:"required_data_files,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpdatedCrsRulesInDetectionMode *string `json:"updatedCrsRulesInDetectionMode,omitempty" tf:"updated_crs_rules_in_detection_mode,omitempty"`

	WafCrsRef *string `json:"wafCrsRef,omitempty" tf:"waf_crs_ref,omitempty"`

	WafProfileRef *string `json:"wafProfileRef,omitempty" tf:"waf_profile_ref,omitempty"`
}

type WafPolicyMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyObservation struct {
	AllowModeDelegation *string `json:"allowModeDelegation,omitempty" tf:"allow_mode_delegation,omitempty"`

	Allowlist []AllowlistObservation `json:"allowlist,omitempty" tf:"allowlist,omitempty"`

	ApplicationSignatures []ApplicationSignaturesObservation `json:"applicationSignatures,omitempty" tf:"application_signatures,omitempty"`

	AutoUpdateCrs *string `json:"autoUpdateCrs,omitempty" tf:"auto_update_crs,omitempty"`

	BypassStaticExtensions *string `json:"bypassStaticExtensions,omitempty" tf:"bypass_static_extensions,omitempty"`

	ConfidenceOverride []ConfidenceOverrideObservation `json:"confidenceOverride,omitempty" tf:"confidence_override,omitempty"`

	ConfigpbAttributes []WafPolicyConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	CrsOverrides []CrsOverridesObservation `json:"crsOverrides,omitempty" tf:"crs_overrides,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableAppLearning *string `json:"enableAppLearning,omitempty" tf:"enable_app_learning,omitempty"`

	EnableAutoRuleUpdates *string `json:"enableAutoRuleUpdates,omitempty" tf:"enable_auto_rule_updates,omitempty"`

	EnableRegexLearning *string `json:"enableRegexLearning,omitempty" tf:"enable_regex_learning,omitempty"`

	FailureMode *string `json:"failureMode,omitempty" tf:"failure_mode,omitempty"`

	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LearningParams []LearningParamsObservation `json:"learningParams,omitempty" tf:"learning_params,omitempty"`

	Markers []WafPolicyMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	MinConfidence *string `json:"minConfidence,omitempty" tf:"min_confidence,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	PositiveSecurityModel []PositiveSecurityModelObservation `json:"positiveSecurityModel,omitempty" tf:"positive_security_model,omitempty"`

	PostCrsGroups []PostCrsGroupsObservation `json:"postCrsGroups,omitempty" tf:"post_crs_groups,omitempty"`

	PreCrsGroups []PreCrsGroupsObservation `json:"preCrsGroups,omitempty" tf:"pre_crs_groups,omitempty"`

	RequiredDataFiles []RequiredDataFilesObservation `json:"requiredDataFiles,omitempty" tf:"required_data_files,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpdatedCrsRulesInDetectionMode *string `json:"updatedCrsRulesInDetectionMode,omitempty" tf:"updated_crs_rules_in_detection_mode,omitempty"`

	WafCrsRef *string `json:"wafCrsRef,omitempty" tf:"waf_crs_ref,omitempty"`

	WafProfileRef *string `json:"wafProfileRef,omitempty" tf:"waf_profile_ref,omitempty"`
}

type WafPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AllowModeDelegation *string `json:"allowModeDelegation,omitempty" tf:"allow_mode_delegation,omitempty"`

	// +kubebuilder:validation:Optional
	Allowlist []AllowlistParameters `json:"allowlist,omitempty" tf:"allowlist,omitempty"`

	// +kubebuilder:validation:Optional
	ApplicationSignatures []ApplicationSignaturesParameters `json:"applicationSignatures,omitempty" tf:"application_signatures,omitempty"`

	// +kubebuilder:validation:Optional
	AutoUpdateCrs *string `json:"autoUpdateCrs,omitempty" tf:"auto_update_crs,omitempty"`

	// +kubebuilder:validation:Optional
	BypassStaticExtensions *string `json:"bypassStaticExtensions,omitempty" tf:"bypass_static_extensions,omitempty"`

	// +kubebuilder:validation:Optional
	ConfidenceOverride []ConfidenceOverrideParameters `json:"confidenceOverride,omitempty" tf:"confidence_override,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []WafPolicyConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	CrsOverrides []CrsOverridesParameters `json:"crsOverrides,omitempty" tf:"crs_overrides,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	EnableAppLearning *string `json:"enableAppLearning,omitempty" tf:"enable_app_learning,omitempty"`

	// +kubebuilder:validation:Optional
	EnableAutoRuleUpdates *string `json:"enableAutoRuleUpdates,omitempty" tf:"enable_auto_rule_updates,omitempty"`

	// +kubebuilder:validation:Optional
	EnableRegexLearning *string `json:"enableRegexLearning,omitempty" tf:"enable_regex_learning,omitempty"`

	// +kubebuilder:validation:Optional
	FailureMode *string `json:"failureMode,omitempty" tf:"failure_mode,omitempty"`

	// +kubebuilder:validation:Optional
	GeoDBRef *string `json:"geoDbRef,omitempty" tf:"geo_db_ref,omitempty"`

	// +kubebuilder:validation:Optional
	LearningParams []LearningParamsParameters `json:"learningParams,omitempty" tf:"learning_params,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []WafPolicyMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	MinConfidence *string `json:"minConfidence,omitempty" tf:"min_confidence,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	PositiveSecurityModel []PositiveSecurityModelParameters `json:"positiveSecurityModel,omitempty" tf:"positive_security_model,omitempty"`

	// +kubebuilder:validation:Optional
	PostCrsGroups []PostCrsGroupsParameters `json:"postCrsGroups,omitempty" tf:"post_crs_groups,omitempty"`

	// +kubebuilder:validation:Optional
	PreCrsGroups []PreCrsGroupsParameters `json:"preCrsGroups,omitempty" tf:"pre_crs_groups,omitempty"`

	// +kubebuilder:validation:Optional
	RequiredDataFiles []RequiredDataFilesParameters `json:"requiredDataFiles,omitempty" tf:"required_data_files,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UpdatedCrsRulesInDetectionMode *string `json:"updatedCrsRulesInDetectionMode,omitempty" tf:"updated_crs_rules_in_detection_mode,omitempty"`

	// +kubebuilder:validation:Optional
	WafCrsRef *string `json:"wafCrsRef,omitempty" tf:"waf_crs_ref,omitempty"`

	// +kubebuilder:validation:Optional
	WafProfileRef *string `json:"wafProfileRef,omitempty" tf:"waf_profile_ref,omitempty"`
}

// WafPolicySpec defines the desired state of WafPolicy
type WafPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WafPolicyParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WafPolicyInitParameters `json:"initProvider,omitempty"`
}

// WafPolicyStatus defines the observed state of WafPolicy.
type WafPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WafPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafPolicy is the Schema for the WafPolicys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type WafPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.wafProfileRef) || has(self.initProvider.wafProfileRef)",message="wafProfileRef is a required parameter"
	Spec   WafPolicySpec   `json:"spec"`
	Status WafPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafPolicyList contains a list of WafPolicys
type WafPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafPolicy `json:"items"`
}

// Repository type metadata.
var (
	WafPolicy_Kind             = "WafPolicy"
	WafPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WafPolicy_Kind}.String()
	WafPolicy_KindAPIVersion   = WafPolicy_Kind + "." + CRDGroupVersion.String()
	WafPolicy_GroupVersionKind = CRDGroupVersion.WithKind(WafPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&WafPolicy{}, &WafPolicyList{})
}
