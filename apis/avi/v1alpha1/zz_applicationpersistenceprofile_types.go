/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppCookiePersistenceProfileInitParameters struct {
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	PrstHdrName *string `json:"prstHdrName,omitempty" tf:"prst_hdr_name,omitempty"`

	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type AppCookiePersistenceProfileObservation struct {
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	PrstHdrName *string `json:"prstHdrName,omitempty" tf:"prst_hdr_name,omitempty"`

	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type AppCookiePersistenceProfileParameters struct {

	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// +kubebuilder:validation:Optional
	PrstHdrName *string `json:"prstHdrName" tf:"prst_hdr_name,omitempty"`

	// +kubebuilder:validation:Optional
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type ApplicationPersistenceProfileConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ApplicationPersistenceProfileConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ApplicationPersistenceProfileConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ApplicationPersistenceProfileInitParameters struct {
	AppCookiePersistenceProfile []AppCookiePersistenceProfileInitParameters `json:"appCookiePersistenceProfile,omitempty" tf:"app_cookie_persistence_profile,omitempty"`

	ConfigpbAttributes []ApplicationPersistenceProfileConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	HTTPCookiePersistenceProfile []HTTPCookiePersistenceProfileInitParameters `json:"httpCookiePersistenceProfile,omitempty" tf:"http_cookie_persistence_profile,omitempty"`

	HdrPersistenceProfile []HdrPersistenceProfileInitParameters `json:"hdrPersistenceProfile,omitempty" tf:"hdr_persistence_profile,omitempty"`

	IPPersistenceProfile []IPPersistenceProfileInitParameters `json:"ipPersistenceProfile,omitempty" tf:"ip_persistence_profile,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Markers []ApplicationPersistenceProfileMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PersistenceType *string `json:"persistenceType,omitempty" tf:"persistence_type,omitempty"`

	ServerHmDownRecovery *string `json:"serverHmDownRecovery,omitempty" tf:"server_hm_down_recovery,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ApplicationPersistenceProfileMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ApplicationPersistenceProfileMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ApplicationPersistenceProfileMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ApplicationPersistenceProfileObservation struct {
	AppCookiePersistenceProfile []AppCookiePersistenceProfileObservation `json:"appCookiePersistenceProfile,omitempty" tf:"app_cookie_persistence_profile,omitempty"`

	ConfigpbAttributes []ApplicationPersistenceProfileConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	HTTPCookiePersistenceProfile []HTTPCookiePersistenceProfileObservation `json:"httpCookiePersistenceProfile,omitempty" tf:"http_cookie_persistence_profile,omitempty"`

	HdrPersistenceProfile []HdrPersistenceProfileObservation `json:"hdrPersistenceProfile,omitempty" tf:"hdr_persistence_profile,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IPPersistenceProfile []IPPersistenceProfileObservation `json:"ipPersistenceProfile,omitempty" tf:"ip_persistence_profile,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	Markers []ApplicationPersistenceProfileMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PersistenceType *string `json:"persistenceType,omitempty" tf:"persistence_type,omitempty"`

	ServerHmDownRecovery *string `json:"serverHmDownRecovery,omitempty" tf:"server_hm_down_recovery,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ApplicationPersistenceProfileParameters struct {

	// +kubebuilder:validation:Optional
	AppCookiePersistenceProfile []AppCookiePersistenceProfileParameters `json:"appCookiePersistenceProfile,omitempty" tf:"app_cookie_persistence_profile,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []ApplicationPersistenceProfileConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPCookiePersistenceProfile []HTTPCookiePersistenceProfileParameters `json:"httpCookiePersistenceProfile,omitempty" tf:"http_cookie_persistence_profile,omitempty"`

	// +kubebuilder:validation:Optional
	HdrPersistenceProfile []HdrPersistenceProfileParameters `json:"hdrPersistenceProfile,omitempty" tf:"hdr_persistence_profile,omitempty"`

	// +kubebuilder:validation:Optional
	IPPersistenceProfile []IPPersistenceProfileParameters `json:"ipPersistenceProfile,omitempty" tf:"ip_persistence_profile,omitempty"`

	// +kubebuilder:validation:Optional
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []ApplicationPersistenceProfileMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PersistenceType *string `json:"persistenceType,omitempty" tf:"persistence_type,omitempty"`

	// +kubebuilder:validation:Optional
	ServerHmDownRecovery *string `json:"serverHmDownRecovery,omitempty" tf:"server_hm_down_recovery,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HTTPCookiePersistenceProfileInitParameters struct {
	AlwaysSendCookie *string `json:"alwaysSendCookie,omitempty" tf:"always_send_cookie,omitempty"`

	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	HTTPOnly *string `json:"httpOnly,omitempty" tf:"http_only,omitempty"`

	IsPersistentCookie *string `json:"isPersistentCookie,omitempty" tf:"is_persistent_cookie,omitempty"`

	Key []KeyInitParameters `json:"key,omitempty" tf:"key,omitempty"`

	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type HTTPCookiePersistenceProfileObservation struct {
	AlwaysSendCookie *string `json:"alwaysSendCookie,omitempty" tf:"always_send_cookie,omitempty"`

	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	HTTPOnly *string `json:"httpOnly,omitempty" tf:"http_only,omitempty"`

	IsPersistentCookie *string `json:"isPersistentCookie,omitempty" tf:"is_persistent_cookie,omitempty"`

	Key []KeyObservation `json:"key,omitempty" tf:"key,omitempty"`

	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type HTTPCookiePersistenceProfileParameters struct {

	// +kubebuilder:validation:Optional
	AlwaysSendCookie *string `json:"alwaysSendCookie,omitempty" tf:"always_send_cookie,omitempty"`

	// +kubebuilder:validation:Optional
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPOnly *string `json:"httpOnly,omitempty" tf:"http_only,omitempty"`

	// +kubebuilder:validation:Optional
	IsPersistentCookie *string `json:"isPersistentCookie,omitempty" tf:"is_persistent_cookie,omitempty"`

	// +kubebuilder:validation:Optional
	Key []KeyParameters `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type HdrPersistenceProfileInitParameters struct {
	PrstHdrName *string `json:"prstHdrName,omitempty" tf:"prst_hdr_name,omitempty"`
}

type HdrPersistenceProfileObservation struct {
	PrstHdrName *string `json:"prstHdrName,omitempty" tf:"prst_hdr_name,omitempty"`
}

type HdrPersistenceProfileParameters struct {

	// +kubebuilder:validation:Optional
	PrstHdrName *string `json:"prstHdrName,omitempty" tf:"prst_hdr_name,omitempty"`
}

type IPPersistenceProfileInitParameters struct {
	IPMask *string `json:"ipMask,omitempty" tf:"ip_mask,omitempty"`

	IPPersistentTimeout *string `json:"ipPersistentTimeout,omitempty" tf:"ip_persistent_timeout,omitempty"`
}

type IPPersistenceProfileObservation struct {
	IPMask *string `json:"ipMask,omitempty" tf:"ip_mask,omitempty"`

	IPPersistentTimeout *string `json:"ipPersistentTimeout,omitempty" tf:"ip_persistent_timeout,omitempty"`
}

type IPPersistenceProfileParameters struct {

	// +kubebuilder:validation:Optional
	IPMask *string `json:"ipMask,omitempty" tf:"ip_mask,omitempty"`

	// +kubebuilder:validation:Optional
	IPPersistentTimeout *string `json:"ipPersistentTimeout,omitempty" tf:"ip_persistent_timeout,omitempty"`
}

type KeyInitParameters struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type KeyObservation struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type KeyParameters struct {

	// +kubebuilder:validation:Optional
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	// +kubebuilder:validation:Optional
	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// ApplicationPersistenceProfileSpec defines the desired state of ApplicationPersistenceProfile
type ApplicationPersistenceProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ApplicationPersistenceProfileParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ApplicationPersistenceProfileInitParameters `json:"initProvider,omitempty"`
}

// ApplicationPersistenceProfileStatus defines the observed state of ApplicationPersistenceProfile.
type ApplicationPersistenceProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ApplicationPersistenceProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationPersistenceProfile is the Schema for the ApplicationPersistenceProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type ApplicationPersistenceProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.persistenceType) || has(self.initProvider.persistenceType)",message="persistenceType is a required parameter"
	Spec   ApplicationPersistenceProfileSpec   `json:"spec"`
	Status ApplicationPersistenceProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationPersistenceProfileList contains a list of ApplicationPersistenceProfiles
type ApplicationPersistenceProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationPersistenceProfile `json:"items"`
}

// Repository type metadata.
var (
	ApplicationPersistenceProfile_Kind             = "ApplicationPersistenceProfile"
	ApplicationPersistenceProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ApplicationPersistenceProfile_Kind}.String()
	ApplicationPersistenceProfile_KindAPIVersion   = ApplicationPersistenceProfile_Kind + "." + CRDGroupVersion.String()
	ApplicationPersistenceProfile_GroupVersionKind = CRDGroupVersion.WithKind(ApplicationPersistenceProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&ApplicationPersistenceProfile{}, &ApplicationPersistenceProfileList{})
}
