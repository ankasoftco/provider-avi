/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClientIPAddrGroupAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddrGroupInitParameters struct {
	Addrs []ClientIPAddrGroupAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	Prefixes []ClientIPAddrGroupPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPAddrGroupRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupObservation struct {
	Addrs []ClientIPAddrGroupAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	Prefixes []ClientIPAddrGroupPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPAddrGroupRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []ClientIPAddrGroupAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []ClientIPAddrGroupPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientIPAddrGroupRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddrGroupPrefixesInitParameters struct {
	IPAddr []ClientIPAddrGroupPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPAddrGroupPrefixesObservation struct {
	IPAddr []ClientIPAddrGroupPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPAddrGroupPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ClientIPAddrGroupPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ClientIPAddrGroupRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddrGroupRangesInitParameters struct {
	Begin []ClientIPAddrGroupRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPAddrGroupRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPAddrGroupRangesObservation struct {
	Begin []ClientIPAddrGroupRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPAddrGroupRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPAddrGroupRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []ClientIPAddrGroupRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []ClientIPAddrGroupRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type DNSConfigsInitParameters struct {
	DomainName *string `json:"domainName,omitempty" tf:"domain_name,omitempty"`
}

type DNSConfigsObservation struct {
	DomainName *string `json:"domainName,omitempty" tf:"domain_name,omitempty"`
}

type DNSConfigsParameters struct {

	// +kubebuilder:validation:Optional
	DomainName *string `json:"domainName" tf:"domain_name,omitempty"`
}

type DNSVsesInitParameters struct {
	DNSVsUUID *string `json:"dnsVsUuid,omitempty" tf:"dns_vs_uuid,omitempty"`

	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`
}

type DNSVsesObservation struct {
	DNSVsUUID *string `json:"dnsVsUuid,omitempty" tf:"dns_vs_uuid,omitempty"`

	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`
}

type DNSVsesParameters struct {

	// +kubebuilder:validation:Optional
	DNSVsUUID *string `json:"dnsVsUuid" tf:"dns_vs_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	DomainNames []*string `json:"domainNames,omitempty" tf:"domain_names,omitempty"`
}

type GslbConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type GslbInitParameters struct {
	AsyncInterval *string `json:"asyncInterval,omitempty" tf:"async_interval,omitempty"`

	ClearOnMaxRetries *string `json:"clearOnMaxRetries,omitempty" tf:"clear_on_max_retries,omitempty"`

	ClientIPAddrGroup []ClientIPAddrGroupInitParameters `json:"clientIpAddrGroup,omitempty" tf:"client_ip_addr_group,omitempty"`

	ConfigpbAttributes []GslbConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	DNSConfigs []DNSConfigsInitParameters `json:"dnsConfigs,omitempty" tf:"dns_configs,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableConfigByMembers *string `json:"enableConfigByMembers,omitempty" tf:"enable_config_by_members,omitempty"`

	ErrorResyncInterval *string `json:"errorResyncInterval,omitempty" tf:"error_resync_interval,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	LeaderClusterUUID *string `json:"leaderClusterUuid,omitempty" tf:"leader_cluster_uuid,omitempty"`

	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ReplicationPolicy []ReplicationPolicyInitParameters `json:"replicationPolicy,omitempty" tf:"replication_policy,omitempty"`

	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	SendIntervalPriorToMaintenanceMode *string `json:"sendIntervalPriorToMaintenanceMode,omitempty" tf:"send_interval_prior_to_maintenance_mode,omitempty"`

	Sites []SitesInitParameters `json:"sites,omitempty" tf:"sites,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TenantScoped *string `json:"tenantScoped,omitempty" tf:"tenant_scoped,omitempty"`

	ThirdPartySites []ThirdPartySitesInitParameters `json:"thirdPartySites,omitempty" tf:"third_party_sites,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	ViewID *string `json:"viewId,omitempty" tf:"view_id,omitempty"`
}

type GslbObservation struct {
	AsyncInterval *string `json:"asyncInterval,omitempty" tf:"async_interval,omitempty"`

	ClearOnMaxRetries *string `json:"clearOnMaxRetries,omitempty" tf:"clear_on_max_retries,omitempty"`

	ClientIPAddrGroup []ClientIPAddrGroupObservation `json:"clientIpAddrGroup,omitempty" tf:"client_ip_addr_group,omitempty"`

	ConfigpbAttributes []GslbConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	DNSConfigs []DNSConfigsObservation `json:"dnsConfigs,omitempty" tf:"dns_configs,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableConfigByMembers *string `json:"enableConfigByMembers,omitempty" tf:"enable_config_by_members,omitempty"`

	ErrorResyncInterval *string `json:"errorResyncInterval,omitempty" tf:"error_resync_interval,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	LeaderClusterUUID *string `json:"leaderClusterUuid,omitempty" tf:"leader_cluster_uuid,omitempty"`

	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ReplicationPolicy []ReplicationPolicyObservation `json:"replicationPolicy,omitempty" tf:"replication_policy,omitempty"`

	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	SendIntervalPriorToMaintenanceMode *string `json:"sendIntervalPriorToMaintenanceMode,omitempty" tf:"send_interval_prior_to_maintenance_mode,omitempty"`

	Sites []SitesObservation `json:"sites,omitempty" tf:"sites,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TenantScoped *string `json:"tenantScoped,omitempty" tf:"tenant_scoped,omitempty"`

	ThirdPartySites []ThirdPartySitesObservation `json:"thirdPartySites,omitempty" tf:"third_party_sites,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	ViewID *string `json:"viewId,omitempty" tf:"view_id,omitempty"`
}

type GslbParameters struct {

	// +kubebuilder:validation:Optional
	AsyncInterval *string `json:"asyncInterval,omitempty" tf:"async_interval,omitempty"`

	// +kubebuilder:validation:Optional
	ClearOnMaxRetries *string `json:"clearOnMaxRetries,omitempty" tf:"clear_on_max_retries,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIPAddrGroup []ClientIPAddrGroupParameters `json:"clientIpAddrGroup,omitempty" tf:"client_ip_addr_group,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []GslbConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	DNSConfigs []DNSConfigsParameters `json:"dnsConfigs,omitempty" tf:"dns_configs,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	EnableConfigByMembers *string `json:"enableConfigByMembers,omitempty" tf:"enable_config_by_members,omitempty"`

	// +kubebuilder:validation:Optional
	ErrorResyncInterval *string `json:"errorResyncInterval,omitempty" tf:"error_resync_interval,omitempty"`

	// +kubebuilder:validation:Optional
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// +kubebuilder:validation:Optional
	LeaderClusterUUID *string `json:"leaderClusterUuid,omitempty" tf:"leader_cluster_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationPolicy []ReplicationPolicyParameters `json:"replicationPolicy,omitempty" tf:"replication_policy,omitempty"`

	// +kubebuilder:validation:Optional
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// +kubebuilder:validation:Optional
	SendIntervalPriorToMaintenanceMode *string `json:"sendIntervalPriorToMaintenanceMode,omitempty" tf:"send_interval_prior_to_maintenance_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Sites []SitesParameters `json:"sites,omitempty" tf:"sites,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TenantScoped *string `json:"tenantScoped,omitempty" tf:"tenant_scoped,omitempty"`

	// +kubebuilder:validation:Optional
	ThirdPartySites []ThirdPartySitesParameters `json:"thirdPartySites,omitempty" tf:"third_party_sites,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	ViewID *string `json:"viewId,omitempty" tf:"view_id,omitempty"`
}

type HmProxiesInitParameters struct {
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type HmProxiesObservation struct {
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type HmProxiesParameters struct {

	// +kubebuilder:validation:Optional
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	// +kubebuilder:validation:Optional
	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type LocationInitParameters struct {
	Location []LocationLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type LocationLocationInitParameters struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type LocationLocationObservation struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type LocationLocationParameters struct {

	// +kubebuilder:validation:Optional
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// +kubebuilder:validation:Optional
	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type LocationObservation struct {
	Location []LocationLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type LocationParameters struct {

	// +kubebuilder:validation:Optional
	Location []LocationLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`
}

type ReplicationPolicyInitParameters struct {
	CheckpointRef *string `json:"checkpointRef,omitempty" tf:"checkpoint_ref,omitempty"`

	ReplicationMode *string `json:"replicationMode,omitempty" tf:"replication_mode,omitempty"`
}

type ReplicationPolicyObservation struct {
	CheckpointRef *string `json:"checkpointRef,omitempty" tf:"checkpoint_ref,omitempty"`

	ReplicationMode *string `json:"replicationMode,omitempty" tf:"replication_mode,omitempty"`
}

type ReplicationPolicyParameters struct {

	// +kubebuilder:validation:Optional
	CheckpointRef *string `json:"checkpointRef,omitempty" tf:"checkpoint_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationMode *string `json:"replicationMode,omitempty" tf:"replication_mode,omitempty"`
}

type SitesIPAddressesInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SitesIPAddressesObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SitesIPAddressesParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SitesInitParameters struct {
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	DNSVses []DNSVsesInitParameters `json:"dnsVses,omitempty" tf:"dns_vses,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	HmProxies []HmProxiesInitParameters `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	HmShardEnabled *string `json:"hmShardEnabled,omitempty" tf:"hm_shard_enabled,omitempty"`

	IPAddresses []SitesIPAddressesInitParameters `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	Location []LocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	MemberType *string `json:"memberType,omitempty" tf:"member_type,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	SuspendMode *string `json:"suspendMode,omitempty" tf:"suspend_mode,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type SitesObservation struct {
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	DNSVses []DNSVsesObservation `json:"dnsVses,omitempty" tf:"dns_vses,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	HmProxies []HmProxiesObservation `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	HmShardEnabled *string `json:"hmShardEnabled,omitempty" tf:"hm_shard_enabled,omitempty"`

	IPAddresses []SitesIPAddressesObservation `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	Location []LocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	MemberType *string `json:"memberType,omitempty" tf:"member_type,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	SuspendMode *string `json:"suspendMode,omitempty" tf:"suspend_mode,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type SitesParameters struct {

	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterUUID *string `json:"clusterUuid" tf:"cluster_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	DNSVses []DNSVsesParameters `json:"dnsVses,omitempty" tf:"dns_vses,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	HmProxies []HmProxiesParameters `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	// +kubebuilder:validation:Optional
	HmShardEnabled *string `json:"hmShardEnabled,omitempty" tf:"hm_shard_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IPAddresses []SitesIPAddressesParameters `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// +kubebuilder:validation:Optional
	Location []LocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	MemberType *string `json:"memberType,omitempty" tf:"member_type,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	// +kubebuilder:validation:Optional
	SuspendMode *string `json:"suspendMode,omitempty" tf:"suspend_mode,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type ThirdPartySitesHmProxiesInitParameters struct {
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type ThirdPartySitesHmProxiesObservation struct {
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type ThirdPartySitesHmProxiesParameters struct {

	// +kubebuilder:validation:Optional
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	// +kubebuilder:validation:Optional
	SiteUUID *string `json:"siteUuid,omitempty" tf:"site_uuid,omitempty"`
}

type ThirdPartySitesInitParameters struct {
	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	HmProxies []ThirdPartySitesHmProxiesInitParameters `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	Location []ThirdPartySitesLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ThirdPartySitesLocationInitParameters struct {
	Location []ThirdPartySitesLocationLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type ThirdPartySitesLocationLocationInitParameters struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ThirdPartySitesLocationLocationObservation struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ThirdPartySitesLocationLocationParameters struct {

	// +kubebuilder:validation:Optional
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// +kubebuilder:validation:Optional
	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ThirdPartySitesLocationObservation struct {
	Location []ThirdPartySitesLocationLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type ThirdPartySitesLocationParameters struct {

	// +kubebuilder:validation:Optional
	Location []ThirdPartySitesLocationLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`
}

type ThirdPartySitesObservation struct {
	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	HmProxies []ThirdPartySitesHmProxiesObservation `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	Location []ThirdPartySitesLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ThirdPartySitesParameters struct {

	// +kubebuilder:validation:Optional
	ClusterUUID *string `json:"clusterUuid,omitempty" tf:"cluster_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	HmProxies []ThirdPartySitesHmProxiesParameters `json:"hmProxies,omitempty" tf:"hm_proxies,omitempty"`

	// +kubebuilder:validation:Optional
	Location []ThirdPartySitesLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// GslbSpec defines the desired state of Gslb
type GslbSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GslbParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GslbInitParameters `json:"initProvider,omitempty"`
}

// GslbStatus defines the observed state of Gslb.
type GslbStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GslbObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Gslb is the Schema for the Gslbs API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type Gslb struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.leaderClusterUuid) || has(self.initProvider.leaderClusterUuid)",message="leaderClusterUuid is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sites) || has(self.initProvider.sites)",message="sites is a required parameter"
	Spec   GslbSpec   `json:"spec"`
	Status GslbStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GslbList contains a list of Gslbs
type GslbList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Gslb `json:"items"`
}

// Repository type metadata.
var (
	Gslb_Kind             = "Gslb"
	Gslb_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Gslb_Kind}.String()
	Gslb_KindAPIVersion   = Gslb_Kind + "." + CRDGroupVersion.String()
	Gslb_GroupVersionKind = CRDGroupVersion.WithKind(Gslb_Kind)
)

func init() {
	SchemeBuilder.Register(&Gslb{}, &GslbList{})
}
