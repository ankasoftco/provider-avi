/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureServiceprincipalInitParameters struct {
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureServiceprincipalObservation struct {
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureServiceprincipalParameters struct {

	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// +kubebuilder:validation:Optional
	AuthenticationTokenSecretRef *v1.SecretKeySelector `json:"authenticationTokenSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureUserpassInitParameters struct {
	TenantName *string `json:"tenantName,omitempty" tf:"tenant_name,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type AzureUserpassObservation struct {
	TenantName *string `json:"tenantName,omitempty" tf:"tenant_name,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type AzureUserpassParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TenantName *string `json:"tenantName,omitempty" tf:"tenant_name,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type CloudConnectorUserConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudConnectorUserConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudConnectorUserConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudConnectorUserInitParameters struct {
	AzureServiceprincipal []AzureServiceprincipalInitParameters `json:"azureServiceprincipal,omitempty" tf:"azure_serviceprincipal,omitempty"`

	AzureUserpass []AzureUserpassInitParameters `json:"azureUserpass,omitempty" tf:"azure_userpass,omitempty"`

	ConfigpbAttributes []CloudConnectorUserConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	GCPCredentials []GCPCredentialsInitParameters `json:"gcpCredentials,omitempty" tf:"gcp_credentials,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NsxtCredentials []NsxtCredentialsInitParameters `json:"nsxtCredentials,omitempty" tf:"nsxt_credentials,omitempty"`

	OciCredentials []OciCredentialsInitParameters `json:"ociCredentials,omitempty" tf:"oci_credentials,omitempty"`

	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TencentCredentials []TencentCredentialsInitParameters `json:"tencentCredentials,omitempty" tf:"tencent_credentials,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	VcenterCredentials []VcenterCredentialsInitParameters `json:"vcenterCredentials,omitempty" tf:"vcenter_credentials,omitempty"`
}

type CloudConnectorUserObservation struct {
	AzureServiceprincipal []AzureServiceprincipalObservation `json:"azureServiceprincipal,omitempty" tf:"azure_serviceprincipal,omitempty"`

	AzureUserpass []AzureUserpassObservation `json:"azureUserpass,omitempty" tf:"azure_userpass,omitempty"`

	ConfigpbAttributes []CloudConnectorUserConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	GCPCredentials []GCPCredentialsParameters `json:"gcpCredentials,omitempty" tf:"gcp_credentials,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NsxtCredentials []NsxtCredentialsObservation `json:"nsxtCredentials,omitempty" tf:"nsxt_credentials,omitempty"`

	OciCredentials []OciCredentialsObservation `json:"ociCredentials,omitempty" tf:"oci_credentials,omitempty"`

	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TencentCredentials []TencentCredentialsParameters `json:"tencentCredentials,omitempty" tf:"tencent_credentials,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	VcenterCredentials []VcenterCredentialsObservation `json:"vcenterCredentials,omitempty" tf:"vcenter_credentials,omitempty"`
}

type CloudConnectorUserParameters struct {

	// +kubebuilder:validation:Optional
	AzureServiceprincipal []AzureServiceprincipalParameters `json:"azureServiceprincipal,omitempty" tf:"azure_serviceprincipal,omitempty"`

	// +kubebuilder:validation:Optional
	AzureUserpass []AzureUserpassParameters `json:"azureUserpass,omitempty" tf:"azure_userpass,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []CloudConnectorUserConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	GCPCredentials []GCPCredentialsParameters `json:"gcpCredentials,omitempty" tf:"gcp_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NsxtCredentials []NsxtCredentialsParameters `json:"nsxtCredentials,omitempty" tf:"nsxt_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	OciCredentials []OciCredentialsParameters `json:"ociCredentials,omitempty" tf:"oci_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	PrivateKeySecretRef *v1.SecretKeySelector `json:"privateKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TencentCredentials []TencentCredentialsParameters `json:"tencentCredentials,omitempty" tf:"tencent_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	VcenterCredentials []VcenterCredentialsParameters `json:"vcenterCredentials,omitempty" tf:"vcenter_credentials,omitempty"`
}

type GCPCredentialsInitParameters struct {
}

type GCPCredentialsObservation struct {
}

type GCPCredentialsParameters struct {

	// +kubebuilder:validation:Optional
	ServiceAccountKeyfileDataSecretRef *v1.SecretKeySelector `json:"serviceAccountKeyfileDataSecretRef,omitempty" tf:"-"`
}

type NsxtCredentialsInitParameters struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NsxtCredentialsObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NsxtCredentialsParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type OciCredentialsInitParameters struct {
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OciCredentialsObservation struct {
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OciCredentialsParameters struct {

	// +kubebuilder:validation:Optional
	FingerprintSecretRef *v1.SecretKeySelector `json:"fingerprintSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	KeyContentSecretRef *v1.SecretKeySelector `json:"keyContentSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	PassPhraseSecretRef *v1.SecretKeySelector `json:"passPhraseSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type TencentCredentialsInitParameters struct {
}

type TencentCredentialsObservation struct {
}

type TencentCredentialsParameters struct {

	// +kubebuilder:validation:Required
	SecretIDSecretRef v1.SecretKeySelector `json:"secretIdSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	SecretKeySecretRef v1.SecretKeySelector `json:"secretKeySecretRef" tf:"-"`
}

type VcenterCredentialsInitParameters struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type VcenterCredentialsObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type VcenterCredentialsParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

// CloudConnectorUserSpec defines the desired state of CloudConnectorUser
type CloudConnectorUserSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudConnectorUserParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudConnectorUserInitParameters `json:"initProvider,omitempty"`
}

// CloudConnectorUserStatus defines the observed state of CloudConnectorUser.
type CloudConnectorUserStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudConnectorUserObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CloudConnectorUser is the Schema for the CloudConnectorUsers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type CloudConnectorUser struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   CloudConnectorUserSpec   `json:"spec"`
	Status CloudConnectorUserStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudConnectorUserList contains a list of CloudConnectorUsers
type CloudConnectorUserList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudConnectorUser `json:"items"`
}

// Repository type metadata.
var (
	CloudConnectorUser_Kind             = "CloudConnectorUser"
	CloudConnectorUser_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudConnectorUser_Kind}.String()
	CloudConnectorUser_KindAPIVersion   = CloudConnectorUser_Kind + "." + CRDGroupVersion.String()
	CloudConnectorUser_GroupVersionKind = CRDGroupVersion.WithKind(CloudConnectorUser_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudConnectorUser{}, &CloudConnectorUserList{})
}
