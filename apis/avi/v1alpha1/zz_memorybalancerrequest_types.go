/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MemoryBalancerRequestConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MemoryBalancerRequestConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MemoryBalancerRequestConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MemoryBalancerRequestControllerInfoInitParameters struct {
	CurrentControllerMemUsage *string `json:"currentControllerMemUsage,omitempty" tf:"current_controller_mem_usage,omitempty"`
}

type MemoryBalancerRequestControllerInfoObservation struct {
	CurrentControllerMemUsage *string `json:"currentControllerMemUsage,omitempty" tf:"current_controller_mem_usage,omitempty"`
}

type MemoryBalancerRequestControllerInfoParameters struct {

	// +kubebuilder:validation:Optional
	CurrentControllerMemUsage *string `json:"currentControllerMemUsage,omitempty" tf:"current_controller_mem_usage,omitempty"`
}

type MemoryBalancerRequestInitParameters struct {
	ConfigpbAttributes []MemoryBalancerRequestConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ControllerInfo []MemoryBalancerRequestControllerInfoInitParameters `json:"controllerInfo,omitempty" tf:"controller_info,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeUUID *string `json:"nodeUuid,omitempty" tf:"node_uuid,omitempty"`

	ProcessInfo []ProcessInfoInitParameters `json:"processInfo,omitempty" tf:"process_info,omitempty"`

	ProcessInstance *string `json:"processInstance,omitempty" tf:"process_instance,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type MemoryBalancerRequestObservation struct {
	ConfigpbAttributes []MemoryBalancerRequestConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ControllerInfo []MemoryBalancerRequestControllerInfoObservation `json:"controllerInfo,omitempty" tf:"controller_info,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeUUID *string `json:"nodeUuid,omitempty" tf:"node_uuid,omitempty"`

	ProcessInfo []ProcessInfoObservation `json:"processInfo,omitempty" tf:"process_info,omitempty"`

	ProcessInstance *string `json:"processInstance,omitempty" tf:"process_instance,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type MemoryBalancerRequestParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []MemoryBalancerRequestConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ControllerInfo []MemoryBalancerRequestControllerInfoParameters `json:"controllerInfo,omitempty" tf:"controller_info,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NodeUUID *string `json:"nodeUuid,omitempty" tf:"node_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessInfo []ProcessInfoParameters `json:"processInfo,omitempty" tf:"process_info,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessInstance *string `json:"processInstance,omitempty" tf:"process_instance,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ProcessInfoInitParameters struct {
	CurrentProcessID *string `json:"currentProcessId,omitempty" tf:"current_process_id,omitempty"`

	CurrentProcessMemUsage *string `json:"currentProcessMemUsage,omitempty" tf:"current_process_mem_usage,omitempty"`

	IntimationCount *string `json:"intimationCount,omitempty" tf:"intimation_count,omitempty"`

	MemoryLimit *string `json:"memoryLimit,omitempty" tf:"memory_limit,omitempty"`

	MemoryTrendUsage *string `json:"memoryTrendUsage,omitempty" tf:"memory_trend_usage,omitempty"`

	ProcessMode *string `json:"processMode,omitempty" tf:"process_mode,omitempty"`

	ThresholdPercent *string `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

type ProcessInfoObservation struct {
	CurrentProcessID *string `json:"currentProcessId,omitempty" tf:"current_process_id,omitempty"`

	CurrentProcessMemUsage *string `json:"currentProcessMemUsage,omitempty" tf:"current_process_mem_usage,omitempty"`

	IntimationCount *string `json:"intimationCount,omitempty" tf:"intimation_count,omitempty"`

	MemoryLimit *string `json:"memoryLimit,omitempty" tf:"memory_limit,omitempty"`

	MemoryTrendUsage *string `json:"memoryTrendUsage,omitempty" tf:"memory_trend_usage,omitempty"`

	ProcessMode *string `json:"processMode,omitempty" tf:"process_mode,omitempty"`

	ThresholdPercent *string `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

type ProcessInfoParameters struct {

	// +kubebuilder:validation:Optional
	CurrentProcessID *string `json:"currentProcessId,omitempty" tf:"current_process_id,omitempty"`

	// +kubebuilder:validation:Optional
	CurrentProcessMemUsage *string `json:"currentProcessMemUsage,omitempty" tf:"current_process_mem_usage,omitempty"`

	// +kubebuilder:validation:Optional
	IntimationCount *string `json:"intimationCount,omitempty" tf:"intimation_count,omitempty"`

	// +kubebuilder:validation:Optional
	MemoryLimit *string `json:"memoryLimit,omitempty" tf:"memory_limit,omitempty"`

	// +kubebuilder:validation:Optional
	MemoryTrendUsage *string `json:"memoryTrendUsage,omitempty" tf:"memory_trend_usage,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessMode *string `json:"processMode,omitempty" tf:"process_mode,omitempty"`

	// +kubebuilder:validation:Optional
	ThresholdPercent *string `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

// MemoryBalancerRequestSpec defines the desired state of MemoryBalancerRequest
type MemoryBalancerRequestSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MemoryBalancerRequestParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MemoryBalancerRequestInitParameters `json:"initProvider,omitempty"`
}

// MemoryBalancerRequestStatus defines the observed state of MemoryBalancerRequest.
type MemoryBalancerRequestStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MemoryBalancerRequestObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MemoryBalancerRequest is the Schema for the MemoryBalancerRequests API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type MemoryBalancerRequest struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   MemoryBalancerRequestSpec   `json:"spec"`
	Status MemoryBalancerRequestStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MemoryBalancerRequestList contains a list of MemoryBalancerRequests
type MemoryBalancerRequestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MemoryBalancerRequest `json:"items"`
}

// Repository type metadata.
var (
	MemoryBalancerRequest_Kind             = "MemoryBalancerRequest"
	MemoryBalancerRequest_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MemoryBalancerRequest_Kind}.String()
	MemoryBalancerRequest_KindAPIVersion   = MemoryBalancerRequest_Kind + "." + CRDGroupVersion.String()
	MemoryBalancerRequest_GroupVersionKind = CRDGroupVersion.WithKind(MemoryBalancerRequest_Kind)
)

func init() {
	SchemeBuilder.Register(&MemoryBalancerRequest{}, &MemoryBalancerRequestList{})
}
