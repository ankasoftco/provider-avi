/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AvailableApplicationsInitParameters struct {
	Application *string `json:"application,omitempty" tf:"application,omitempty"`

	LastChangedRulesetVersion *string `json:"lastChangedRulesetVersion,omitempty" tf:"last_changed_ruleset_version,omitempty"`

	NumberOfRules *string `json:"numberOfRules,omitempty" tf:"number_of_rules,omitempty"`
}

type AvailableApplicationsObservation struct {
	Application *string `json:"application,omitempty" tf:"application,omitempty"`

	LastChangedRulesetVersion *string `json:"lastChangedRulesetVersion,omitempty" tf:"last_changed_ruleset_version,omitempty"`

	NumberOfRules *string `json:"numberOfRules,omitempty" tf:"number_of_rules,omitempty"`
}

type AvailableApplicationsParameters struct {

	// +kubebuilder:validation:Optional
	Application *string `json:"application,omitempty" tf:"application,omitempty"`

	// +kubebuilder:validation:Optional
	LastChangedRulesetVersion *string `json:"lastChangedRulesetVersion,omitempty" tf:"last_changed_ruleset_version,omitempty"`

	// +kubebuilder:validation:Optional
	NumberOfRules *string `json:"numberOfRules,omitempty" tf:"number_of_rules,omitempty"`
}

type ClientSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientSubnetInitParameters struct {
	IPAddr []ClientSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientSubnetObservation struct {
	IPAddr []ClientSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ClientSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ExcludeListInitParameters struct {
	ClientSubnet []ClientSubnetInitParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []MatchElementCriteriaInitParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []URIMatchCriteriaInitParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ExcludeListObservation struct {
	ClientSubnet []ClientSubnetObservation `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	MatchElementCriteria []MatchElementCriteriaObservation `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	URIMatchCriteria []URIMatchCriteriaObservation `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	ClientSubnet []ClientSubnetParameters `json:"clientSubnet,omitempty" tf:"client_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElement *string `json:"matchElement,omitempty" tf:"match_element,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElementCriteria []MatchElementCriteriaParameters `json:"matchElementCriteria,omitempty" tf:"match_element_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIMatchCriteria []URIMatchCriteriaParameters `json:"uriMatchCriteria,omitempty" tf:"uri_match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath *string `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type MatchElementCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type MatchElementCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type MatchElementCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type ServiceStatusLastSuccessfulUpdateCheckInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type ServiceStatusLastSuccessfulUpdateCheckObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type ServiceStatusLastSuccessfulUpdateCheckParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type SignaturesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []ExcludeListInitParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SignaturesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	ExcludeList []ExcludeListObservation `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SignaturesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeList []ExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	IsSensitive *string `json:"isSensitive,omitempty" tf:"is_sensitive,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	Phase *string `json:"phase,omitempty" tf:"phase,omitempty"`

	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type URIMatchCriteriaInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type URIMatchCriteriaObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type URIMatchCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`
}

type UpstreamSyncTimestampInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpstreamSyncTimestampObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpstreamSyncTimestampParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type WafApplicationSignatureProviderConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafApplicationSignatureProviderConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafApplicationSignatureProviderConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafApplicationSignatureProviderInitParameters struct {
	AvailableApplications []AvailableApplicationsInitParameters `json:"availableApplications,omitempty" tf:"available_applications,omitempty"`

	ConfigpbAttributes []WafApplicationSignatureProviderConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	ServiceStatus []WafApplicationSignatureProviderServiceStatusInitParameters `json:"serviceStatus,omitempty" tf:"service_status,omitempty"`

	Signatures []SignaturesInitParameters `json:"signatures,omitempty" tf:"signatures,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafApplicationSignatureProviderObservation struct {
	AvailableApplications []AvailableApplicationsObservation `json:"availableApplications,omitempty" tf:"available_applications,omitempty"`

	ConfigpbAttributes []WafApplicationSignatureProviderConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	ServiceStatus []WafApplicationSignatureProviderServiceStatusObservation `json:"serviceStatus,omitempty" tf:"service_status,omitempty"`

	Signatures []SignaturesObservation `json:"signatures,omitempty" tf:"signatures,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafApplicationSignatureProviderParameters struct {

	// +kubebuilder:validation:Optional
	AvailableApplications []AvailableApplicationsParameters `json:"availableApplications,omitempty" tf:"available_applications,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []WafApplicationSignatureProviderConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	RulesetVersion *string `json:"rulesetVersion,omitempty" tf:"ruleset_version,omitempty"`

	// +kubebuilder:validation:Optional
	ServiceStatus []WafApplicationSignatureProviderServiceStatusParameters `json:"serviceStatus,omitempty" tf:"service_status,omitempty"`

	// +kubebuilder:validation:Optional
	Signatures []SignaturesParameters `json:"signatures,omitempty" tf:"signatures,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafApplicationSignatureProviderServiceStatusInitParameters struct {
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	LastSuccessfulUpdateCheck []ServiceStatusLastSuccessfulUpdateCheckInitParameters `json:"lastSuccessfulUpdateCheck,omitempty" tf:"last_successful_update_check,omitempty"`

	UpstreamSyncTimestamp []UpstreamSyncTimestampInitParameters `json:"upstreamSyncTimestamp,omitempty" tf:"upstream_sync_timestamp,omitempty"`
}

type WafApplicationSignatureProviderServiceStatusObservation struct {
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	LastSuccessfulUpdateCheck []ServiceStatusLastSuccessfulUpdateCheckObservation `json:"lastSuccessfulUpdateCheck,omitempty" tf:"last_successful_update_check,omitempty"`

	UpstreamSyncTimestamp []UpstreamSyncTimestampObservation `json:"upstreamSyncTimestamp,omitempty" tf:"upstream_sync_timestamp,omitempty"`
}

type WafApplicationSignatureProviderServiceStatusParameters struct {

	// +kubebuilder:validation:Optional
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	// +kubebuilder:validation:Optional
	LastSuccessfulUpdateCheck []ServiceStatusLastSuccessfulUpdateCheckParameters `json:"lastSuccessfulUpdateCheck,omitempty" tf:"last_successful_update_check,omitempty"`

	// +kubebuilder:validation:Optional
	UpstreamSyncTimestamp []UpstreamSyncTimestampParameters `json:"upstreamSyncTimestamp,omitempty" tf:"upstream_sync_timestamp,omitempty"`
}

// WafApplicationSignatureProviderSpec defines the desired state of WafApplicationSignatureProvider
type WafApplicationSignatureProviderSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WafApplicationSignatureProviderParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WafApplicationSignatureProviderInitParameters `json:"initProvider,omitempty"`
}

// WafApplicationSignatureProviderStatus defines the observed state of WafApplicationSignatureProvider.
type WafApplicationSignatureProviderStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WafApplicationSignatureProviderObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafApplicationSignatureProvider is the Schema for the WafApplicationSignatureProviders API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type WafApplicationSignatureProvider struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WafApplicationSignatureProviderSpec   `json:"spec"`
	Status            WafApplicationSignatureProviderStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafApplicationSignatureProviderList contains a list of WafApplicationSignatureProviders
type WafApplicationSignatureProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafApplicationSignatureProvider `json:"items"`
}

// Repository type metadata.
var (
	WafApplicationSignatureProvider_Kind             = "WafApplicationSignatureProvider"
	WafApplicationSignatureProvider_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WafApplicationSignatureProvider_Kind}.String()
	WafApplicationSignatureProvider_KindAPIVersion   = WafApplicationSignatureProvider_Kind + "." + CRDGroupVersion.String()
	WafApplicationSignatureProvider_GroupVersionKind = CRDGroupVersion.WithKind(WafApplicationSignatureProvider_Kind)
)

func init() {
	SchemeBuilder.Register(&WafApplicationSignatureProvider{}, &WafApplicationSignatureProviderList{})
}
