/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LocationsInitParameters struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []LocationsMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []LocationsRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type LocationsMatchInitParameters struct {
	Host []MatchHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	Methods []MethodsInitParameters `json:"methods,omitempty" tf:"methods,omitempty"`

	Path []LocationsMatchPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type LocationsMatchObservation struct {
	Host []MatchHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	Methods []MethodsObservation `json:"methods,omitempty" tf:"methods,omitempty"`

	Path []LocationsMatchPathObservation `json:"path,omitempty" tf:"path,omitempty"`
}

type LocationsMatchParameters struct {

	// +kubebuilder:validation:Optional
	Host []MatchHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []MethodsParameters `json:"methods,omitempty" tf:"methods,omitempty"`

	// +kubebuilder:validation:Optional
	Path []LocationsMatchPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type LocationsMatchPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type LocationsMatchPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type LocationsMatchPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type LocationsObservation struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Match []LocationsMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []LocationsRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type LocationsParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Match []LocationsMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []LocationsRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type LocationsRulesInitParameters struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchElements []MatchElementsInitParameters `json:"matchElements,omitempty" tf:"match_elements,omitempty"`

	MatchValueMaxLength *string `json:"matchValueMaxLength,omitempty" tf:"match_value_max_length,omitempty"`

	MatchValuePattern *string `json:"matchValuePattern,omitempty" tf:"match_value_pattern,omitempty"`

	MatchValueStringGroupKey *string `json:"matchValueStringGroupKey,omitempty" tf:"match_value_string_group_key,omitempty"`

	MatchValueStringGroupRef *string `json:"matchValueStringGroupRef,omitempty" tf:"match_value_string_group_ref,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type LocationsRulesObservation struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchElements []MatchElementsObservation `json:"matchElements,omitempty" tf:"match_elements,omitempty"`

	MatchValueMaxLength *string `json:"matchValueMaxLength,omitempty" tf:"match_value_max_length,omitempty"`

	MatchValuePattern *string `json:"matchValuePattern,omitempty" tf:"match_value_pattern,omitempty"`

	MatchValueStringGroupKey *string `json:"matchValueStringGroupKey,omitempty" tf:"match_value_string_group_key,omitempty"`

	MatchValueStringGroupRef *string `json:"matchValueStringGroupRef,omitempty" tf:"match_value_string_group_ref,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type LocationsRulesParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchElements []MatchElementsParameters `json:"matchElements,omitempty" tf:"match_elements,omitempty"`

	// +kubebuilder:validation:Optional
	MatchValueMaxLength *string `json:"matchValueMaxLength,omitempty" tf:"match_value_max_length,omitempty"`

	// +kubebuilder:validation:Optional
	MatchValuePattern *string `json:"matchValuePattern,omitempty" tf:"match_value_pattern,omitempty"`

	// +kubebuilder:validation:Optional
	MatchValueStringGroupKey *string `json:"matchValueStringGroupKey,omitempty" tf:"match_value_string_group_key,omitempty"`

	// +kubebuilder:validation:Optional
	MatchValueStringGroupRef *string `json:"matchValueStringGroupRef,omitempty" tf:"match_value_string_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ParanoiaLevel *string `json:"paranoiaLevel,omitempty" tf:"paranoia_level,omitempty"`

	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId" tf:"rule_id,omitempty"`
}

type MatchElementsInitParameters struct {
	Excluded *string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	SubElement *string `json:"subElement,omitempty" tf:"sub_element,omitempty"`
}

type MatchElementsObservation struct {
	Excluded *string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	SubElement *string `json:"subElement,omitempty" tf:"sub_element,omitempty"`
}

type MatchElementsParameters struct {

	// +kubebuilder:validation:Optional
	Excluded *string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOp *string `json:"matchOp,omitempty" tf:"match_op,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SubElement *string `json:"subElement,omitempty" tf:"sub_element,omitempty"`
}

type MatchHostInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchHostObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type MatchHostParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type MethodsInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type MethodsObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type MethodsParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type WafPolicyPsmGroupConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyPsmGroupConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyPsmGroupConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WafPolicyPsmGroupInitParameters struct {
	ConfigpbAttributes []WafPolicyPsmGroupConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HitAction *string `json:"hitAction,omitempty" tf:"hit_action,omitempty"`

	IsLearningGroup *string `json:"isLearningGroup,omitempty" tf:"is_learning_group,omitempty"`

	Locations []LocationsInitParameters `json:"locations,omitempty" tf:"locations,omitempty"`

	Markers []WafPolicyPsmGroupMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	MissAction *string `json:"missAction,omitempty" tf:"miss_action,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafPolicyPsmGroupMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyPsmGroupMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyPsmGroupMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type WafPolicyPsmGroupObservation struct {
	ConfigpbAttributes []WafPolicyPsmGroupConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	HitAction *string `json:"hitAction,omitempty" tf:"hit_action,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsLearningGroup *string `json:"isLearningGroup,omitempty" tf:"is_learning_group,omitempty"`

	Locations []LocationsObservation `json:"locations,omitempty" tf:"locations,omitempty"`

	Markers []WafPolicyPsmGroupMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	MissAction *string `json:"missAction,omitempty" tf:"miss_action,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type WafPolicyPsmGroupParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []WafPolicyPsmGroupConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	HitAction *string `json:"hitAction,omitempty" tf:"hit_action,omitempty"`

	// +kubebuilder:validation:Optional
	IsLearningGroup *string `json:"isLearningGroup,omitempty" tf:"is_learning_group,omitempty"`

	// +kubebuilder:validation:Optional
	Locations []LocationsParameters `json:"locations,omitempty" tf:"locations,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []WafPolicyPsmGroupMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	MissAction *string `json:"missAction,omitempty" tf:"miss_action,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// WafPolicyPsmGroupSpec defines the desired state of WafPolicyPsmGroup
type WafPolicyPsmGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WafPolicyPsmGroupParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WafPolicyPsmGroupInitParameters `json:"initProvider,omitempty"`
}

// WafPolicyPsmGroupStatus defines the observed state of WafPolicyPsmGroup.
type WafPolicyPsmGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WafPolicyPsmGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafPolicyPsmGroup is the Schema for the WafPolicyPsmGroups API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type WafPolicyPsmGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   WafPolicyPsmGroupSpec   `json:"spec"`
	Status WafPolicyPsmGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafPolicyPsmGroupList contains a list of WafPolicyPsmGroups
type WafPolicyPsmGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafPolicyPsmGroup `json:"items"`
}

// Repository type metadata.
var (
	WafPolicyPsmGroup_Kind             = "WafPolicyPsmGroup"
	WafPolicyPsmGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WafPolicyPsmGroup_Kind}.String()
	WafPolicyPsmGroup_KindAPIVersion   = WafPolicyPsmGroup_Kind + "." + CRDGroupVersion.String()
	WafPolicyPsmGroup_GroupVersionKind = CRDGroupVersion.WithKind(WafPolicyPsmGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&WafPolicyPsmGroup{}, &WafPolicyPsmGroupList{})
}
