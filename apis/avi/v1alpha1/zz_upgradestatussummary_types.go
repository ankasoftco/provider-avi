/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type UpgradeStatusSummaryInitParameters struct {
	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeStatusSummaryStateInitParameters `json:"state,omitempty" tf:"state,omitempty"`

	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusSummaryObservation struct {
	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeStatusSummaryStateObservation `json:"state,omitempty" tf:"state,omitempty"`

	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusSummaryParameters struct {

	// +kubebuilder:validation:Optional
	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	// +kubebuilder:validation:Optional
	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	// +kubebuilder:validation:Optional
	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State []UpgradeStatusSummaryStateParameters `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusSummaryStateInitParameters struct {
	LastChangedTime []UpgradeStatusSummaryStateLastChangedTimeInitParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusSummaryStateLastChangedTimeInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeStatusSummaryStateLastChangedTimeObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeStatusSummaryStateLastChangedTimeParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type UpgradeStatusSummaryStateObservation struct {
	LastChangedTime []UpgradeStatusSummaryStateLastChangedTimeObservation `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusSummaryStateParameters struct {

	// +kubebuilder:validation:Optional
	LastChangedTime []UpgradeStatusSummaryStateLastChangedTimeParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

// UpgradeStatusSummarySpec defines the desired state of UpgradeStatusSummary
type UpgradeStatusSummarySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UpgradeStatusSummaryParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UpgradeStatusSummaryInitParameters `json:"initProvider,omitempty"`
}

// UpgradeStatusSummaryStatus defines the observed state of UpgradeStatusSummary.
type UpgradeStatusSummaryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UpgradeStatusSummaryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// UpgradeStatusSummary is the Schema for the UpgradeStatusSummarys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type UpgradeStatusSummary struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              UpgradeStatusSummarySpec   `json:"spec"`
	Status            UpgradeStatusSummaryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UpgradeStatusSummaryList contains a list of UpgradeStatusSummarys
type UpgradeStatusSummaryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UpgradeStatusSummary `json:"items"`
}

// Repository type metadata.
var (
	UpgradeStatusSummary_Kind             = "UpgradeStatusSummary"
	UpgradeStatusSummary_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UpgradeStatusSummary_Kind}.String()
	UpgradeStatusSummary_KindAPIVersion   = UpgradeStatusSummary_Kind + "." + CRDGroupVersion.String()
	UpgradeStatusSummary_GroupVersionKind = CRDGroupVersion.WithKind(UpgradeStatusSummary_Kind)
)

func init() {
	SchemeBuilder.Register(&UpgradeStatusSummary{}, &UpgradeStatusSummaryList{})
}
