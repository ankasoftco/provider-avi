/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FailActionLocalRspFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type FailActionLocalRspFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type FailActionLocalRspFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type FailActionLocalRspInitParameters struct {
	File []FailActionLocalRspFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FailActionLocalRspObservation struct {
	File []FailActionLocalRspFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FailActionLocalRspParameters struct {

	// +kubebuilder:validation:Optional
	File []FailActionLocalRspFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type PoolGroupConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupFailActionInitParameters struct {
	LocalRsp []FailActionLocalRspInitParameters `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	Redirect []PoolGroupFailActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PoolGroupFailActionObservation struct {
	LocalRsp []FailActionLocalRspObservation `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	Redirect []PoolGroupFailActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PoolGroupFailActionParameters struct {

	// +kubebuilder:validation:Optional
	LocalRsp []FailActionLocalRspParameters `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []PoolGroupFailActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PoolGroupFailActionRedirectInitParameters struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type PoolGroupFailActionRedirectObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type PoolGroupFailActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type PoolGroupInitParameters struct {
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []PoolGroupConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	DeactivatePrimaryPoolOnDown *string `json:"deactivatePrimaryPoolOnDown,omitempty" tf:"deactivate_primary_pool_on_down,omitempty"`

	DeploymentPolicyRef *string `json:"deploymentPolicyRef,omitempty" tf:"deployment_policy_ref,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	FailAction []PoolGroupFailActionInitParameters `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	ImplicitPriorityLabels *string `json:"implicitPriorityLabels,omitempty" tf:"implicit_priority_labels,omitempty"`

	Markers []PoolGroupMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Members []PoolGroupMembersInitParameters `json:"members,omitempty" tf:"members,omitempty"`

	MinServers *string `json:"minServers,omitempty" tf:"min_servers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PriorityLabelsRef *string `json:"priorityLabelsRef,omitempty" tf:"priority_labels_ref,omitempty"`

	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type PoolGroupMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupMembersInitParameters struct {
	DeploymentState *string `json:"deploymentState,omitempty" tf:"deployment_state,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	PriorityLabel *string `json:"priorityLabel,omitempty" tf:"priority_label,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`
}

type PoolGroupMembersObservation struct {
	DeploymentState *string `json:"deploymentState,omitempty" tf:"deployment_state,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	PriorityLabel *string `json:"priorityLabel,omitempty" tf:"priority_label,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`
}

type PoolGroupMembersParameters struct {

	// +kubebuilder:validation:Optional
	DeploymentState *string `json:"deploymentState,omitempty" tf:"deployment_state,omitempty"`

	// +kubebuilder:validation:Optional
	PoolRef *string `json:"poolRef" tf:"pool_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PriorityLabel *string `json:"priorityLabel,omitempty" tf:"priority_label,omitempty"`

	// +kubebuilder:validation:Optional
	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`
}

type PoolGroupObservation struct {
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []PoolGroupConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	DeactivatePrimaryPoolOnDown *string `json:"deactivatePrimaryPoolOnDown,omitempty" tf:"deactivate_primary_pool_on_down,omitempty"`

	DeploymentPolicyRef *string `json:"deploymentPolicyRef,omitempty" tf:"deployment_policy_ref,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	FailAction []PoolGroupFailActionObservation `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	ImplicitPriorityLabels *string `json:"implicitPriorityLabels,omitempty" tf:"implicit_priority_labels,omitempty"`

	Markers []PoolGroupMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Members []PoolGroupMembersObservation `json:"members,omitempty" tf:"members,omitempty"`

	MinServers *string `json:"minServers,omitempty" tf:"min_servers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PriorityLabelsRef *string `json:"priorityLabelsRef,omitempty" tf:"priority_labels_ref,omitempty"`

	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type PoolGroupParameters struct {

	// +kubebuilder:validation:Optional
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// +kubebuilder:validation:Optional
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []PoolGroupConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	DeactivatePrimaryPoolOnDown *string `json:"deactivatePrimaryPoolOnDown,omitempty" tf:"deactivate_primary_pool_on_down,omitempty"`

	// +kubebuilder:validation:Optional
	DeploymentPolicyRef *string `json:"deploymentPolicyRef,omitempty" tf:"deployment_policy_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	// +kubebuilder:validation:Optional
	FailAction []PoolGroupFailActionParameters `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	// +kubebuilder:validation:Optional
	ImplicitPriorityLabels *string `json:"implicitPriorityLabels,omitempty" tf:"implicit_priority_labels,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []PoolGroupMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Members []PoolGroupMembersParameters `json:"members,omitempty" tf:"members,omitempty"`

	// +kubebuilder:validation:Optional
	MinServers *string `json:"minServers,omitempty" tf:"min_servers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PriorityLabelsRef *string `json:"priorityLabelsRef,omitempty" tf:"priority_labels_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// PoolGroupSpec defines the desired state of PoolGroup
type PoolGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PoolGroupParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PoolGroupInitParameters `json:"initProvider,omitempty"`
}

// PoolGroupStatus defines the observed state of PoolGroup.
type PoolGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PoolGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PoolGroup is the Schema for the PoolGroups API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type PoolGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   PoolGroupSpec   `json:"spec"`
	Status PoolGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PoolGroupList contains a list of PoolGroups
type PoolGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PoolGroup `json:"items"`
}

// Repository type metadata.
var (
	PoolGroup_Kind             = "PoolGroup"
	PoolGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PoolGroup_Kind}.String()
	PoolGroup_KindAPIVersion   = PoolGroup_Kind + "." + CRDGroupVersion.String()
	PoolGroup_GroupVersionKind = CRDGroupVersion.WithKind(PoolGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&PoolGroup{}, &PoolGroupList{})
}
