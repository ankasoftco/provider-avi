/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutomaticInitParameters struct {
	NsxtSegmentSubnet []NsxtSegmentSubnetInitParameters `json:"nsxtSegmentSubnet,omitempty" tf:"nsxt_segment_subnet,omitempty"`

	NumSePerSegment *string `json:"numSePerSegment,omitempty" tf:"num_se_per_segment,omitempty"`

	Tier1LrIds []*string `json:"tier1LrIds,omitempty" tf:"tier1_lr_ids,omitempty"`
}

type AutomaticObservation struct {
	NsxtSegmentSubnet []NsxtSegmentSubnetObservation `json:"nsxtSegmentSubnet,omitempty" tf:"nsxt_segment_subnet,omitempty"`

	NumSePerSegment *string `json:"numSePerSegment,omitempty" tf:"num_se_per_segment,omitempty"`

	Tier1LrIds []*string `json:"tier1LrIds,omitempty" tf:"tier1_lr_ids,omitempty"`
}

type AutomaticParameters struct {

	// +kubebuilder:validation:Optional
	NsxtSegmentSubnet []NsxtSegmentSubnetParameters `json:"nsxtSegmentSubnet" tf:"nsxt_segment_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NumSePerSegment *string `json:"numSePerSegment,omitempty" tf:"num_se_per_segment,omitempty"`

	// +kubebuilder:validation:Optional
	Tier1LrIds []*string `json:"tier1LrIds" tf:"tier1_lr_ids,omitempty"`
}

type AwsConfigurationInitParameters struct {
	AsgPollInterval *string `json:"asgPollInterval,omitempty" tf:"asg_poll_interval,omitempty"`

	EBSEncryption []EBSEncryptionInitParameters `json:"ebsEncryption,omitempty" tf:"ebs_encryption,omitempty"`

	FreeElasticips *string `json:"freeElasticips,omitempty" tf:"free_elasticips,omitempty"`

	IAMAssumeRole *string `json:"iamAssumeRole,omitempty" tf:"iam_assume_role,omitempty"`

	PublishVipToPublicZone *string `json:"publishVipToPublicZone,omitempty" tf:"publish_vip_to_public_zone,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	Route53Integration *string `json:"route53Integration,omitempty" tf:"route53_integration,omitempty"`

	S3Encryption []S3EncryptionInitParameters `json:"s3Encryption,omitempty" tf:"s3_encryption,omitempty"`

	SqsEncryption []SqsEncryptionInitParameters `json:"sqsEncryption,omitempty" tf:"sqs_encryption,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	UseIAMRoles *string `json:"useIamRoles,omitempty" tf:"use_iam_roles,omitempty"`

	UseSnsSqs *string `json:"useSnsSqs,omitempty" tf:"use_sns_sqs,omitempty"`

	VPC *string `json:"vpc,omitempty" tf:"vpc,omitempty"`

	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	Zones []ZonesInitParameters `json:"zones,omitempty" tf:"zones,omitempty"`
}

type AwsConfigurationObservation struct {
	AsgPollInterval *string `json:"asgPollInterval,omitempty" tf:"asg_poll_interval,omitempty"`

	EBSEncryption []EBSEncryptionObservation `json:"ebsEncryption,omitempty" tf:"ebs_encryption,omitempty"`

	FreeElasticips *string `json:"freeElasticips,omitempty" tf:"free_elasticips,omitempty"`

	IAMAssumeRole *string `json:"iamAssumeRole,omitempty" tf:"iam_assume_role,omitempty"`

	PublishVipToPublicZone *string `json:"publishVipToPublicZone,omitempty" tf:"publish_vip_to_public_zone,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	Route53Integration *string `json:"route53Integration,omitempty" tf:"route53_integration,omitempty"`

	S3Encryption []S3EncryptionObservation `json:"s3Encryption,omitempty" tf:"s3_encryption,omitempty"`

	SqsEncryption []SqsEncryptionObservation `json:"sqsEncryption,omitempty" tf:"sqs_encryption,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	UseIAMRoles *string `json:"useIamRoles,omitempty" tf:"use_iam_roles,omitempty"`

	UseSnsSqs *string `json:"useSnsSqs,omitempty" tf:"use_sns_sqs,omitempty"`

	VPC *string `json:"vpc,omitempty" tf:"vpc,omitempty"`

	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	Zones []ZonesObservation `json:"zones,omitempty" tf:"zones,omitempty"`
}

type AwsConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AccessKeyIDSecretRef *v1.SecretKeySelector `json:"accessKeyIdSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	AsgPollInterval *string `json:"asgPollInterval,omitempty" tf:"asg_poll_interval,omitempty"`

	// +kubebuilder:validation:Optional
	EBSEncryption []EBSEncryptionParameters `json:"ebsEncryption,omitempty" tf:"ebs_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	FreeElasticips *string `json:"freeElasticips,omitempty" tf:"free_elasticips,omitempty"`

	// +kubebuilder:validation:Optional
	IAMAssumeRole *string `json:"iamAssumeRole,omitempty" tf:"iam_assume_role,omitempty"`

	// +kubebuilder:validation:Optional
	PublishVipToPublicZone *string `json:"publishVipToPublicZone,omitempty" tf:"publish_vip_to_public_zone,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// +kubebuilder:validation:Optional
	Route53Integration *string `json:"route53Integration,omitempty" tf:"route53_integration,omitempty"`

	// +kubebuilder:validation:Optional
	S3Encryption []S3EncryptionParameters `json:"s3Encryption,omitempty" tf:"s3_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	SecretAccessKeySecretRef *v1.SecretKeySelector `json:"secretAccessKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SqsEncryption []SqsEncryptionParameters `json:"sqsEncryption,omitempty" tf:"sqs_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// +kubebuilder:validation:Optional
	UseIAMRoles *string `json:"useIamRoles,omitempty" tf:"use_iam_roles,omitempty"`

	// +kubebuilder:validation:Optional
	UseSnsSqs *string `json:"useSnsSqs,omitempty" tf:"use_sns_sqs,omitempty"`

	// +kubebuilder:validation:Optional
	VPC *string `json:"vpc,omitempty" tf:"vpc,omitempty"`

	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId" tf:"vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	Zones []ZonesParameters `json:"zones,omitempty" tf:"zones,omitempty"`
}

type AzureConfigurationInitParameters struct {
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	DesID *string `json:"desId,omitempty" tf:"des_id,omitempty"`

	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	NetworkInfo []NetworkInfoInitParameters `json:"networkInfo,omitempty" tf:"network_info,omitempty"`

	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	UseAzureDNS *string `json:"useAzureDns,omitempty" tf:"use_azure_dns,omitempty"`

	UseEnhancedHa *string `json:"useEnhancedHa,omitempty" tf:"use_enhanced_ha,omitempty"`

	UseManagedDisks *string `json:"useManagedDisks,omitempty" tf:"use_managed_disks,omitempty"`

	UseStandardALB *string `json:"useStandardAlb,omitempty" tf:"use_standard_alb,omitempty"`
}

type AzureConfigurationObservation struct {
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	DesID *string `json:"desId,omitempty" tf:"des_id,omitempty"`

	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	NetworkInfo []NetworkInfoObservation `json:"networkInfo,omitempty" tf:"network_info,omitempty"`

	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	UseAzureDNS *string `json:"useAzureDns,omitempty" tf:"use_azure_dns,omitempty"`

	UseEnhancedHa *string `json:"useEnhancedHa,omitempty" tf:"use_enhanced_ha,omitempty"`

	UseManagedDisks *string `json:"useManagedDisks,omitempty" tf:"use_managed_disks,omitempty"`

	UseStandardALB *string `json:"useStandardAlb,omitempty" tf:"use_standard_alb,omitempty"`
}

type AzureConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// +kubebuilder:validation:Optional
	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	// +kubebuilder:validation:Optional
	DesID *string `json:"desId,omitempty" tf:"des_id,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkInfo []NetworkInfoParameters `json:"networkInfo" tf:"network_info,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// +kubebuilder:validation:Optional
	UseAzureDNS *string `json:"useAzureDns,omitempty" tf:"use_azure_dns,omitempty"`

	// +kubebuilder:validation:Optional
	UseEnhancedHa *string `json:"useEnhancedHa,omitempty" tf:"use_enhanced_ha,omitempty"`

	// +kubebuilder:validation:Optional
	UseManagedDisks *string `json:"useManagedDisks,omitempty" tf:"use_managed_disks,omitempty"`

	// +kubebuilder:validation:Optional
	UseStandardALB *string `json:"useStandardAlb,omitempty" tf:"use_standard_alb,omitempty"`
}

type CloudConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type CloudInitParameters struct {
	AutoscalePollingInterval *string `json:"autoscalePollingInterval,omitempty" tf:"autoscale_polling_interval,omitempty"`

	AwsConfiguration []AwsConfigurationInitParameters `json:"awsConfiguration,omitempty" tf:"aws_configuration,omitempty"`

	AzureConfiguration []AzureConfigurationInitParameters `json:"azureConfiguration,omitempty" tf:"azure_configuration,omitempty"`

	CloudstackConfiguration []CloudstackConfigurationInitParameters `json:"cloudstackConfiguration,omitempty" tf:"cloudstack_configuration,omitempty"`

	ConfigpbAttributes []CloudConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CustomTags []CustomTagsInitParameters `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DNSProviderRef *string `json:"dnsProviderRef,omitempty" tf:"dns_provider_ref,omitempty"`

	DNSResolutionOnSe *string `json:"dnsResolutionOnSe,omitempty" tf:"dns_resolution_on_se,omitempty"`

	DNSResolvers []DNSResolversInitParameters `json:"dnsResolvers,omitempty" tf:"dns_resolvers,omitempty"`

	DockerConfiguration []DockerConfigurationInitParameters `json:"dockerConfiguration,omitempty" tf:"docker_configuration,omitempty"`

	EastWestDNSProviderRef *string `json:"eastWestDnsProviderRef,omitempty" tf:"east_west_dns_provider_ref,omitempty"`

	EastWestIpamProviderRef *string `json:"eastWestIpamProviderRef,omitempty" tf:"east_west_ipam_provider_ref,omitempty"`

	EnableVipOnAllInterfaces *string `json:"enableVipOnAllInterfaces,omitempty" tf:"enable_vip_on_all_interfaces,omitempty"`

	EnableVipStaticRoutes *string `json:"enableVipStaticRoutes,omitempty" tf:"enable_vip_static_routes,omitempty"`

	GCPConfiguration []GCPConfigurationInitParameters `json:"gcpConfiguration,omitempty" tf:"gcp_configuration,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IpamProviderRef *string `json:"ipamProviderRef,omitempty" tf:"ipam_provider_ref,omitempty"`

	LicenseTier *string `json:"licenseTier,omitempty" tf:"license_tier,omitempty"`

	LicenseType *string `json:"licenseType,omitempty" tf:"license_type,omitempty"`

	LinuxserverConfiguration []LinuxserverConfigurationInitParameters `json:"linuxserverConfiguration,omitempty" tf:"linuxserver_configuration,omitempty"`

	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	Markers []CloudMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	MetricsPollingInterval *string `json:"metricsPollingInterval,omitempty" tf:"metrics_polling_interval,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NsxtConfiguration []NsxtConfigurationInitParameters `json:"nsxtConfiguration,omitempty" tf:"nsxt_configuration,omitempty"`

	NtpConfiguration []NtpConfigurationInitParameters `json:"ntpConfiguration,omitempty" tf:"ntp_configuration,omitempty"`

	ObjNamePrefix *string `json:"objNamePrefix,omitempty" tf:"obj_name_prefix,omitempty"`

	OpenstackConfiguration []OpenstackConfigurationInitParameters `json:"openstackConfiguration,omitempty" tf:"openstack_configuration,omitempty"`

	PreferStaticRoutes *string `json:"preferStaticRoutes,omitempty" tf:"prefer_static_routes,omitempty"`

	ProxyConfiguration []ProxyConfigurationInitParameters `json:"proxyConfiguration,omitempty" tf:"proxy_configuration,omitempty"`

	RancherConfiguration []RancherConfigurationInitParameters `json:"rancherConfiguration,omitempty" tf:"rancher_configuration,omitempty"`

	SeGroupTemplateRef *string `json:"seGroupTemplateRef,omitempty" tf:"se_group_template_ref,omitempty"`

	StateBasedDNSRegistration *string `json:"stateBasedDnsRegistration,omitempty" tf:"state_based_dns_registration,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	VcaConfiguration []VcaConfigurationInitParameters `json:"vcaConfiguration,omitempty" tf:"vca_configuration,omitempty"`

	VcenterConfiguration []VcenterConfigurationInitParameters `json:"vcenterConfiguration,omitempty" tf:"vcenter_configuration,omitempty"`

	VmcDeployment *string `json:"vmcDeployment,omitempty" tf:"vmc_deployment,omitempty"`

	Vtype *string `json:"vtype,omitempty" tf:"vtype,omitempty"`
}

type CloudMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type CloudMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type CloudMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type CloudObservation struct {
	AutoscalePollingInterval *string `json:"autoscalePollingInterval,omitempty" tf:"autoscale_polling_interval,omitempty"`

	AwsConfiguration []AwsConfigurationObservation `json:"awsConfiguration,omitempty" tf:"aws_configuration,omitempty"`

	AzureConfiguration []AzureConfigurationObservation `json:"azureConfiguration,omitempty" tf:"azure_configuration,omitempty"`

	CloudstackConfiguration []CloudstackConfigurationObservation `json:"cloudstackConfiguration,omitempty" tf:"cloudstack_configuration,omitempty"`

	ConfigpbAttributes []CloudConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CustomTags []CustomTagsObservation `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DNSProviderRef *string `json:"dnsProviderRef,omitempty" tf:"dns_provider_ref,omitempty"`

	DNSResolutionOnSe *string `json:"dnsResolutionOnSe,omitempty" tf:"dns_resolution_on_se,omitempty"`

	DNSResolvers []DNSResolversObservation `json:"dnsResolvers,omitempty" tf:"dns_resolvers,omitempty"`

	DockerConfiguration []DockerConfigurationObservation `json:"dockerConfiguration,omitempty" tf:"docker_configuration,omitempty"`

	EastWestDNSProviderRef *string `json:"eastWestDnsProviderRef,omitempty" tf:"east_west_dns_provider_ref,omitempty"`

	EastWestIpamProviderRef *string `json:"eastWestIpamProviderRef,omitempty" tf:"east_west_ipam_provider_ref,omitempty"`

	EnableVipOnAllInterfaces *string `json:"enableVipOnAllInterfaces,omitempty" tf:"enable_vip_on_all_interfaces,omitempty"`

	EnableVipStaticRoutes *string `json:"enableVipStaticRoutes,omitempty" tf:"enable_vip_static_routes,omitempty"`

	GCPConfiguration []GCPConfigurationObservation `json:"gcpConfiguration,omitempty" tf:"gcp_configuration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IpamProviderRef *string `json:"ipamProviderRef,omitempty" tf:"ipam_provider_ref,omitempty"`

	LicenseTier *string `json:"licenseTier,omitempty" tf:"license_tier,omitempty"`

	LicenseType *string `json:"licenseType,omitempty" tf:"license_type,omitempty"`

	LinuxserverConfiguration []LinuxserverConfigurationObservation `json:"linuxserverConfiguration,omitempty" tf:"linuxserver_configuration,omitempty"`

	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	Markers []CloudMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	MetricsPollingInterval *string `json:"metricsPollingInterval,omitempty" tf:"metrics_polling_interval,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NsxtConfiguration []NsxtConfigurationObservation `json:"nsxtConfiguration,omitempty" tf:"nsxt_configuration,omitempty"`

	NtpConfiguration []NtpConfigurationObservation `json:"ntpConfiguration,omitempty" tf:"ntp_configuration,omitempty"`

	ObjNamePrefix *string `json:"objNamePrefix,omitempty" tf:"obj_name_prefix,omitempty"`

	OpenstackConfiguration []OpenstackConfigurationObservation `json:"openstackConfiguration,omitempty" tf:"openstack_configuration,omitempty"`

	PreferStaticRoutes *string `json:"preferStaticRoutes,omitempty" tf:"prefer_static_routes,omitempty"`

	ProxyConfiguration []ProxyConfigurationObservation `json:"proxyConfiguration,omitempty" tf:"proxy_configuration,omitempty"`

	RancherConfiguration []RancherConfigurationObservation `json:"rancherConfiguration,omitempty" tf:"rancher_configuration,omitempty"`

	SeGroupTemplateRef *string `json:"seGroupTemplateRef,omitempty" tf:"se_group_template_ref,omitempty"`

	StateBasedDNSRegistration *string `json:"stateBasedDnsRegistration,omitempty" tf:"state_based_dns_registration,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	VcaConfiguration []VcaConfigurationObservation `json:"vcaConfiguration,omitempty" tf:"vca_configuration,omitempty"`

	VcenterConfiguration []VcenterConfigurationObservation `json:"vcenterConfiguration,omitempty" tf:"vcenter_configuration,omitempty"`

	VmcDeployment *string `json:"vmcDeployment,omitempty" tf:"vmc_deployment,omitempty"`

	Vtype *string `json:"vtype,omitempty" tf:"vtype,omitempty"`
}

type CloudParameters struct {

	// +kubebuilder:validation:Optional
	AutoscalePollingInterval *string `json:"autoscalePollingInterval,omitempty" tf:"autoscale_polling_interval,omitempty"`

	// +kubebuilder:validation:Optional
	AwsConfiguration []AwsConfigurationParameters `json:"awsConfiguration,omitempty" tf:"aws_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	AzureConfiguration []AzureConfigurationParameters `json:"azureConfiguration,omitempty" tf:"azure_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	CloudstackConfiguration []CloudstackConfigurationParameters `json:"cloudstackConfiguration,omitempty" tf:"cloudstack_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []CloudConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CustomTags []CustomTagsParameters `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// +kubebuilder:validation:Optional
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	DNSProviderRef *string `json:"dnsProviderRef,omitempty" tf:"dns_provider_ref,omitempty"`

	// +kubebuilder:validation:Optional
	DNSResolutionOnSe *string `json:"dnsResolutionOnSe,omitempty" tf:"dns_resolution_on_se,omitempty"`

	// +kubebuilder:validation:Optional
	DNSResolvers []DNSResolversParameters `json:"dnsResolvers,omitempty" tf:"dns_resolvers,omitempty"`

	// +kubebuilder:validation:Optional
	DockerConfiguration []DockerConfigurationParameters `json:"dockerConfiguration,omitempty" tf:"docker_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	EastWestDNSProviderRef *string `json:"eastWestDnsProviderRef,omitempty" tf:"east_west_dns_provider_ref,omitempty"`

	// +kubebuilder:validation:Optional
	EastWestIpamProviderRef *string `json:"eastWestIpamProviderRef,omitempty" tf:"east_west_ipam_provider_ref,omitempty"`

	// +kubebuilder:validation:Optional
	EnableVipOnAllInterfaces *string `json:"enableVipOnAllInterfaces,omitempty" tf:"enable_vip_on_all_interfaces,omitempty"`

	// +kubebuilder:validation:Optional
	EnableVipStaticRoutes *string `json:"enableVipStaticRoutes,omitempty" tf:"enable_vip_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	GCPConfiguration []GCPConfigurationParameters `json:"gcpConfiguration,omitempty" tf:"gcp_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IpamProviderRef *string `json:"ipamProviderRef,omitempty" tf:"ipam_provider_ref,omitempty"`

	// +kubebuilder:validation:Optional
	LicenseTier *string `json:"licenseTier,omitempty" tf:"license_tier,omitempty"`

	// +kubebuilder:validation:Optional
	LicenseType *string `json:"licenseType,omitempty" tf:"license_type,omitempty"`

	// +kubebuilder:validation:Optional
	LinuxserverConfiguration []LinuxserverConfigurationParameters `json:"linuxserverConfiguration,omitempty" tf:"linuxserver_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceMode *string `json:"maintenanceMode,omitempty" tf:"maintenance_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []CloudMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	MetricsPollingInterval *string `json:"metricsPollingInterval,omitempty" tf:"metrics_polling_interval,omitempty"`

	// +kubebuilder:validation:Optional
	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NsxtConfiguration []NsxtConfigurationParameters `json:"nsxtConfiguration,omitempty" tf:"nsxt_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	NtpConfiguration []NtpConfigurationParameters `json:"ntpConfiguration,omitempty" tf:"ntp_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	ObjNamePrefix *string `json:"objNamePrefix,omitempty" tf:"obj_name_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	OpenstackConfiguration []OpenstackConfigurationParameters `json:"openstackConfiguration,omitempty" tf:"openstack_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	PreferStaticRoutes *string `json:"preferStaticRoutes,omitempty" tf:"prefer_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	ProxyConfiguration []ProxyConfigurationParameters `json:"proxyConfiguration,omitempty" tf:"proxy_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	RancherConfiguration []RancherConfigurationParameters `json:"rancherConfiguration,omitempty" tf:"rancher_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupTemplateRef *string `json:"seGroupTemplateRef,omitempty" tf:"se_group_template_ref,omitempty"`

	// +kubebuilder:validation:Optional
	StateBasedDNSRegistration *string `json:"stateBasedDnsRegistration,omitempty" tf:"state_based_dns_registration,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	VcaConfiguration []VcaConfigurationParameters `json:"vcaConfiguration,omitempty" tf:"vca_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	VcenterConfiguration []VcenterConfigurationParameters `json:"vcenterConfiguration,omitempty" tf:"vcenter_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	VmcDeployment *string `json:"vmcDeployment,omitempty" tf:"vmc_deployment,omitempty"`

	// +kubebuilder:validation:Optional
	Vtype *string `json:"vtype,omitempty" tf:"vtype,omitempty"`
}

type CloudstackConfigurationInitParameters struct {
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	CntrPublicIP *string `json:"cntrPublicIp,omitempty" tf:"cntr_public_ip,omitempty"`

	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`
}

type CloudstackConfigurationObservation struct {
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	CntrPublicIP *string `json:"cntrPublicIp,omitempty" tf:"cntr_public_ip,omitempty"`

	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`
}

type CloudstackConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	APIURL *string `json:"apiUrl" tf:"api_url,omitempty"`

	// +kubebuilder:validation:Required
	AccessKeyIDSecretRef v1.SecretKeySelector `json:"accessKeyIdSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	CntrPublicIP *string `json:"cntrPublicIp,omitempty" tf:"cntr_public_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkName *string `json:"mgmtNetworkName" tf:"mgmt_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`

	// +kubebuilder:validation:Required
	SecretAccessKeySecretRef v1.SecretKeySelector `json:"secretAccessKeySecretRef" tf:"-"`
}

type ContentLibInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ContentLibObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ContentLibParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomSeImagePropertiesInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomSeImagePropertiesObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomSeImagePropertiesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomTagsInitParameters struct {
	TagKey *string `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	TagVal *string `json:"tagVal,omitempty" tf:"tag_val,omitempty"`
}

type CustomTagsObservation struct {
	TagKey *string `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	TagVal *string `json:"tagVal,omitempty" tf:"tag_val,omitempty"`
}

type CustomTagsParameters struct {

	// +kubebuilder:validation:Optional
	TagKey *string `json:"tagKey" tf:"tag_key,omitempty"`

	// +kubebuilder:validation:Optional
	TagVal *string `json:"tagVal,omitempty" tf:"tag_val,omitempty"`
}

type DNSResolversInitParameters struct {
	FixedTTL *string `json:"fixedTtl,omitempty" tf:"fixed_ttl,omitempty"`

	MinTTL *string `json:"minTtl,omitempty" tf:"min_ttl,omitempty"`

	NameserverIps []NameserverIpsInitParameters `json:"nameserverIps,omitempty" tf:"nameserver_ips,omitempty"`

	ResolverName *string `json:"resolverName,omitempty" tf:"resolver_name,omitempty"`

	UseMgmt *string `json:"useMgmt,omitempty" tf:"use_mgmt,omitempty"`
}

type DNSResolversObservation struct {
	FixedTTL *string `json:"fixedTtl,omitempty" tf:"fixed_ttl,omitempty"`

	MinTTL *string `json:"minTtl,omitempty" tf:"min_ttl,omitempty"`

	NameserverIps []NameserverIpsObservation `json:"nameserverIps,omitempty" tf:"nameserver_ips,omitempty"`

	ResolverName *string `json:"resolverName,omitempty" tf:"resolver_name,omitempty"`

	UseMgmt *string `json:"useMgmt,omitempty" tf:"use_mgmt,omitempty"`
}

type DNSResolversParameters struct {

	// +kubebuilder:validation:Optional
	FixedTTL *string `json:"fixedTtl,omitempty" tf:"fixed_ttl,omitempty"`

	// +kubebuilder:validation:Optional
	MinTTL *string `json:"minTtl,omitempty" tf:"min_ttl,omitempty"`

	// +kubebuilder:validation:Optional
	NameserverIps []NameserverIpsParameters `json:"nameserverIps" tf:"nameserver_ips,omitempty"`

	// +kubebuilder:validation:Optional
	ResolverName *string `json:"resolverName" tf:"resolver_name,omitempty"`

	// +kubebuilder:validation:Optional
	UseMgmt *string `json:"useMgmt,omitempty" tf:"use_mgmt,omitempty"`
}

type DataNetworkConfigInitParameters struct {
	Tier1SegmentConfig []Tier1SegmentConfigInitParameters `json:"tier1SegmentConfig,omitempty" tf:"tier1_segment_config,omitempty"`

	TransportZone *string `json:"transportZone,omitempty" tf:"transport_zone,omitempty"`

	TzType *string `json:"tzType,omitempty" tf:"tz_type,omitempty"`

	VlanSegments []*string `json:"vlanSegments,omitempty" tf:"vlan_segments,omitempty"`
}

type DataNetworkConfigObservation struct {
	Tier1SegmentConfig []Tier1SegmentConfigObservation `json:"tier1SegmentConfig,omitempty" tf:"tier1_segment_config,omitempty"`

	TransportZone *string `json:"transportZone,omitempty" tf:"transport_zone,omitempty"`

	TzType *string `json:"tzType,omitempty" tf:"tz_type,omitempty"`

	VlanSegments []*string `json:"vlanSegments,omitempty" tf:"vlan_segments,omitempty"`
}

type DataNetworkConfigParameters struct {

	// +kubebuilder:validation:Optional
	Tier1SegmentConfig []Tier1SegmentConfigParameters `json:"tier1SegmentConfig,omitempty" tf:"tier1_segment_config,omitempty"`

	// +kubebuilder:validation:Optional
	TransportZone *string `json:"transportZone" tf:"transport_zone,omitempty"`

	// +kubebuilder:validation:Optional
	TzType *string `json:"tzType" tf:"tz_type,omitempty"`

	// +kubebuilder:validation:Optional
	VlanSegments []*string `json:"vlanSegments,omitempty" tf:"vlan_segments,omitempty"`
}

type DockerConfigurationInitParameters struct {
	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	CATLSKeyAndCertificateRef *string `json:"caTlsKeyAndCertificateRef,omitempty" tf:"ca_tls_key_and_certificate_ref,omitempty"`

	ClientTLSKeyAndCertificateRef *string `json:"clientTlsKeyAndCertificateRef,omitempty" tf:"client_tls_key_and_certificate_ref,omitempty"`

	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	DockerRegistrySe []DockerRegistrySeInitParameters `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	EastWestPlacementSubnet []EastWestPlacementSubnetInitParameters `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	SeExcludeAttributes []SeExcludeAttributesInitParameters `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	SeIncludeAttributes []SeIncludeAttributesInitParameters `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	UcpNodes []*string `json:"ucpNodes,omitempty" tf:"ucp_nodes,omitempty"`

	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type DockerConfigurationObservation struct {
	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	CATLSKeyAndCertificateRef *string `json:"caTlsKeyAndCertificateRef,omitempty" tf:"ca_tls_key_and_certificate_ref,omitempty"`

	ClientTLSKeyAndCertificateRef *string `json:"clientTlsKeyAndCertificateRef,omitempty" tf:"client_tls_key_and_certificate_ref,omitempty"`

	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	DockerRegistrySe []DockerRegistrySeObservation `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	EastWestPlacementSubnet []EastWestPlacementSubnetObservation `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	SeExcludeAttributes []SeExcludeAttributesObservation `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	SeIncludeAttributes []SeIncludeAttributesObservation `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	UcpNodes []*string `json:"ucpNodes,omitempty" tf:"ucp_nodes,omitempty"`

	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type DockerConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	// +kubebuilder:validation:Optional
	CATLSKeyAndCertificateRef *string `json:"caTlsKeyAndCertificateRef,omitempty" tf:"ca_tls_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ClientTLSKeyAndCertificateRef *string `json:"clientTlsKeyAndCertificateRef,omitempty" tf:"client_tls_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	// +kubebuilder:validation:Optional
	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	// +kubebuilder:validation:Optional
	DockerRegistrySe []DockerRegistrySeParameters `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	// +kubebuilder:validation:Optional
	EastWestPlacementSubnet []EastWestPlacementSubnetParameters `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	// +kubebuilder:validation:Optional
	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	// +kubebuilder:validation:Optional
	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	// +kubebuilder:validation:Optional
	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	// +kubebuilder:validation:Optional
	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	// +kubebuilder:validation:Optional
	SeExcludeAttributes []SeExcludeAttributesParameters `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SeIncludeAttributes []SeIncludeAttributesParameters `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	// +kubebuilder:validation:Optional
	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	// +kubebuilder:validation:Optional
	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	// +kubebuilder:validation:Optional
	UcpNodes []*string `json:"ucpNodes,omitempty" tf:"ucp_nodes,omitempty"`

	// +kubebuilder:validation:Optional
	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	// +kubebuilder:validation:Optional
	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type DockerRegistrySeInitParameters struct {
	OshiftRegistry []OshiftRegistryInitParameters `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type DockerRegistrySeObservation struct {
	OshiftRegistry []OshiftRegistryObservation `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type DockerRegistrySeOshiftRegistryInitParameters struct {
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	RegistryVip []OshiftRegistryRegistryVipInitParameters `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type DockerRegistrySeOshiftRegistryObservation struct {
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	RegistryVip []OshiftRegistryRegistryVipObservation `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type DockerRegistrySeOshiftRegistryParameters struct {

	// +kubebuilder:validation:Optional
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	// +kubebuilder:validation:Optional
	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	// +kubebuilder:validation:Optional
	RegistryVip []OshiftRegistryRegistryVipParameters `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type DockerRegistrySeParameters struct {

	// +kubebuilder:validation:Optional
	OshiftRegistry []OshiftRegistryParameters `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	// +kubebuilder:validation:Optional
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type EBSEncryptionInitParameters struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type EBSEncryptionObservation struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type EBSEncryptionParameters struct {

	// +kubebuilder:validation:Optional
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type EastWestPlacementSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EastWestPlacementSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EastWestPlacementSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type EastWestPlacementSubnetInitParameters struct {
	IPAddr []EastWestPlacementSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type EastWestPlacementSubnetObservation struct {
	IPAddr []EastWestPlacementSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type EastWestPlacementSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []EastWestPlacementSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type EncryptionKeysInitParameters struct {
	GcsBucketKMSKeyID *string `json:"gcsBucketKmsKeyId,omitempty" tf:"gcs_bucket_kms_key_id,omitempty"`

	GcsObjectsKMSKeyID *string `json:"gcsObjectsKmsKeyId,omitempty" tf:"gcs_objects_kms_key_id,omitempty"`

	SeDiskKMSKeyID *string `json:"seDiskKmsKeyId,omitempty" tf:"se_disk_kms_key_id,omitempty"`

	SeImageKMSKeyID *string `json:"seImageKmsKeyId,omitempty" tf:"se_image_kms_key_id,omitempty"`
}

type EncryptionKeysObservation struct {
	GcsBucketKMSKeyID *string `json:"gcsBucketKmsKeyId,omitempty" tf:"gcs_bucket_kms_key_id,omitempty"`

	GcsObjectsKMSKeyID *string `json:"gcsObjectsKmsKeyId,omitempty" tf:"gcs_objects_kms_key_id,omitempty"`

	SeDiskKMSKeyID *string `json:"seDiskKmsKeyId,omitempty" tf:"se_disk_kms_key_id,omitempty"`

	SeImageKMSKeyID *string `json:"seImageKmsKeyId,omitempty" tf:"se_image_kms_key_id,omitempty"`
}

type EncryptionKeysParameters struct {

	// +kubebuilder:validation:Optional
	GcsBucketKMSKeyID *string `json:"gcsBucketKmsKeyId,omitempty" tf:"gcs_bucket_kms_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	GcsObjectsKMSKeyID *string `json:"gcsObjectsKmsKeyId,omitempty" tf:"gcs_objects_kms_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	SeDiskKMSKeyID *string `json:"seDiskKmsKeyId,omitempty" tf:"se_disk_kms_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	SeImageKMSKeyID *string `json:"seImageKmsKeyId,omitempty" tf:"se_image_kms_key_id,omitempty"`
}

type GCPConfigurationInitParameters struct {
	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	EncryptionKeys []EncryptionKeysInitParameters `json:"encryptionKeys,omitempty" tf:"encryption_keys,omitempty"`

	FirewallTargetTags []*string `json:"firewallTargetTags,omitempty" tf:"firewall_target_tags,omitempty"`

	GCPServiceAccountEmail *string `json:"gcpServiceAccountEmail,omitempty" tf:"gcp_service_account_email,omitempty"`

	GcsBucketName *string `json:"gcsBucketName,omitempty" tf:"gcs_bucket_name,omitempty"`

	GcsProjectID *string `json:"gcsProjectId,omitempty" tf:"gcs_project_id,omitempty"`

	NetworkConfig []NetworkConfigInitParameters `json:"networkConfig,omitempty" tf:"network_config,omitempty"`

	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`

	SeProjectID *string `json:"seProjectId,omitempty" tf:"se_project_id,omitempty"`

	VipAllocationStrategy []VipAllocationStrategyInitParameters `json:"vipAllocationStrategy,omitempty" tf:"vip_allocation_strategy,omitempty"`

	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type GCPConfigurationObservation struct {
	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	EncryptionKeys []EncryptionKeysObservation `json:"encryptionKeys,omitempty" tf:"encryption_keys,omitempty"`

	FirewallTargetTags []*string `json:"firewallTargetTags,omitempty" tf:"firewall_target_tags,omitempty"`

	GCPServiceAccountEmail *string `json:"gcpServiceAccountEmail,omitempty" tf:"gcp_service_account_email,omitempty"`

	GcsBucketName *string `json:"gcsBucketName,omitempty" tf:"gcs_bucket_name,omitempty"`

	GcsProjectID *string `json:"gcsProjectId,omitempty" tf:"gcs_project_id,omitempty"`

	NetworkConfig []NetworkConfigObservation `json:"networkConfig,omitempty" tf:"network_config,omitempty"`

	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`

	SeProjectID *string `json:"seProjectId,omitempty" tf:"se_project_id,omitempty"`

	VipAllocationStrategy []VipAllocationStrategyObservation `json:"vipAllocationStrategy,omitempty" tf:"vip_allocation_strategy,omitempty"`

	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type GCPConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	CloudCredentialsRef *string `json:"cloudCredentialsRef,omitempty" tf:"cloud_credentials_ref,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionKeys []EncryptionKeysParameters `json:"encryptionKeys,omitempty" tf:"encryption_keys,omitempty"`

	// +kubebuilder:validation:Optional
	FirewallTargetTags []*string `json:"firewallTargetTags,omitempty" tf:"firewall_target_tags,omitempty"`

	// +kubebuilder:validation:Optional
	GCPServiceAccountEmail *string `json:"gcpServiceAccountEmail,omitempty" tf:"gcp_service_account_email,omitempty"`

	// +kubebuilder:validation:Optional
	GcsBucketName *string `json:"gcsBucketName,omitempty" tf:"gcs_bucket_name,omitempty"`

	// +kubebuilder:validation:Optional
	GcsProjectID *string `json:"gcsProjectId,omitempty" tf:"gcs_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkConfig []NetworkConfigParameters `json:"networkConfig" tf:"network_config,omitempty"`

	// +kubebuilder:validation:Optional
	RegionName *string `json:"regionName" tf:"region_name,omitempty"`

	// +kubebuilder:validation:Optional
	SeProjectID *string `json:"seProjectId" tf:"se_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	VipAllocationStrategy []VipAllocationStrategyParameters `json:"vipAllocationStrategy" tf:"vip_allocation_strategy,omitempty"`

	// +kubebuilder:validation:Optional
	Zones []*string `json:"zones" tf:"zones,omitempty"`
}

type HostAttrInitParameters struct {
	AttrKey *string `json:"attrKey,omitempty" tf:"attr_key,omitempty"`

	AttrVal *string `json:"attrVal,omitempty" tf:"attr_val,omitempty"`
}

type HostAttrObservation struct {
	AttrKey *string `json:"attrKey,omitempty" tf:"attr_key,omitempty"`

	AttrVal *string `json:"attrVal,omitempty" tf:"attr_val,omitempty"`
}

type HostAttrParameters struct {

	// +kubebuilder:validation:Optional
	AttrKey *string `json:"attrKey" tf:"attr_key,omitempty"`

	// +kubebuilder:validation:Optional
	AttrVal *string `json:"attrVal,omitempty" tf:"attr_val,omitempty"`
}

type HostIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type HostsInitParameters struct {
	HostAttr []HostAttrInitParameters `json:"hostAttr,omitempty" tf:"host_attr,omitempty"`

	HostIP []HostIPInitParameters `json:"hostIp,omitempty" tf:"host_ip,omitempty"`

	NodeAvailabilityZone *string `json:"nodeAvailabilityZone,omitempty" tf:"node_availability_zone,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`
}

type HostsObservation struct {
	HostAttr []HostAttrObservation `json:"hostAttr,omitempty" tf:"host_attr,omitempty"`

	HostIP []HostIPObservation `json:"hostIp,omitempty" tf:"host_ip,omitempty"`

	NodeAvailabilityZone *string `json:"nodeAvailabilityZone,omitempty" tf:"node_availability_zone,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`
}

type HostsParameters struct {

	// +kubebuilder:validation:Optional
	HostAttr []HostAttrParameters `json:"hostAttr,omitempty" tf:"host_attr,omitempty"`

	// +kubebuilder:validation:Optional
	HostIP []HostIPParameters `json:"hostIp" tf:"host_ip,omitempty"`

	// +kubebuilder:validation:Optional
	NodeAvailabilityZone *string `json:"nodeAvailabilityZone,omitempty" tf:"node_availability_zone,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`
}

type HypervisorPropertiesInitParameters struct {
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	ImageProperties []ImagePropertiesInitParameters `json:"imageProperties,omitempty" tf:"image_properties,omitempty"`
}

type HypervisorPropertiesObservation struct {
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	ImageProperties []ImagePropertiesObservation `json:"imageProperties,omitempty" tf:"image_properties,omitempty"`
}

type HypervisorPropertiesParameters struct {

	// +kubebuilder:validation:Optional
	Hypervisor *string `json:"hypervisor" tf:"hypervisor,omitempty"`

	// +kubebuilder:validation:Optional
	ImageProperties []ImagePropertiesParameters `json:"imageProperties,omitempty" tf:"image_properties,omitempty"`
}

type IlbInitParameters struct {
	CloudRouterNames []*string `json:"cloudRouterNames,omitempty" tf:"cloud_router_names,omitempty"`
}

type IlbObservation struct {
	CloudRouterNames []*string `json:"cloudRouterNames,omitempty" tf:"cloud_router_names,omitempty"`
}

type IlbParameters struct {

	// +kubebuilder:validation:Optional
	CloudRouterNames []*string `json:"cloudRouterNames,omitempty" tf:"cloud_router_names,omitempty"`
}

type ImagePropertiesInitParameters struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ImagePropertiesObservation struct {
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ImagePropertiesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InbandInitParameters struct {
	VPCNetworkName *string `json:"vpcNetworkName,omitempty" tf:"vpc_network_name,omitempty"`

	VPCProjectID *string `json:"vpcProjectId,omitempty" tf:"vpc_project_id,omitempty"`

	VPCSubnetName *string `json:"vpcSubnetName,omitempty" tf:"vpc_subnet_name,omitempty"`
}

type InbandObservation struct {
	VPCNetworkName *string `json:"vpcNetworkName,omitempty" tf:"vpc_network_name,omitempty"`

	VPCProjectID *string `json:"vpcProjectId,omitempty" tf:"vpc_project_id,omitempty"`

	VPCSubnetName *string `json:"vpcSubnetName,omitempty" tf:"vpc_subnet_name,omitempty"`
}

type InbandParameters struct {

	// +kubebuilder:validation:Optional
	VPCNetworkName *string `json:"vpcNetworkName" tf:"vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	VPCProjectID *string `json:"vpcProjectId,omitempty" tf:"vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	VPCSubnetName *string `json:"vpcSubnetName" tf:"vpc_subnet_name,omitempty"`
}

type LinuxserverConfigurationInitParameters struct {
	Hosts []HostsInitParameters `json:"hosts,omitempty" tf:"hosts,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeInbandMgmt *string `json:"seInbandMgmt,omitempty" tf:"se_inband_mgmt,omitempty"`

	SeLogDiskPath *string `json:"seLogDiskPath,omitempty" tf:"se_log_disk_path,omitempty"`

	SeLogDiskSizeGb *string `json:"seLogDiskSizeGb,omitempty" tf:"se_log_disk_size_gb,omitempty"`

	SeSysDiskPath *string `json:"seSysDiskPath,omitempty" tf:"se_sys_disk_path,omitempty"`

	SeSysDiskSizeGb *string `json:"seSysDiskSizeGb,omitempty" tf:"se_sys_disk_size_gb,omitempty"`
}

type LinuxserverConfigurationObservation struct {
	Hosts []HostsObservation `json:"hosts,omitempty" tf:"hosts,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeInbandMgmt *string `json:"seInbandMgmt,omitempty" tf:"se_inband_mgmt,omitempty"`

	SeLogDiskPath *string `json:"seLogDiskPath,omitempty" tf:"se_log_disk_path,omitempty"`

	SeLogDiskSizeGb *string `json:"seLogDiskSizeGb,omitempty" tf:"se_log_disk_size_gb,omitempty"`

	SeSysDiskPath *string `json:"seSysDiskPath,omitempty" tf:"se_sys_disk_path,omitempty"`

	SeSysDiskSizeGb *string `json:"seSysDiskSizeGb,omitempty" tf:"se_sys_disk_size_gb,omitempty"`
}

type LinuxserverConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	Hosts []HostsParameters `json:"hosts,omitempty" tf:"hosts,omitempty"`

	// +kubebuilder:validation:Optional
	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeInbandMgmt *string `json:"seInbandMgmt,omitempty" tf:"se_inband_mgmt,omitempty"`

	// +kubebuilder:validation:Optional
	SeLogDiskPath *string `json:"seLogDiskPath,omitempty" tf:"se_log_disk_path,omitempty"`

	// +kubebuilder:validation:Optional
	SeLogDiskSizeGb *string `json:"seLogDiskSizeGb,omitempty" tf:"se_log_disk_size_gb,omitempty"`

	// +kubebuilder:validation:Optional
	SeSysDiskPath *string `json:"seSysDiskPath,omitempty" tf:"se_sys_disk_path,omitempty"`

	// +kubebuilder:validation:Optional
	SeSysDiskSizeGb *string `json:"seSysDiskSizeGb,omitempty" tf:"se_sys_disk_size_gb,omitempty"`
}

type ManagementIPSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ManagementIPSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ManagementIPSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ManagementIPSubnetInitParameters struct {
	IPAddr []ManagementIPSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ManagementIPSubnetObservation struct {
	IPAddr []ManagementIPSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ManagementIPSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ManagementIPSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ManagementNetworkConfigInitParameters struct {
	OverlaySegment []OverlaySegmentInitParameters `json:"overlaySegment,omitempty" tf:"overlay_segment,omitempty"`

	TransportZone *string `json:"transportZone,omitempty" tf:"transport_zone,omitempty"`

	TzType *string `json:"tzType,omitempty" tf:"tz_type,omitempty"`

	VlanSegment *string `json:"vlanSegment,omitempty" tf:"vlan_segment,omitempty"`
}

type ManagementNetworkConfigObservation struct {
	OverlaySegment []OverlaySegmentObservation `json:"overlaySegment,omitempty" tf:"overlay_segment,omitempty"`

	TransportZone *string `json:"transportZone,omitempty" tf:"transport_zone,omitempty"`

	TzType *string `json:"tzType,omitempty" tf:"tz_type,omitempty"`

	VlanSegment *string `json:"vlanSegment,omitempty" tf:"vlan_segment,omitempty"`
}

type ManagementNetworkConfigParameters struct {

	// +kubebuilder:validation:Optional
	OverlaySegment []OverlaySegmentParameters `json:"overlaySegment,omitempty" tf:"overlay_segment,omitempty"`

	// +kubebuilder:validation:Optional
	TransportZone *string `json:"transportZone" tf:"transport_zone,omitempty"`

	// +kubebuilder:validation:Optional
	TzType *string `json:"tzType" tf:"tz_type,omitempty"`

	// +kubebuilder:validation:Optional
	VlanSegment *string `json:"vlanSegment,omitempty" tf:"vlan_segment,omitempty"`
}

type ManualInitParameters struct {
	Tier1Lrs []Tier1LrsInitParameters `json:"tier1Lrs,omitempty" tf:"tier1_lrs,omitempty"`
}

type ManualObservation struct {
	Tier1Lrs []Tier1LrsObservation `json:"tier1Lrs,omitempty" tf:"tier1_lrs,omitempty"`
}

type ManualParameters struct {

	// +kubebuilder:validation:Optional
	Tier1Lrs []Tier1LrsParameters `json:"tier1Lrs" tf:"tier1_lrs,omitempty"`
}

type NameserverIpsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NameserverIpsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NameserverIpsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NetworkConfigInitParameters struct {
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	Inband []InbandInitParameters `json:"inband,omitempty" tf:"inband,omitempty"`

	OneArm []OneArmInitParameters `json:"oneArm,omitempty" tf:"one_arm,omitempty"`

	TwoArm []TwoArmInitParameters `json:"twoArm,omitempty" tf:"two_arm,omitempty"`
}

type NetworkConfigObservation struct {
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	Inband []InbandObservation `json:"inband,omitempty" tf:"inband,omitempty"`

	OneArm []OneArmObservation `json:"oneArm,omitempty" tf:"one_arm,omitempty"`

	TwoArm []TwoArmObservation `json:"twoArm,omitempty" tf:"two_arm,omitempty"`
}

type NetworkConfigParameters struct {

	// +kubebuilder:validation:Optional
	Config *string `json:"config" tf:"config,omitempty"`

	// +kubebuilder:validation:Optional
	Inband []InbandParameters `json:"inband,omitempty" tf:"inband,omitempty"`

	// +kubebuilder:validation:Optional
	OneArm []OneArmParameters `json:"oneArm,omitempty" tf:"one_arm,omitempty"`

	// +kubebuilder:validation:Optional
	TwoArm []TwoArmParameters `json:"twoArm,omitempty" tf:"two_arm,omitempty"`
}

type NetworkInfoInitParameters struct {
	ManagementNetworkID *string `json:"managementNetworkId,omitempty" tf:"management_network_id,omitempty"`

	SeNetworkID *string `json:"seNetworkId,omitempty" tf:"se_network_id,omitempty"`

	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`
}

type NetworkInfoObservation struct {
	ManagementNetworkID *string `json:"managementNetworkId,omitempty" tf:"management_network_id,omitempty"`

	SeNetworkID *string `json:"seNetworkId,omitempty" tf:"se_network_id,omitempty"`

	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`
}

type NetworkInfoParameters struct {

	// +kubebuilder:validation:Optional
	ManagementNetworkID *string `json:"managementNetworkId,omitempty" tf:"management_network_id,omitempty"`

	// +kubebuilder:validation:Optional
	SeNetworkID *string `json:"seNetworkId,omitempty" tf:"se_network_id,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`
}

type NsxtConfigurationInitParameters struct {
	AutomateDfwRules *string `json:"automateDfwRules,omitempty" tf:"automate_dfw_rules,omitempty"`

	DataNetworkConfig []DataNetworkConfigInitParameters `json:"dataNetworkConfig,omitempty" tf:"data_network_config,omitempty"`

	DomainID *string `json:"domainId,omitempty" tf:"domain_id,omitempty"`

	EnforcementpointID *string `json:"enforcementpointId,omitempty" tf:"enforcementpoint_id,omitempty"`

	ManagementNetworkConfig []ManagementNetworkConfigInitParameters `json:"managementNetworkConfig,omitempty" tf:"management_network_config,omitempty"`

	NsxtCredentialsRef *string `json:"nsxtCredentialsRef,omitempty" tf:"nsxt_credentials_ref,omitempty"`

	NsxtURL *string `json:"nsxtUrl,omitempty" tf:"nsxt_url,omitempty"`

	SiteID *string `json:"siteId,omitempty" tf:"site_id,omitempty"`
}

type NsxtConfigurationObservation struct {
	AutomateDfwRules *string `json:"automateDfwRules,omitempty" tf:"automate_dfw_rules,omitempty"`

	DataNetworkConfig []DataNetworkConfigObservation `json:"dataNetworkConfig,omitempty" tf:"data_network_config,omitempty"`

	DomainID *string `json:"domainId,omitempty" tf:"domain_id,omitempty"`

	EnforcementpointID *string `json:"enforcementpointId,omitempty" tf:"enforcementpoint_id,omitempty"`

	ManagementNetworkConfig []ManagementNetworkConfigObservation `json:"managementNetworkConfig,omitempty" tf:"management_network_config,omitempty"`

	NsxtCredentialsRef *string `json:"nsxtCredentialsRef,omitempty" tf:"nsxt_credentials_ref,omitempty"`

	NsxtURL *string `json:"nsxtUrl,omitempty" tf:"nsxt_url,omitempty"`

	SiteID *string `json:"siteId,omitempty" tf:"site_id,omitempty"`
}

type NsxtConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AutomateDfwRules *string `json:"automateDfwRules,omitempty" tf:"automate_dfw_rules,omitempty"`

	// +kubebuilder:validation:Optional
	DataNetworkConfig []DataNetworkConfigParameters `json:"dataNetworkConfig" tf:"data_network_config,omitempty"`

	// +kubebuilder:validation:Optional
	DomainID *string `json:"domainId,omitempty" tf:"domain_id,omitempty"`

	// +kubebuilder:validation:Optional
	EnforcementpointID *string `json:"enforcementpointId,omitempty" tf:"enforcementpoint_id,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementNetworkConfig []ManagementNetworkConfigParameters `json:"managementNetworkConfig" tf:"management_network_config,omitempty"`

	// +kubebuilder:validation:Optional
	NsxtCredentialsRef *string `json:"nsxtCredentialsRef" tf:"nsxt_credentials_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NsxtURL *string `json:"nsxtUrl" tf:"nsxt_url,omitempty"`

	// +kubebuilder:validation:Optional
	SiteID *string `json:"siteId,omitempty" tf:"site_id,omitempty"`
}

type NsxtSegmentSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsxtSegmentSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsxtSegmentSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NsxtSegmentSubnetInitParameters struct {
	IPAddr []NsxtSegmentSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type NsxtSegmentSubnetObservation struct {
	IPAddr []NsxtSegmentSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type NsxtSegmentSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []NsxtSegmentSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type NtpAuthenticationKeysInitParameters struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	KeyNumber *string `json:"keyNumber,omitempty" tf:"key_number,omitempty"`
}

type NtpAuthenticationKeysObservation struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	KeyNumber *string `json:"keyNumber,omitempty" tf:"key_number,omitempty"`
}

type NtpAuthenticationKeysParameters struct {

	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	KeyNumber *string `json:"keyNumber" tf:"key_number,omitempty"`
}

type NtpConfigurationInitParameters struct {
	NtpAuthenticationKeys []NtpAuthenticationKeysInitParameters `json:"ntpAuthenticationKeys,omitempty" tf:"ntp_authentication_keys,omitempty"`

	NtpServerList []NtpServerListInitParameters `json:"ntpServerList,omitempty" tf:"ntp_server_list,omitempty"`

	NtpServers []NtpServersInitParameters `json:"ntpServers,omitempty" tf:"ntp_servers,omitempty"`
}

type NtpConfigurationObservation struct {
	NtpAuthenticationKeys []NtpAuthenticationKeysObservation `json:"ntpAuthenticationKeys,omitempty" tf:"ntp_authentication_keys,omitempty"`

	NtpServerList []NtpServerListObservation `json:"ntpServerList,omitempty" tf:"ntp_server_list,omitempty"`

	NtpServers []NtpServersObservation `json:"ntpServers,omitempty" tf:"ntp_servers,omitempty"`
}

type NtpConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	NtpAuthenticationKeys []NtpAuthenticationKeysParameters `json:"ntpAuthenticationKeys,omitempty" tf:"ntp_authentication_keys,omitempty"`

	// +kubebuilder:validation:Optional
	NtpServerList []NtpServerListParameters `json:"ntpServerList,omitempty" tf:"ntp_server_list,omitempty"`

	// +kubebuilder:validation:Optional
	NtpServers []NtpServersParameters `json:"ntpServers,omitempty" tf:"ntp_servers,omitempty"`
}

type NtpServerListInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NtpServerListObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NtpServerListParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NtpServersInitParameters struct {
	KeyNumber *string `json:"keyNumber,omitempty" tf:"key_number,omitempty"`

	Server []ServerInitParameters `json:"server,omitempty" tf:"server,omitempty"`
}

type NtpServersObservation struct {
	KeyNumber *string `json:"keyNumber,omitempty" tf:"key_number,omitempty"`

	Server []ServerObservation `json:"server,omitempty" tf:"server,omitempty"`
}

type NtpServersParameters struct {

	// +kubebuilder:validation:Optional
	KeyNumber *string `json:"keyNumber,omitempty" tf:"key_number,omitempty"`

	// +kubebuilder:validation:Optional
	Server []ServerParameters `json:"server" tf:"server,omitempty"`
}

type NuageControllerInitParameters struct {
	NuageOrganization *string `json:"nuageOrganization,omitempty" tf:"nuage_organization,omitempty"`

	NuagePort *string `json:"nuagePort,omitempty" tf:"nuage_port,omitempty"`

	NuageUsername *string `json:"nuageUsername,omitempty" tf:"nuage_username,omitempty"`

	NuageVsdHost *string `json:"nuageVsdHost,omitempty" tf:"nuage_vsd_host,omitempty"`

	SeDomain *string `json:"seDomain,omitempty" tf:"se_domain,omitempty"`

	SeEnterprise *string `json:"seEnterprise,omitempty" tf:"se_enterprise,omitempty"`

	SeNetwork *string `json:"seNetwork,omitempty" tf:"se_network,omitempty"`

	SePolicyGroup *string `json:"sePolicyGroup,omitempty" tf:"se_policy_group,omitempty"`

	SeUser *string `json:"seUser,omitempty" tf:"se_user,omitempty"`

	SeZone *string `json:"seZone,omitempty" tf:"se_zone,omitempty"`
}

type NuageControllerObservation struct {
	NuageOrganization *string `json:"nuageOrganization,omitempty" tf:"nuage_organization,omitempty"`

	NuagePort *string `json:"nuagePort,omitempty" tf:"nuage_port,omitempty"`

	NuageUsername *string `json:"nuageUsername,omitempty" tf:"nuage_username,omitempty"`

	NuageVsdHost *string `json:"nuageVsdHost,omitempty" tf:"nuage_vsd_host,omitempty"`

	SeDomain *string `json:"seDomain,omitempty" tf:"se_domain,omitempty"`

	SeEnterprise *string `json:"seEnterprise,omitempty" tf:"se_enterprise,omitempty"`

	SeNetwork *string `json:"seNetwork,omitempty" tf:"se_network,omitempty"`

	SePolicyGroup *string `json:"sePolicyGroup,omitempty" tf:"se_policy_group,omitempty"`

	SeUser *string `json:"seUser,omitempty" tf:"se_user,omitempty"`

	SeZone *string `json:"seZone,omitempty" tf:"se_zone,omitempty"`
}

type NuageControllerParameters struct {

	// +kubebuilder:validation:Optional
	NuageOrganization *string `json:"nuageOrganization,omitempty" tf:"nuage_organization,omitempty"`

	// +kubebuilder:validation:Optional
	NuagePasswordSecretRef *v1.SecretKeySelector `json:"nuagePasswordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	NuagePort *string `json:"nuagePort,omitempty" tf:"nuage_port,omitempty"`

	// +kubebuilder:validation:Optional
	NuageUsername *string `json:"nuageUsername,omitempty" tf:"nuage_username,omitempty"`

	// +kubebuilder:validation:Optional
	NuageVsdHost *string `json:"nuageVsdHost,omitempty" tf:"nuage_vsd_host,omitempty"`

	// +kubebuilder:validation:Optional
	SeDomain *string `json:"seDomain,omitempty" tf:"se_domain,omitempty"`

	// +kubebuilder:validation:Optional
	SeEnterprise *string `json:"seEnterprise,omitempty" tf:"se_enterprise,omitempty"`

	// +kubebuilder:validation:Optional
	SeNetwork *string `json:"seNetwork,omitempty" tf:"se_network,omitempty"`

	// +kubebuilder:validation:Optional
	SePolicyGroup *string `json:"sePolicyGroup,omitempty" tf:"se_policy_group,omitempty"`

	// +kubebuilder:validation:Optional
	SeUser *string `json:"seUser,omitempty" tf:"se_user,omitempty"`

	// +kubebuilder:validation:Optional
	SeZone *string `json:"seZone,omitempty" tf:"se_zone,omitempty"`
}

type OneArmInitParameters struct {
	DataVPCNetworkName *string `json:"dataVpcNetworkName,omitempty" tf:"data_vpc_network_name,omitempty"`

	DataVPCProjectID *string `json:"dataVpcProjectId,omitempty" tf:"data_vpc_project_id,omitempty"`

	DataVPCSubnetName *string `json:"dataVpcSubnetName,omitempty" tf:"data_vpc_subnet_name,omitempty"`

	ManagementVPCNetworkName *string `json:"managementVpcNetworkName,omitempty" tf:"management_vpc_network_name,omitempty"`

	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	ManagementVPCSubnetName *string `json:"managementVpcSubnetName,omitempty" tf:"management_vpc_subnet_name,omitempty"`
}

type OneArmObservation struct {
	DataVPCNetworkName *string `json:"dataVpcNetworkName,omitempty" tf:"data_vpc_network_name,omitempty"`

	DataVPCProjectID *string `json:"dataVpcProjectId,omitempty" tf:"data_vpc_project_id,omitempty"`

	DataVPCSubnetName *string `json:"dataVpcSubnetName,omitempty" tf:"data_vpc_subnet_name,omitempty"`

	ManagementVPCNetworkName *string `json:"managementVpcNetworkName,omitempty" tf:"management_vpc_network_name,omitempty"`

	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	ManagementVPCSubnetName *string `json:"managementVpcSubnetName,omitempty" tf:"management_vpc_subnet_name,omitempty"`
}

type OneArmParameters struct {

	// +kubebuilder:validation:Optional
	DataVPCNetworkName *string `json:"dataVpcNetworkName" tf:"data_vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	DataVPCProjectID *string `json:"dataVpcProjectId,omitempty" tf:"data_vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	DataVPCSubnetName *string `json:"dataVpcSubnetName" tf:"data_vpc_subnet_name,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCNetworkName *string `json:"managementVpcNetworkName" tf:"management_vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCSubnetName *string `json:"managementVpcSubnetName" tf:"management_vpc_subnet_name,omitempty"`
}

type OpenstackConfigurationInitParameters struct {
	AdminTenant *string `json:"adminTenant,omitempty" tf:"admin_tenant,omitempty"`

	AdminTenantUUID *string `json:"adminTenantUuid,omitempty" tf:"admin_tenant_uuid,omitempty"`

	AllowedAddressPairs *string `json:"allowedAddressPairs,omitempty" tf:"allowed_address_pairs,omitempty"`

	AntiAffinity *string `json:"antiAffinity,omitempty" tf:"anti_affinity,omitempty"`

	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	ConfigDrive *string `json:"configDrive,omitempty" tf:"config_drive,omitempty"`

	ContrailDisablePolicy *string `json:"contrailDisablePolicy,omitempty" tf:"contrail_disable_policy,omitempty"`

	ContrailEndpoint *string `json:"contrailEndpoint,omitempty" tf:"contrail_endpoint,omitempty"`

	ContrailPlugin *string `json:"contrailPlugin,omitempty" tf:"contrail_plugin,omitempty"`

	CustomSeImageProperties []CustomSeImagePropertiesInitParameters `json:"customSeImageProperties,omitempty" tf:"custom_se_image_properties,omitempty"`

	EnableOsObjectCaching *string `json:"enableOsObjectCaching,omitempty" tf:"enable_os_object_caching,omitempty"`

	EnableTagging *string `json:"enableTagging,omitempty" tf:"enable_tagging,omitempty"`

	ExternalNetworks *string `json:"externalNetworks,omitempty" tf:"external_networks,omitempty"`

	FreeFloatingips *string `json:"freeFloatingips,omitempty" tf:"free_floatingips,omitempty"`

	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	HypervisorProperties []HypervisorPropertiesInitParameters `json:"hypervisorProperties,omitempty" tf:"hypervisor_properties,omitempty"`

	ImgFormat *string `json:"imgFormat,omitempty" tf:"img_format,omitempty"`

	ImportKeystoneTenants *string `json:"importKeystoneTenants,omitempty" tf:"import_keystone_tenants,omitempty"`

	Insecure *string `json:"insecure,omitempty" tf:"insecure,omitempty"`

	KeystoneHost *string `json:"keystoneHost,omitempty" tf:"keystone_host,omitempty"`

	MapAdminToCloudadmin *string `json:"mapAdminToCloudadmin,omitempty" tf:"map_admin_to_cloudadmin,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`

	NameOwner *string `json:"nameOwner,omitempty" tf:"name_owner,omitempty"`

	NeutronRbac *string `json:"neutronRbac,omitempty" tf:"neutron_rbac,omitempty"`

	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	ProvName []*string `json:"provName,omitempty" tf:"prov_name,omitempty"`

	ProviderVipNetworks []ProviderVipNetworksInitParameters `json:"providerVipNetworks,omitempty" tf:"provider_vip_networks,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	RoleMapping []RoleMappingInitParameters `json:"roleMapping,omitempty" tf:"role_mapping,omitempty"`

	SecurityGroups *string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	TenantSe *string `json:"tenantSe,omitempty" tf:"tenant_se,omitempty"`

	UseAdminURL *string `json:"useAdminUrl,omitempty" tf:"use_admin_url,omitempty"`

	UseInternalEndpoints *string `json:"useInternalEndpoints,omitempty" tf:"use_internal_endpoints,omitempty"`

	UseKeystoneAuth *string `json:"useKeystoneAuth,omitempty" tf:"use_keystone_auth,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	VipPortInAdminTenant *string `json:"vipPortInAdminTenant,omitempty" tf:"vip_port_in_admin_tenant,omitempty"`
}

type OpenstackConfigurationObservation struct {
	AdminTenant *string `json:"adminTenant,omitempty" tf:"admin_tenant,omitempty"`

	AdminTenantUUID *string `json:"adminTenantUuid,omitempty" tf:"admin_tenant_uuid,omitempty"`

	AllowedAddressPairs *string `json:"allowedAddressPairs,omitempty" tf:"allowed_address_pairs,omitempty"`

	AntiAffinity *string `json:"antiAffinity,omitempty" tf:"anti_affinity,omitempty"`

	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	ConfigDrive *string `json:"configDrive,omitempty" tf:"config_drive,omitempty"`

	ContrailDisablePolicy *string `json:"contrailDisablePolicy,omitempty" tf:"contrail_disable_policy,omitempty"`

	ContrailEndpoint *string `json:"contrailEndpoint,omitempty" tf:"contrail_endpoint,omitempty"`

	ContrailPlugin *string `json:"contrailPlugin,omitempty" tf:"contrail_plugin,omitempty"`

	CustomSeImageProperties []CustomSeImagePropertiesObservation `json:"customSeImageProperties,omitempty" tf:"custom_se_image_properties,omitempty"`

	EnableOsObjectCaching *string `json:"enableOsObjectCaching,omitempty" tf:"enable_os_object_caching,omitempty"`

	EnableTagging *string `json:"enableTagging,omitempty" tf:"enable_tagging,omitempty"`

	ExternalNetworks *string `json:"externalNetworks,omitempty" tf:"external_networks,omitempty"`

	FreeFloatingips *string `json:"freeFloatingips,omitempty" tf:"free_floatingips,omitempty"`

	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	HypervisorProperties []HypervisorPropertiesObservation `json:"hypervisorProperties,omitempty" tf:"hypervisor_properties,omitempty"`

	ImgFormat *string `json:"imgFormat,omitempty" tf:"img_format,omitempty"`

	ImportKeystoneTenants *string `json:"importKeystoneTenants,omitempty" tf:"import_keystone_tenants,omitempty"`

	Insecure *string `json:"insecure,omitempty" tf:"insecure,omitempty"`

	KeystoneHost *string `json:"keystoneHost,omitempty" tf:"keystone_host,omitempty"`

	MapAdminToCloudadmin *string `json:"mapAdminToCloudadmin,omitempty" tf:"map_admin_to_cloudadmin,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`

	NameOwner *string `json:"nameOwner,omitempty" tf:"name_owner,omitempty"`

	NeutronRbac *string `json:"neutronRbac,omitempty" tf:"neutron_rbac,omitempty"`

	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	ProvName []*string `json:"provName,omitempty" tf:"prov_name,omitempty"`

	ProviderVipNetworks []ProviderVipNetworksObservation `json:"providerVipNetworks,omitempty" tf:"provider_vip_networks,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	RoleMapping []RoleMappingObservation `json:"roleMapping,omitempty" tf:"role_mapping,omitempty"`

	SecurityGroups *string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	TenantSe *string `json:"tenantSe,omitempty" tf:"tenant_se,omitempty"`

	UseAdminURL *string `json:"useAdminUrl,omitempty" tf:"use_admin_url,omitempty"`

	UseInternalEndpoints *string `json:"useInternalEndpoints,omitempty" tf:"use_internal_endpoints,omitempty"`

	UseKeystoneAuth *string `json:"useKeystoneAuth,omitempty" tf:"use_keystone_auth,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	VipPortInAdminTenant *string `json:"vipPortInAdminTenant,omitempty" tf:"vip_port_in_admin_tenant,omitempty"`
}

type OpenstackConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AdminTenant *string `json:"adminTenant" tf:"admin_tenant,omitempty"`

	// +kubebuilder:validation:Optional
	AdminTenantUUID *string `json:"adminTenantUuid,omitempty" tf:"admin_tenant_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedAddressPairs *string `json:"allowedAddressPairs,omitempty" tf:"allowed_address_pairs,omitempty"`

	// +kubebuilder:validation:Optional
	AntiAffinity *string `json:"antiAffinity,omitempty" tf:"anti_affinity,omitempty"`

	// +kubebuilder:validation:Optional
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigDrive *string `json:"configDrive,omitempty" tf:"config_drive,omitempty"`

	// +kubebuilder:validation:Optional
	ContrailDisablePolicy *string `json:"contrailDisablePolicy,omitempty" tf:"contrail_disable_policy,omitempty"`

	// +kubebuilder:validation:Optional
	ContrailEndpoint *string `json:"contrailEndpoint,omitempty" tf:"contrail_endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	ContrailPlugin *string `json:"contrailPlugin,omitempty" tf:"contrail_plugin,omitempty"`

	// +kubebuilder:validation:Optional
	CustomSeImageProperties []CustomSeImagePropertiesParameters `json:"customSeImageProperties,omitempty" tf:"custom_se_image_properties,omitempty"`

	// +kubebuilder:validation:Optional
	EnableOsObjectCaching *string `json:"enableOsObjectCaching,omitempty" tf:"enable_os_object_caching,omitempty"`

	// +kubebuilder:validation:Optional
	EnableTagging *string `json:"enableTagging,omitempty" tf:"enable_tagging,omitempty"`

	// +kubebuilder:validation:Optional
	ExternalNetworks *string `json:"externalNetworks,omitempty" tf:"external_networks,omitempty"`

	// +kubebuilder:validation:Optional
	FreeFloatingips *string `json:"freeFloatingips,omitempty" tf:"free_floatingips,omitempty"`

	// +kubebuilder:validation:Optional
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	// +kubebuilder:validation:Optional
	HypervisorProperties []HypervisorPropertiesParameters `json:"hypervisorProperties,omitempty" tf:"hypervisor_properties,omitempty"`

	// +kubebuilder:validation:Optional
	ImgFormat *string `json:"imgFormat,omitempty" tf:"img_format,omitempty"`

	// +kubebuilder:validation:Optional
	ImportKeystoneTenants *string `json:"importKeystoneTenants,omitempty" tf:"import_keystone_tenants,omitempty"`

	// +kubebuilder:validation:Optional
	Insecure *string `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// +kubebuilder:validation:Optional
	KeystoneHost *string `json:"keystoneHost,omitempty" tf:"keystone_host,omitempty"`

	// +kubebuilder:validation:Optional
	MapAdminToCloudadmin *string `json:"mapAdminToCloudadmin,omitempty" tf:"map_admin_to_cloudadmin,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkName *string `json:"mgmtNetworkName" tf:"mgmt_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	NameOwner *string `json:"nameOwner,omitempty" tf:"name_owner,omitempty"`

	// +kubebuilder:validation:Optional
	NeutronRbac *string `json:"neutronRbac,omitempty" tf:"neutron_rbac,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Privilege *string `json:"privilege" tf:"privilege,omitempty"`

	// +kubebuilder:validation:Optional
	ProvName []*string `json:"provName,omitempty" tf:"prov_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderVipNetworks []ProviderVipNetworksParameters `json:"providerVipNetworks,omitempty" tf:"provider_vip_networks,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// +kubebuilder:validation:Optional
	RoleMapping []RoleMappingParameters `json:"roleMapping,omitempty" tf:"role_mapping,omitempty"`

	// +kubebuilder:validation:Optional
	SecurityGroups *string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// +kubebuilder:validation:Optional
	TenantSe *string `json:"tenantSe,omitempty" tf:"tenant_se,omitempty"`

	// +kubebuilder:validation:Optional
	UseAdminURL *string `json:"useAdminUrl,omitempty" tf:"use_admin_url,omitempty"`

	// +kubebuilder:validation:Optional
	UseInternalEndpoints *string `json:"useInternalEndpoints,omitempty" tf:"use_internal_endpoints,omitempty"`

	// +kubebuilder:validation:Optional
	UseKeystoneAuth *string `json:"useKeystoneAuth,omitempty" tf:"use_keystone_auth,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`

	// +kubebuilder:validation:Optional
	VipPortInAdminTenant *string `json:"vipPortInAdminTenant,omitempty" tf:"vip_port_in_admin_tenant,omitempty"`
}

type OshiftRegistryInitParameters struct {
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	RegistryVip []RegistryVipInitParameters `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type OshiftRegistryObservation struct {
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	RegistryVip []RegistryVipObservation `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type OshiftRegistryParameters struct {

	// +kubebuilder:validation:Optional
	RegistryNamespace *string `json:"registryNamespace,omitempty" tf:"registry_namespace,omitempty"`

	// +kubebuilder:validation:Optional
	RegistryService *string `json:"registryService,omitempty" tf:"registry_service,omitempty"`

	// +kubebuilder:validation:Optional
	RegistryVip []RegistryVipParameters `json:"registryVip,omitempty" tf:"registry_vip,omitempty"`
}

type OshiftRegistryRegistryVipInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OshiftRegistryRegistryVipObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OshiftRegistryRegistryVipParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type OverlaySegmentInitParameters struct {
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	Tier1LrID *string `json:"tier1LrId,omitempty" tf:"tier1_lr_id,omitempty"`
}

type OverlaySegmentObservation struct {
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	Tier1LrID *string `json:"tier1LrId,omitempty" tf:"tier1_lr_id,omitempty"`
}

type OverlaySegmentParameters struct {

	// +kubebuilder:validation:Optional
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	// +kubebuilder:validation:Optional
	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tier1LrID *string `json:"tier1LrId" tf:"tier1_lr_id,omitempty"`
}

type ProviderVipNetworksInitParameters struct {
	OsNetworkUUID *string `json:"osNetworkUuid,omitempty" tf:"os_network_uuid,omitempty"`

	OsTenantUuids []*string `json:"osTenantUuids,omitempty" tf:"os_tenant_uuids,omitempty"`
}

type ProviderVipNetworksObservation struct {
	OsNetworkUUID *string `json:"osNetworkUuid,omitempty" tf:"os_network_uuid,omitempty"`

	OsTenantUuids []*string `json:"osTenantUuids,omitempty" tf:"os_tenant_uuids,omitempty"`
}

type ProviderVipNetworksParameters struct {

	// +kubebuilder:validation:Optional
	OsNetworkUUID *string `json:"osNetworkUuid,omitempty" tf:"os_network_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	OsTenantUuids []*string `json:"osTenantUuids,omitempty" tf:"os_tenant_uuids,omitempty"`
}

type ProxyConfigurationInitParameters struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ProxyConfigurationObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ProxyConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RancherConfigurationDockerRegistrySeInitParameters struct {
	OshiftRegistry []DockerRegistrySeOshiftRegistryInitParameters `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RancherConfigurationDockerRegistrySeObservation struct {
	OshiftRegistry []DockerRegistrySeOshiftRegistryObservation `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RancherConfigurationDockerRegistrySeParameters struct {

	// +kubebuilder:validation:Optional
	OshiftRegistry []DockerRegistrySeOshiftRegistryParameters `json:"oshiftRegistry,omitempty" tf:"oshift_registry,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	// +kubebuilder:validation:Optional
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetInitParameters struct {
	IPAddr []RancherConfigurationEastWestPlacementSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetObservation struct {
	IPAddr []RancherConfigurationEastWestPlacementSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type RancherConfigurationEastWestPlacementSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []RancherConfigurationEastWestPlacementSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type RancherConfigurationInitParameters struct {
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	DockerRegistrySe []RancherConfigurationDockerRegistrySeInitParameters `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	EastWestPlacementSubnet []RancherConfigurationEastWestPlacementSubnetInitParameters `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	NuageController []NuageControllerInitParameters `json:"nuageController,omitempty" tf:"nuage_controller,omitempty"`

	RancherServers []*string `json:"rancherServers,omitempty" tf:"rancher_servers,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	SeExcludeAttributes []RancherConfigurationSeExcludeAttributesInitParameters `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	SeIncludeAttributes []RancherConfigurationSeIncludeAttributesInitParameters `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type RancherConfigurationObservation struct {
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	DockerRegistrySe []RancherConfigurationDockerRegistrySeObservation `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	EastWestPlacementSubnet []RancherConfigurationEastWestPlacementSubnetObservation `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	NuageController []NuageControllerObservation `json:"nuageController,omitempty" tf:"nuage_controller,omitempty"`

	RancherServers []*string `json:"rancherServers,omitempty" tf:"rancher_servers,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	SeExcludeAttributes []RancherConfigurationSeExcludeAttributesObservation `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	SeIncludeAttributes []RancherConfigurationSeIncludeAttributesObservation `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type RancherConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// +kubebuilder:validation:Optional
	AppSyncFrequency *string `json:"appSyncFrequency,omitempty" tf:"app_sync_frequency,omitempty"`

	// +kubebuilder:validation:Optional
	ContainerPortMatchHTTPService *string `json:"containerPortMatchHttpService,omitempty" tf:"container_port_match_http_service,omitempty"`

	// +kubebuilder:validation:Optional
	CoredumpDirectory *string `json:"coredumpDirectory,omitempty" tf:"coredump_directory,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoBackendServiceSync *string `json:"disableAutoBackendServiceSync,omitempty" tf:"disable_auto_backend_service_sync,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoFrontendServiceSync *string `json:"disableAutoFrontendServiceSync,omitempty" tf:"disable_auto_frontend_service_sync,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoSeCreation *string `json:"disableAutoSeCreation,omitempty" tf:"disable_auto_se_creation,omitempty"`

	// +kubebuilder:validation:Optional
	DockerRegistrySe []RancherConfigurationDockerRegistrySeParameters `json:"dockerRegistrySe,omitempty" tf:"docker_registry_se,omitempty"`

	// +kubebuilder:validation:Optional
	EastWestPlacementSubnet []RancherConfigurationEastWestPlacementSubnetParameters `json:"eastWestPlacementSubnet,omitempty" tf:"east_west_placement_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEventSubscription *string `json:"enableEventSubscription,omitempty" tf:"enable_event_subscription,omitempty"`

	// +kubebuilder:validation:Optional
	FeproxyContainerPortAsService *string `json:"feproxyContainerPortAsService,omitempty" tf:"feproxy_container_port_as_service,omitempty"`

	// +kubebuilder:validation:Optional
	FeproxyVipsEnableProxyArp *string `json:"feproxyVipsEnableProxyArp,omitempty" tf:"feproxy_vips_enable_proxy_arp,omitempty"`

	// +kubebuilder:validation:Optional
	FleetEndpoint *string `json:"fleetEndpoint,omitempty" tf:"fleet_endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPContainerPorts []*float64 `json:"httpContainerPorts,omitempty" tf:"http_container_ports,omitempty"`

	// +kubebuilder:validation:Optional
	NuageController []NuageControllerParameters `json:"nuageController,omitempty" tf:"nuage_controller,omitempty"`

	// +kubebuilder:validation:Optional
	RancherServers []*string `json:"rancherServers,omitempty" tf:"rancher_servers,omitempty"`

	// +kubebuilder:validation:Optional
	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeDeploymentMethod *string `json:"seDeploymentMethod,omitempty" tf:"se_deployment_method,omitempty"`

	// +kubebuilder:validation:Optional
	SeExcludeAttributes []RancherConfigurationSeExcludeAttributesParameters `json:"seExcludeAttributes,omitempty" tf:"se_exclude_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SeIncludeAttributes []RancherConfigurationSeIncludeAttributesParameters `json:"seIncludeAttributes,omitempty" tf:"se_include_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SeSpawnRate *string `json:"seSpawnRate,omitempty" tf:"se_spawn_rate,omitempty"`

	// +kubebuilder:validation:Optional
	SeVolume *string `json:"seVolume,omitempty" tf:"se_volume,omitempty"`

	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ServicesAccessibleAllInterfaces *string `json:"servicesAccessibleAllInterfaces,omitempty" tf:"services_accessible_all_interfaces,omitempty"`

	// +kubebuilder:validation:Optional
	UseContainerIPPort *string `json:"useContainerIpPort,omitempty" tf:"use_container_ip_port,omitempty"`

	// +kubebuilder:validation:Optional
	UseControllerImage *string `json:"useControllerImage,omitempty" tf:"use_controller_image,omitempty"`
}

type RancherConfigurationSeExcludeAttributesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RancherConfigurationSeExcludeAttributesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RancherConfigurationSeExcludeAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RancherConfigurationSeIncludeAttributesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RancherConfigurationSeIncludeAttributesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RancherConfigurationSeIncludeAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RegistryVipInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RegistryVipObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RegistryVipParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RoleMappingInitParameters struct {
	AviRole *string `json:"aviRole,omitempty" tf:"avi_role,omitempty"`

	OsRole *string `json:"osRole,omitempty" tf:"os_role,omitempty"`
}

type RoleMappingObservation struct {
	AviRole *string `json:"aviRole,omitempty" tf:"avi_role,omitempty"`

	OsRole *string `json:"osRole,omitempty" tf:"os_role,omitempty"`
}

type RoleMappingParameters struct {

	// +kubebuilder:validation:Optional
	AviRole *string `json:"aviRole" tf:"avi_role,omitempty"`

	// +kubebuilder:validation:Optional
	OsRole *string `json:"osRole" tf:"os_role,omitempty"`
}

type RoutesInitParameters struct {
	MatchSeGroupSubnet *string `json:"matchSeGroupSubnet,omitempty" tf:"match_se_group_subnet,omitempty"`

	RoutePriority *string `json:"routePriority,omitempty" tf:"route_priority,omitempty"`
}

type RoutesObservation struct {
	MatchSeGroupSubnet *string `json:"matchSeGroupSubnet,omitempty" tf:"match_se_group_subnet,omitempty"`

	RoutePriority *string `json:"routePriority,omitempty" tf:"route_priority,omitempty"`
}

type RoutesParameters struct {

	// +kubebuilder:validation:Optional
	MatchSeGroupSubnet *string `json:"matchSeGroupSubnet,omitempty" tf:"match_se_group_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	RoutePriority *string `json:"routePriority,omitempty" tf:"route_priority,omitempty"`
}

type S3EncryptionInitParameters struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type S3EncryptionObservation struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type S3EncryptionParameters struct {

	// +kubebuilder:validation:Optional
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type SeExcludeAttributesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeExcludeAttributesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeExcludeAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeIncludeAttributesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeIncludeAttributesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeIncludeAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ServerInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServerObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServerParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SqsEncryptionInitParameters struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type SqsEncryptionObservation struct {
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type SqsEncryptionParameters struct {

	// +kubebuilder:validation:Optional
	MasterKey *string `json:"masterKey,omitempty" tf:"master_key,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type Tier1LrsInitParameters struct {
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	Tier1LrID *string `json:"tier1LrId,omitempty" tf:"tier1_lr_id,omitempty"`
}

type Tier1LrsObservation struct {
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	Tier1LrID *string `json:"tier1LrId,omitempty" tf:"tier1_lr_id,omitempty"`
}

type Tier1LrsParameters struct {

	// +kubebuilder:validation:Optional
	LocaleService *string `json:"localeService,omitempty" tf:"locale_service,omitempty"`

	// +kubebuilder:validation:Optional
	SegmentID *string `json:"segmentId,omitempty" tf:"segment_id,omitempty"`

	// +kubebuilder:validation:Optional
	Tier1LrID *string `json:"tier1LrId" tf:"tier1_lr_id,omitempty"`
}

type Tier1SegmentConfigInitParameters struct {
	Automatic []AutomaticInitParameters `json:"automatic,omitempty" tf:"automatic,omitempty"`

	Manual []ManualInitParameters `json:"manual,omitempty" tf:"manual,omitempty"`

	SegmentConfigMode *string `json:"segmentConfigMode,omitempty" tf:"segment_config_mode,omitempty"`
}

type Tier1SegmentConfigObservation struct {
	Automatic []AutomaticObservation `json:"automatic,omitempty" tf:"automatic,omitempty"`

	Manual []ManualObservation `json:"manual,omitempty" tf:"manual,omitempty"`

	SegmentConfigMode *string `json:"segmentConfigMode,omitempty" tf:"segment_config_mode,omitempty"`
}

type Tier1SegmentConfigParameters struct {

	// +kubebuilder:validation:Optional
	Automatic []AutomaticParameters `json:"automatic,omitempty" tf:"automatic,omitempty"`

	// +kubebuilder:validation:Optional
	Manual []ManualParameters `json:"manual,omitempty" tf:"manual,omitempty"`

	// +kubebuilder:validation:Optional
	SegmentConfigMode *string `json:"segmentConfigMode,omitempty" tf:"segment_config_mode,omitempty"`
}

type TwoArmInitParameters struct {
	BackendDataVPCNetworkName *string `json:"backendDataVpcNetworkName,omitempty" tf:"backend_data_vpc_network_name,omitempty"`

	BackendDataVPCProjectID *string `json:"backendDataVpcProjectId,omitempty" tf:"backend_data_vpc_project_id,omitempty"`

	BackendDataVPCSubnetName *string `json:"backendDataVpcSubnetName,omitempty" tf:"backend_data_vpc_subnet_name,omitempty"`

	FrontendDataVPCNetworkName *string `json:"frontendDataVpcNetworkName,omitempty" tf:"frontend_data_vpc_network_name,omitempty"`

	FrontendDataVPCProjectID *string `json:"frontendDataVpcProjectId,omitempty" tf:"frontend_data_vpc_project_id,omitempty"`

	FrontendDataVPCSubnetName *string `json:"frontendDataVpcSubnetName,omitempty" tf:"frontend_data_vpc_subnet_name,omitempty"`

	ManagementVPCNetworkName *string `json:"managementVpcNetworkName,omitempty" tf:"management_vpc_network_name,omitempty"`

	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	ManagementVPCSubnetName *string `json:"managementVpcSubnetName,omitempty" tf:"management_vpc_subnet_name,omitempty"`
}

type TwoArmObservation struct {
	BackendDataVPCNetworkName *string `json:"backendDataVpcNetworkName,omitempty" tf:"backend_data_vpc_network_name,omitempty"`

	BackendDataVPCProjectID *string `json:"backendDataVpcProjectId,omitempty" tf:"backend_data_vpc_project_id,omitempty"`

	BackendDataVPCSubnetName *string `json:"backendDataVpcSubnetName,omitempty" tf:"backend_data_vpc_subnet_name,omitempty"`

	FrontendDataVPCNetworkName *string `json:"frontendDataVpcNetworkName,omitempty" tf:"frontend_data_vpc_network_name,omitempty"`

	FrontendDataVPCProjectID *string `json:"frontendDataVpcProjectId,omitempty" tf:"frontend_data_vpc_project_id,omitempty"`

	FrontendDataVPCSubnetName *string `json:"frontendDataVpcSubnetName,omitempty" tf:"frontend_data_vpc_subnet_name,omitempty"`

	ManagementVPCNetworkName *string `json:"managementVpcNetworkName,omitempty" tf:"management_vpc_network_name,omitempty"`

	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	ManagementVPCSubnetName *string `json:"managementVpcSubnetName,omitempty" tf:"management_vpc_subnet_name,omitempty"`
}

type TwoArmParameters struct {

	// +kubebuilder:validation:Optional
	BackendDataVPCNetworkName *string `json:"backendDataVpcNetworkName" tf:"backend_data_vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	BackendDataVPCProjectID *string `json:"backendDataVpcProjectId,omitempty" tf:"backend_data_vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	BackendDataVPCSubnetName *string `json:"backendDataVpcSubnetName" tf:"backend_data_vpc_subnet_name,omitempty"`

	// +kubebuilder:validation:Optional
	FrontendDataVPCNetworkName *string `json:"frontendDataVpcNetworkName" tf:"frontend_data_vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	FrontendDataVPCProjectID *string `json:"frontendDataVpcProjectId,omitempty" tf:"frontend_data_vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	FrontendDataVPCSubnetName *string `json:"frontendDataVpcSubnetName" tf:"frontend_data_vpc_subnet_name,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCNetworkName *string `json:"managementVpcNetworkName" tf:"management_vpc_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCProjectID *string `json:"managementVpcProjectId,omitempty" tf:"management_vpc_project_id,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementVPCSubnetName *string `json:"managementVpcSubnetName" tf:"management_vpc_subnet_name,omitempty"`
}

type VcaConfigurationInitParameters struct {
	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	VcaHost *string `json:"vcaHost,omitempty" tf:"vca_host,omitempty"`

	VcaInstance *string `json:"vcaInstance,omitempty" tf:"vca_instance,omitempty"`

	VcaMgmtNetwork *string `json:"vcaMgmtNetwork,omitempty" tf:"vca_mgmt_network,omitempty"`

	VcaOrgnization *string `json:"vcaOrgnization,omitempty" tf:"vca_orgnization,omitempty"`

	VcaUsername *string `json:"vcaUsername,omitempty" tf:"vca_username,omitempty"`

	VcaVdc *string `json:"vcaVdc,omitempty" tf:"vca_vdc,omitempty"`
}

type VcaConfigurationObservation struct {
	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	VcaHost *string `json:"vcaHost,omitempty" tf:"vca_host,omitempty"`

	VcaInstance *string `json:"vcaInstance,omitempty" tf:"vca_instance,omitempty"`

	VcaMgmtNetwork *string `json:"vcaMgmtNetwork,omitempty" tf:"vca_mgmt_network,omitempty"`

	VcaOrgnization *string `json:"vcaOrgnization,omitempty" tf:"vca_orgnization,omitempty"`

	VcaUsername *string `json:"vcaUsername,omitempty" tf:"vca_username,omitempty"`

	VcaVdc *string `json:"vcaVdc,omitempty" tf:"vca_vdc,omitempty"`
}

type VcaConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	Privilege *string `json:"privilege" tf:"privilege,omitempty"`

	// +kubebuilder:validation:Optional
	VcaHost *string `json:"vcaHost" tf:"vca_host,omitempty"`

	// +kubebuilder:validation:Optional
	VcaInstance *string `json:"vcaInstance" tf:"vca_instance,omitempty"`

	// +kubebuilder:validation:Optional
	VcaMgmtNetwork *string `json:"vcaMgmtNetwork" tf:"vca_mgmt_network,omitempty"`

	// +kubebuilder:validation:Optional
	VcaOrgnization *string `json:"vcaOrgnization" tf:"vca_orgnization,omitempty"`

	// +kubebuilder:validation:Required
	VcaPasswordSecretRef v1.SecretKeySelector `json:"vcaPasswordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	VcaUsername *string `json:"vcaUsername" tf:"vca_username,omitempty"`

	// +kubebuilder:validation:Optional
	VcaVdc *string `json:"vcaVdc" tf:"vca_vdc,omitempty"`
}

type VcenterConfigurationInitParameters struct {
	ContentLib []ContentLibInitParameters `json:"contentLib,omitempty" tf:"content_lib,omitempty"`

	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	IsNsxEnvironment *string `json:"isNsxEnvironment,omitempty" tf:"is_nsx_environment,omitempty"`

	ManagementIPSubnet []ManagementIPSubnetInitParameters `json:"managementIpSubnet,omitempty" tf:"management_ip_subnet,omitempty"`

	ManagementNetwork *string `json:"managementNetwork,omitempty" tf:"management_network,omitempty"`

	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	UseContentLib *string `json:"useContentLib,omitempty" tf:"use_content_lib,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	VcenterTemplateSeLocation *string `json:"vcenterTemplateSeLocation,omitempty" tf:"vcenter_template_se_location,omitempty"`

	VcenterURL *string `json:"vcenterUrl,omitempty" tf:"vcenter_url,omitempty"`
}

type VcenterConfigurationObservation struct {
	ContentLib []ContentLibObservation `json:"contentLib,omitempty" tf:"content_lib,omitempty"`

	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	IsNsxEnvironment *string `json:"isNsxEnvironment,omitempty" tf:"is_nsx_environment,omitempty"`

	ManagementIPSubnet []ManagementIPSubnetObservation `json:"managementIpSubnet,omitempty" tf:"management_ip_subnet,omitempty"`

	ManagementNetwork *string `json:"managementNetwork,omitempty" tf:"management_network,omitempty"`

	Privilege *string `json:"privilege,omitempty" tf:"privilege,omitempty"`

	UseContentLib *string `json:"useContentLib,omitempty" tf:"use_content_lib,omitempty"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	VcenterTemplateSeLocation *string `json:"vcenterTemplateSeLocation,omitempty" tf:"vcenter_template_se_location,omitempty"`

	VcenterURL *string `json:"vcenterUrl,omitempty" tf:"vcenter_url,omitempty"`
}

type VcenterConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	ContentLib []ContentLibParameters `json:"contentLib,omitempty" tf:"content_lib,omitempty"`

	// +kubebuilder:validation:Optional
	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	// +kubebuilder:validation:Optional
	IsNsxEnvironment *string `json:"isNsxEnvironment,omitempty" tf:"is_nsx_environment,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementIPSubnet []ManagementIPSubnetParameters `json:"managementIpSubnet,omitempty" tf:"management_ip_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	ManagementNetwork *string `json:"managementNetwork,omitempty" tf:"management_network,omitempty"`

	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Privilege *string `json:"privilege" tf:"privilege,omitempty"`

	// +kubebuilder:validation:Optional
	UseContentLib *string `json:"useContentLib,omitempty" tf:"use_content_lib,omitempty"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	// +kubebuilder:validation:Optional
	VcenterTemplateSeLocation *string `json:"vcenterTemplateSeLocation,omitempty" tf:"vcenter_template_se_location,omitempty"`

	// +kubebuilder:validation:Optional
	VcenterURL *string `json:"vcenterUrl,omitempty" tf:"vcenter_url,omitempty"`
}

type VipAllocationStrategyInitParameters struct {
	Ilb []IlbInitParameters `json:"ilb,omitempty" tf:"ilb,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Routes []RoutesInitParameters `json:"routes,omitempty" tf:"routes,omitempty"`
}

type VipAllocationStrategyObservation struct {
	Ilb []IlbObservation `json:"ilb,omitempty" tf:"ilb,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Routes []RoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`
}

type VipAllocationStrategyParameters struct {

	// +kubebuilder:validation:Optional
	Ilb []IlbParameters `json:"ilb,omitempty" tf:"ilb,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Routes []RoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`
}

type ZonesInitParameters struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`
}

type ZonesObservation struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	MgmtNetworkName *string `json:"mgmtNetworkName,omitempty" tf:"mgmt_network_name,omitempty"`

	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`
}

type ZonesParameters struct {

	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone" tf:"availability_zone,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkName *string `json:"mgmtNetworkName" tf:"mgmt_network_name,omitempty"`

	// +kubebuilder:validation:Optional
	MgmtNetworkUUID *string `json:"mgmtNetworkUuid,omitempty" tf:"mgmt_network_uuid,omitempty"`
}

// CloudSpec defines the desired state of Cloud
type CloudSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudInitParameters `json:"initProvider,omitempty"`
}

// CloudStatus defines the observed state of Cloud.
type CloudStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Cloud is the Schema for the Clouds API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type Cloud struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vtype) || has(self.initProvider.vtype)",message="vtype is a required parameter"
	Spec   CloudSpec   `json:"spec"`
	Status CloudStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudList contains a list of Clouds
type CloudList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cloud `json:"items"`
}

// Repository type metadata.
var (
	Cloud_Kind             = "Cloud"
	Cloud_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cloud_Kind}.String()
	Cloud_KindAPIVersion   = Cloud_Kind + "." + CRDGroupVersion.String()
	Cloud_GroupVersionKind = CRDGroupVersion.WithKind(Cloud_Kind)
)

func init() {
	SchemeBuilder.Register(&Cloud{}, &CloudList{})
}
