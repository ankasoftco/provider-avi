/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloneServersIPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloneServersIPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloneServersIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type CloneServersInitParameters struct {
	IPAddress []CloneServersIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Mac *string `json:"mac,omitempty" tf:"mac,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []CloneServersSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`
}

type CloneServersObservation struct {
	IPAddress []CloneServersIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Mac *string `json:"mac,omitempty" tf:"mac,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []CloneServersSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`
}

type CloneServersParameters struct {

	// +kubebuilder:validation:Optional
	IPAddress []CloneServersIPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	Mac *string `json:"mac,omitempty" tf:"mac,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []CloneServersSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`
}

type CloneServersSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloneServersSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloneServersSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type CloneServersSubnetInitParameters struct {
	IPAddr []CloneServersSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CloneServersSubnetObservation struct {
	IPAddr []CloneServersSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type CloneServersSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []CloneServersSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type TrafficCloneProfileConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type TrafficCloneProfileConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type TrafficCloneProfileConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type TrafficCloneProfileInitParameters struct {
	CloneServers []CloneServersInitParameters `json:"cloneServers,omitempty" tf:"clone_servers,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []TrafficCloneProfileConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Markers []TrafficCloneProfileMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PreserveClientIP *string `json:"preserveClientIp,omitempty" tf:"preserve_client_ip,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type TrafficCloneProfileMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type TrafficCloneProfileMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type TrafficCloneProfileMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type TrafficCloneProfileObservation struct {
	CloneServers []CloneServersObservation `json:"cloneServers,omitempty" tf:"clone_servers,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []TrafficCloneProfileConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []TrafficCloneProfileMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	PreserveClientIP *string `json:"preserveClientIp,omitempty" tf:"preserve_client_ip,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type TrafficCloneProfileParameters struct {

	// +kubebuilder:validation:Optional
	CloneServers []CloneServersParameters `json:"cloneServers,omitempty" tf:"clone_servers,omitempty"`

	// +kubebuilder:validation:Optional
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []TrafficCloneProfileConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []TrafficCloneProfileMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	PreserveClientIP *string `json:"preserveClientIp,omitempty" tf:"preserve_client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

// TrafficCloneProfileSpec defines the desired state of TrafficCloneProfile
type TrafficCloneProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrafficCloneProfileParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrafficCloneProfileInitParameters `json:"initProvider,omitempty"`
}

// TrafficCloneProfileStatus defines the observed state of TrafficCloneProfile.
type TrafficCloneProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrafficCloneProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TrafficCloneProfile is the Schema for the TrafficCloneProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type TrafficCloneProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   TrafficCloneProfileSpec   `json:"spec"`
	Status TrafficCloneProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrafficCloneProfileList contains a list of TrafficCloneProfiles
type TrafficCloneProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrafficCloneProfile `json:"items"`
}

// Repository type metadata.
var (
	TrafficCloneProfile_Kind             = "TrafficCloneProfile"
	TrafficCloneProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrafficCloneProfile_Kind}.String()
	TrafficCloneProfile_KindAPIVersion   = TrafficCloneProfile_Kind + "." + CRDGroupVersion.String()
	TrafficCloneProfile_GroupVersionKind = CRDGroupVersion.WithKind(TrafficCloneProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&TrafficCloneProfile{}, &TrafficCloneProfileList{})
}
