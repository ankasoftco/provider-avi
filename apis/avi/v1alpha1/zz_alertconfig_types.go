/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertConfigConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type AlertConfigConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type AlertConfigConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type AlertConfigInitParameters struct {
	ActionGroupRef *string `json:"actionGroupRef,omitempty" tf:"action_group_ref,omitempty"`

	AlertRule []AlertRuleInitParameters `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`

	AutoscaleAlert *string `json:"autoscaleAlert,omitempty" tf:"autoscale_alert,omitempty"`

	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	ConfigpbAttributes []AlertConfigConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ObjUUID *string `json:"objUuid,omitempty" tf:"obj_uuid,omitempty"`

	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	Recommendation *string `json:"recommendation,omitempty" tf:"recommendation,omitempty"`

	RollingWindow *string `json:"rollingWindow,omitempty" tf:"rolling_window,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`

	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type AlertConfigObservation struct {
	ActionGroupRef *string `json:"actionGroupRef,omitempty" tf:"action_group_ref,omitempty"`

	AlertRule []AlertRuleObservation `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`

	AutoscaleAlert *string `json:"autoscaleAlert,omitempty" tf:"autoscale_alert,omitempty"`

	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	ConfigpbAttributes []AlertConfigConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	ObjUUID *string `json:"objUuid,omitempty" tf:"obj_uuid,omitempty"`

	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	Recommendation *string `json:"recommendation,omitempty" tf:"recommendation,omitempty"`

	RollingWindow *string `json:"rollingWindow,omitempty" tf:"rolling_window,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`

	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type AlertConfigParameters struct {

	// +kubebuilder:validation:Optional
	ActionGroupRef *string `json:"actionGroupRef,omitempty" tf:"action_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	AlertRule []AlertRuleParameters `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`

	// +kubebuilder:validation:Optional
	AutoscaleAlert *string `json:"autoscaleAlert,omitempty" tf:"autoscale_alert,omitempty"`

	// +kubebuilder:validation:Optional
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []AlertConfigConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ObjUUID *string `json:"objUuid,omitempty" tf:"obj_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// +kubebuilder:validation:Optional
	Recommendation *string `json:"recommendation,omitempty" tf:"recommendation,omitempty"`

	// +kubebuilder:validation:Optional
	RollingWindow *string `json:"rollingWindow,omitempty" tf:"rolling_window,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// +kubebuilder:validation:Optional
	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type AlertRuleInitParameters struct {
	ConnAppLogRule []ConnAppLogRuleInitParameters `json:"connAppLogRule,omitempty" tf:"conn_app_log_rule,omitempty"`

	EventMatchFilter *string `json:"eventMatchFilter,omitempty" tf:"event_match_filter,omitempty"`

	MetricsRule []MetricsRuleInitParameters `json:"metricsRule,omitempty" tf:"metrics_rule,omitempty"`

	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	SysEventRule []SysEventRuleInitParameters `json:"sysEventRule,omitempty" tf:"sys_event_rule,omitempty"`
}

type AlertRuleObservation struct {
	ConnAppLogRule []ConnAppLogRuleObservation `json:"connAppLogRule,omitempty" tf:"conn_app_log_rule,omitempty"`

	EventMatchFilter *string `json:"eventMatchFilter,omitempty" tf:"event_match_filter,omitempty"`

	MetricsRule []MetricsRuleObservation `json:"metricsRule,omitempty" tf:"metrics_rule,omitempty"`

	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	SysEventRule []SysEventRuleObservation `json:"sysEventRule,omitempty" tf:"sys_event_rule,omitempty"`
}

type AlertRuleParameters struct {

	// +kubebuilder:validation:Optional
	ConnAppLogRule []ConnAppLogRuleParameters `json:"connAppLogRule,omitempty" tf:"conn_app_log_rule,omitempty"`

	// +kubebuilder:validation:Optional
	EventMatchFilter *string `json:"eventMatchFilter,omitempty" tf:"event_match_filter,omitempty"`

	// +kubebuilder:validation:Optional
	MetricsRule []MetricsRuleParameters `json:"metricsRule,omitempty" tf:"metrics_rule,omitempty"`

	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// +kubebuilder:validation:Optional
	SysEventRule []SysEventRuleParameters `json:"sysEventRule,omitempty" tf:"sys_event_rule,omitempty"`
}

type ConnAppLogRuleInitParameters struct {
	FilterAction *string `json:"filterAction,omitempty" tf:"filter_action,omitempty"`

	FilterString *string `json:"filterString,omitempty" tf:"filter_string,omitempty"`
}

type ConnAppLogRuleObservation struct {
	FilterAction *string `json:"filterAction,omitempty" tf:"filter_action,omitempty"`

	FilterString *string `json:"filterString,omitempty" tf:"filter_string,omitempty"`
}

type ConnAppLogRuleParameters struct {

	// +kubebuilder:validation:Optional
	FilterAction *string `json:"filterAction,omitempty" tf:"filter_action,omitempty"`

	// +kubebuilder:validation:Optional
	FilterString *string `json:"filterString" tf:"filter_string,omitempty"`
}

type EventDetailsInitParameters struct {
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	EventDetailsKey *string `json:"eventDetailsKey,omitempty" tf:"event_details_key,omitempty"`

	EventDetailsValue *string `json:"eventDetailsValue,omitempty" tf:"event_details_value,omitempty"`
}

type EventDetailsObservation struct {
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	EventDetailsKey *string `json:"eventDetailsKey,omitempty" tf:"event_details_key,omitempty"`

	EventDetailsValue *string `json:"eventDetailsValue,omitempty" tf:"event_details_value,omitempty"`
}

type EventDetailsParameters struct {

	// +kubebuilder:validation:Optional
	Comparator *string `json:"comparator" tf:"comparator,omitempty"`

	// +kubebuilder:validation:Optional
	EventDetailsKey *string `json:"eventDetailsKey" tf:"event_details_key,omitempty"`

	// +kubebuilder:validation:Optional
	EventDetailsValue *string `json:"eventDetailsValue" tf:"event_details_value,omitempty"`
}

type MetricThresholdInitParameters struct {
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type MetricThresholdObservation struct {
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type MetricThresholdParameters struct {

	// +kubebuilder:validation:Optional
	Comparator *string `json:"comparator" tf:"comparator,omitempty"`

	// +kubebuilder:validation:Optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type MetricsRuleInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	MetricThreshold []MetricThresholdInitParameters `json:"metricThreshold,omitempty" tf:"metric_threshold,omitempty"`
}

type MetricsRuleObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	MetricThreshold []MetricThresholdObservation `json:"metricThreshold,omitempty" tf:"metric_threshold,omitempty"`
}

type MetricsRuleParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	// +kubebuilder:validation:Optional
	MetricThreshold []MetricThresholdParameters `json:"metricThreshold" tf:"metric_threshold,omitempty"`
}

type SysEventRuleInitParameters struct {
	EventDetails []EventDetailsInitParameters `json:"eventDetails,omitempty" tf:"event_details,omitempty"`

	EventID *string `json:"eventId,omitempty" tf:"event_id,omitempty"`

	NotCond *string `json:"notCond,omitempty" tf:"not_cond,omitempty"`
}

type SysEventRuleObservation struct {
	EventDetails []EventDetailsObservation `json:"eventDetails,omitempty" tf:"event_details,omitempty"`

	EventID *string `json:"eventId,omitempty" tf:"event_id,omitempty"`

	NotCond *string `json:"notCond,omitempty" tf:"not_cond,omitempty"`
}

type SysEventRuleParameters struct {

	// +kubebuilder:validation:Optional
	EventDetails []EventDetailsParameters `json:"eventDetails,omitempty" tf:"event_details,omitempty"`

	// +kubebuilder:validation:Optional
	EventID *string `json:"eventId,omitempty" tf:"event_id,omitempty"`

	// +kubebuilder:validation:Optional
	NotCond *string `json:"notCond,omitempty" tf:"not_cond,omitempty"`
}

// AlertConfigSpec defines the desired state of AlertConfig
type AlertConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlertConfigParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AlertConfigInitParameters `json:"initProvider,omitempty"`
}

// AlertConfigStatus defines the observed state of AlertConfig.
type AlertConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlertConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AlertConfig is the Schema for the AlertConfigs API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type AlertConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.alertRule) || has(self.initProvider.alertRule)",message="alertRule is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.category) || has(self.initProvider.category)",message="category is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || has(self.initProvider.source)",message="source is a required parameter"
	Spec   AlertConfigSpec   `json:"spec"`
	Status AlertConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlertConfigList contains a list of AlertConfigs
type AlertConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlertConfig `json:"items"`
}

// Repository type metadata.
var (
	AlertConfig_Kind             = "AlertConfig"
	AlertConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlertConfig_Kind}.String()
	AlertConfig_KindAPIVersion   = AlertConfig_Kind + "." + CRDGroupVersion.String()
	AlertConfig_GroupVersionKind = CRDGroupVersion.WithKind(AlertConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&AlertConfig{}, &AlertConfigList{})
}
