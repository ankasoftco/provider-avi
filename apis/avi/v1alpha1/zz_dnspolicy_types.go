/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowInitParameters struct {
	Allow *string `json:"allow,omitempty" tf:"allow,omitempty"`

	ResetConn *string `json:"resetConn,omitempty" tf:"reset_conn,omitempty"`
}

type AllowObservation struct {
	Allow *string `json:"allow,omitempty" tf:"allow,omitempty"`

	ResetConn *string `json:"resetConn,omitempty" tf:"reset_conn,omitempty"`
}

type AllowParameters struct {

	// +kubebuilder:validation:Optional
	Allow *string `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	ResetConn *string `json:"resetConn,omitempty" tf:"reset_conn,omitempty"`
}

type ClientIPAddressClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddressClientIPInitParameters struct {
	Addrs []ClientIPAddressClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPAddressClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPAddressClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPAddressClientIPObservation struct {
	Addrs []ClientIPAddressClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPAddressClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPAddressClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPAddressClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []ClientIPAddressClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []ClientIPAddressClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientIPAddressClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPAddressClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddressClientIPPrefixesInitParameters struct {
	IPAddr []ClientIPAddressClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPAddressClientIPPrefixesObservation struct {
	IPAddr []ClientIPAddressClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPAddressClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ClientIPAddressClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ClientIPAddressClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPAddressClientIPRangesInitParameters struct {
	Begin []ClientIPAddressClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPAddressClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPAddressClientIPRangesObservation struct {
	Begin []ClientIPAddressClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPAddressClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPAddressClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []ClientIPAddressClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []ClientIPAddressClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type ClientIPAddressInitParameters struct {
	ClientIP []ClientIPAddressClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type ClientIPAddressObservation struct {
	ClientIP []ClientIPAddressClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type ClientIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	ClientIP []ClientIPAddressClientIPParameters `json:"clientIp" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type ClientPortNumbersInitParameters struct {
	ClientPorts []ClientPortsInitParameters `json:"clientPorts,omitempty" tf:"client_ports,omitempty"`
}

type ClientPortNumbersObservation struct {
	ClientPorts []ClientPortsObservation `json:"clientPorts,omitempty" tf:"client_ports,omitempty"`
}

type ClientPortNumbersParameters struct {

	// +kubebuilder:validation:Optional
	ClientPorts []ClientPortsParameters `json:"clientPorts" tf:"client_ports,omitempty"`
}

type ClientPortsInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`

	Ranges []ClientPortsRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientPortsObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`

	Ranges []ClientPortsRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientPortsParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*float64 `json:"ports,omitempty" tf:"ports,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientPortsRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientPortsRangesInitParameters struct {
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ClientPortsRangesObservation struct {
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ClientPortsRangesParameters struct {

	// +kubebuilder:validation:Optional
	End *string `json:"end" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start" tf:"start,omitempty"`
}

type CnameInitParameters struct {
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type CnameObservation struct {
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type CnameParameters struct {

	// +kubebuilder:validation:Optional
	Cname *string `json:"cname" tf:"cname,omitempty"`
}

type DNSRateLimiterActionInitParameters struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSRateLimiterActionObservation struct {
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSRateLimiterActionParameters struct {

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSRateLimiterInitParameters struct {
	Action []DNSRateLimiterActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	RateLimiterObject []RateLimiterObjectInitParameters `json:"rateLimiterObject,omitempty" tf:"rate_limiter_object,omitempty"`
}

type DNSRateLimiterObservation struct {
	Action []DNSRateLimiterActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	RateLimiterObject []RateLimiterObjectObservation `json:"rateLimiterObject,omitempty" tf:"rate_limiter_object,omitempty"`
}

type DNSRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	Action []DNSRateLimiterActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiterObject []RateLimiterObjectParameters `json:"rateLimiterObject" tf:"rate_limiter_object,omitempty"`
}

type DnsPolicyConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DnsPolicyConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DnsPolicyConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DnsPolicyInitParameters struct {
	ConfigpbAttributes []DnsPolicyConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Internal *string `json:"internal,omitempty" tf:"internal,omitempty"`

	Markers []DnsPolicyMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type DnsPolicyMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type DnsPolicyMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type DnsPolicyMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type DnsPolicyObservation struct {
	ConfigpbAttributes []DnsPolicyConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Internal *string `json:"internal,omitempty" tf:"internal,omitempty"`

	Markers []DnsPolicyMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type DnsPolicyParameters struct {

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []DnsPolicyConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Internal *string `json:"internal,omitempty" tf:"internal,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []DnsPolicyMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type GeoLocationInitParameters struct {
	GeolocationName *string `json:"geolocationName,omitempty" tf:"geolocation_name,omitempty"`

	GeolocationTag *string `json:"geolocationTag,omitempty" tf:"geolocation_tag,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type GeoLocationObservation struct {
	GeolocationName *string `json:"geolocationName,omitempty" tf:"geolocation_name,omitempty"`

	GeolocationTag *string `json:"geolocationTag,omitempty" tf:"geolocation_tag,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type GeoLocationParameters struct {

	// +kubebuilder:validation:Optional
	GeolocationName *string `json:"geolocationName,omitempty" tf:"geolocation_name,omitempty"`

	// +kubebuilder:validation:Optional
	GeolocationTag *string `json:"geolocationTag,omitempty" tf:"geolocation_tag,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	UseEdnsClientSubnetIP *string `json:"useEdnsClientSubnetIp,omitempty" tf:"use_edns_client_subnet_ip,omitempty"`
}

type GsGroupSelectionInitParameters struct {
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`
}

type GsGroupSelectionObservation struct {
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`
}

type GsGroupSelectionParameters struct {

	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName" tf:"group_name,omitempty"`
}

type GslbSiteSelectionInitParameters struct {
	FallbackSiteNames []*string `json:"fallbackSiteNames,omitempty" tf:"fallback_site_names,omitempty"`

	IsSitePreferred *string `json:"isSitePreferred,omitempty" tf:"is_site_preferred,omitempty"`

	SiteName *string `json:"siteName,omitempty" tf:"site_name,omitempty"`
}

type GslbSiteSelectionObservation struct {
	FallbackSiteNames []*string `json:"fallbackSiteNames,omitempty" tf:"fallback_site_names,omitempty"`

	IsSitePreferred *string `json:"isSitePreferred,omitempty" tf:"is_site_preferred,omitempty"`

	SiteName *string `json:"siteName,omitempty" tf:"site_name,omitempty"`
}

type GslbSiteSelectionParameters struct {

	// +kubebuilder:validation:Optional
	FallbackSiteNames []*string `json:"fallbackSiteNames,omitempty" tf:"fallback_site_names,omitempty"`

	// +kubebuilder:validation:Optional
	IsSitePreferred *string `json:"isSitePreferred,omitempty" tf:"is_site_preferred,omitempty"`

	// +kubebuilder:validation:Optional
	SiteName *string `json:"siteName" tf:"site_name,omitempty"`
}

type IPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IPAddressesInitParameters struct {
	IPAddress []IPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPAddressesObservation struct {
	IPAddress []IPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPAddressesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddress []IPAddressParameters `json:"ipAddress" tf:"ip_address,omitempty"`
}

type Ip6AddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Ip6AddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Ip6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type Ip6AddressesInitParameters struct {
	Ip6Address []Ip6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`
}

type Ip6AddressesObservation struct {
	Ip6Address []Ip6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`
}

type Ip6AddressesParameters struct {

	// +kubebuilder:validation:Optional
	Ip6Address []Ip6AddressParameters `json:"ip6Address" tf:"ip6_address,omitempty"`
}

type MatchProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type MatchProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type MatchProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`
}

type NsesIPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsesIPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsesIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NsesInitParameters struct {
	IPAddress []NsesIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []NsesIp6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	Nsname *string `json:"nsname,omitempty" tf:"nsname,omitempty"`
}

type NsesIp6AddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsesIp6AddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsesIp6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NsesObservation struct {
	IPAddress []NsesIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []NsesIp6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	Nsname *string `json:"nsname,omitempty" tf:"nsname,omitempty"`
}

type NsesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddress []NsesIPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6Address []NsesIp6AddressParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// +kubebuilder:validation:Optional
	Nsname *string `json:"nsname" tf:"nsname,omitempty"`
}

type PoolSwitchingInitParameters struct {
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`
}

type PoolSwitchingObservation struct {
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`
}

type PoolSwitchingParameters struct {

	// +kubebuilder:validation:Optional
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`
}

type QueryNameInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	QueryDomainNames []*string `json:"queryDomainNames,omitempty" tf:"query_domain_names,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type QueryNameObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	QueryDomainNames []*string `json:"queryDomainNames,omitempty" tf:"query_domain_names,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type QueryNameParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	QueryDomainNames []*string `json:"queryDomainNames,omitempty" tf:"query_domain_names,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type QueryTypeInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	QueryType []*string `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type QueryTypeObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	QueryType []*string `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type QueryTypeParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	QueryType []*string `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type RateLimiterObjectInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateLimiterObjectObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RateLimiterObjectParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type ResourceRecordSetInitParameters struct {
	Cname []CnameInitParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	IPAddresses []IPAddressesInitParameters `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	Ip6Addresses []Ip6AddressesInitParameters `json:"ip6Addresses,omitempty" tf:"ip6_addresses,omitempty"`

	Nses []NsesInitParameters `json:"nses,omitempty" tf:"nses,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceRecordSetObservation struct {
	Cname []CnameObservation `json:"cname,omitempty" tf:"cname,omitempty"`

	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	IPAddresses []IPAddressesObservation `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	Ip6Addresses []Ip6AddressesObservation `json:"ip6Addresses,omitempty" tf:"ip6_addresses,omitempty"`

	Nses []NsesObservation `json:"nses,omitempty" tf:"nses,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceRecordSetParameters struct {

	// +kubebuilder:validation:Optional
	Cname []CnameParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	// +kubebuilder:validation:Optional
	Fqdn *string `json:"fqdn" tf:"fqdn,omitempty"`

	// +kubebuilder:validation:Optional
	IPAddresses []IPAddressesParameters `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6Addresses []Ip6AddressesParameters `json:"ip6Addresses,omitempty" tf:"ip6_addresses,omitempty"`

	// +kubebuilder:validation:Optional
	Nses []NsesParameters `json:"nses,omitempty" tf:"nses,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *string `json:"ttl" tf:"ttl,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResourceRecordSetsInitParameters struct {
	ResourceRecordSet []ResourceRecordSetInitParameters `json:"resourceRecordSet,omitempty" tf:"resource_record_set,omitempty"`

	Section *string `json:"section,omitempty" tf:"section,omitempty"`
}

type ResourceRecordSetsObservation struct {
	ResourceRecordSet []ResourceRecordSetObservation `json:"resourceRecordSet,omitempty" tf:"resource_record_set,omitempty"`

	Section *string `json:"section,omitempty" tf:"section,omitempty"`
}

type ResourceRecordSetsParameters struct {

	// +kubebuilder:validation:Optional
	ResourceRecordSet []ResourceRecordSetParameters `json:"resourceRecordSet" tf:"resource_record_set,omitempty"`

	// +kubebuilder:validation:Optional
	Section *string `json:"section,omitempty" tf:"section,omitempty"`
}

type ResponseInitParameters struct {
	Authoritative *string `json:"authoritative,omitempty" tf:"authoritative,omitempty"`

	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	ResourceRecordSets []ResourceRecordSetsInitParameters `json:"resourceRecordSets,omitempty" tf:"resource_record_sets,omitempty"`

	Truncation *string `json:"truncation,omitempty" tf:"truncation,omitempty"`
}

type ResponseObservation struct {
	Authoritative *string `json:"authoritative,omitempty" tf:"authoritative,omitempty"`

	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	ResourceRecordSets []ResourceRecordSetsObservation `json:"resourceRecordSets,omitempty" tf:"resource_record_sets,omitempty"`

	Truncation *string `json:"truncation,omitempty" tf:"truncation,omitempty"`
}

type ResponseParameters struct {

	// +kubebuilder:validation:Optional
	Authoritative *string `json:"authoritative,omitempty" tf:"authoritative,omitempty"`

	// +kubebuilder:validation:Optional
	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceRecordSets []ResourceRecordSetsParameters `json:"resourceRecordSets,omitempty" tf:"resource_record_sets,omitempty"`

	// +kubebuilder:validation:Optional
	Truncation *string `json:"truncation,omitempty" tf:"truncation,omitempty"`
}

type RuleActionInitParameters struct {
	Allow []AllowInitParameters `json:"allow,omitempty" tf:"allow,omitempty"`

	DNSRateLimiter []DNSRateLimiterInitParameters `json:"dnsRateLimiter,omitempty" tf:"dns_rate_limiter,omitempty"`

	GsGroupSelection []GsGroupSelectionInitParameters `json:"gsGroupSelection,omitempty" tf:"gs_group_selection,omitempty"`

	GslbSiteSelection []GslbSiteSelectionInitParameters `json:"gslbSiteSelection,omitempty" tf:"gslb_site_selection,omitempty"`

	PoolSwitching []PoolSwitchingInitParameters `json:"poolSwitching,omitempty" tf:"pool_switching,omitempty"`

	Response []ResponseInitParameters `json:"response,omitempty" tf:"response,omitempty"`
}

type RuleActionObservation struct {
	Allow []AllowObservation `json:"allow,omitempty" tf:"allow,omitempty"`

	DNSRateLimiter []DNSRateLimiterObservation `json:"dnsRateLimiter,omitempty" tf:"dns_rate_limiter,omitempty"`

	GsGroupSelection []GsGroupSelectionObservation `json:"gsGroupSelection,omitempty" tf:"gs_group_selection,omitempty"`

	GslbSiteSelection []GslbSiteSelectionObservation `json:"gslbSiteSelection,omitempty" tf:"gslb_site_selection,omitempty"`

	PoolSwitching []PoolSwitchingObservation `json:"poolSwitching,omitempty" tf:"pool_switching,omitempty"`

	Response []ResponseObservation `json:"response,omitempty" tf:"response,omitempty"`
}

type RuleActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow []AllowParameters `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	DNSRateLimiter []DNSRateLimiterParameters `json:"dnsRateLimiter,omitempty" tf:"dns_rate_limiter,omitempty"`

	// +kubebuilder:validation:Optional
	GsGroupSelection []GsGroupSelectionParameters `json:"gsGroupSelection,omitempty" tf:"gs_group_selection,omitempty"`

	// +kubebuilder:validation:Optional
	GslbSiteSelection []GslbSiteSelectionParameters `json:"gslbSiteSelection,omitempty" tf:"gslb_site_selection,omitempty"`

	// +kubebuilder:validation:Optional
	PoolSwitching []PoolSwitchingParameters `json:"poolSwitching,omitempty" tf:"pool_switching,omitempty"`

	// +kubebuilder:validation:Optional
	Response []ResponseParameters `json:"response,omitempty" tf:"response,omitempty"`
}

type RuleInitParameters struct {
	Action []RuleActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []RuleMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RuleMatchInitParameters struct {
	ClientIPAddress []ClientIPAddressInitParameters `json:"clientIpAddress,omitempty" tf:"client_ip_address,omitempty"`

	ClientPortNumbers []ClientPortNumbersInitParameters `json:"clientPortNumbers,omitempty" tf:"client_port_numbers,omitempty"`

	GeoLocation []GeoLocationInitParameters `json:"geoLocation,omitempty" tf:"geo_location,omitempty"`

	Protocol []MatchProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	QueryName []QueryNameInitParameters `json:"queryName,omitempty" tf:"query_name,omitempty"`

	QueryType []QueryTypeInitParameters `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type RuleMatchObservation struct {
	ClientIPAddress []ClientIPAddressObservation `json:"clientIpAddress,omitempty" tf:"client_ip_address,omitempty"`

	ClientPortNumbers []ClientPortNumbersObservation `json:"clientPortNumbers,omitempty" tf:"client_port_numbers,omitempty"`

	GeoLocation []GeoLocationObservation `json:"geoLocation,omitempty" tf:"geo_location,omitempty"`

	Protocol []MatchProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	QueryName []QueryNameObservation `json:"queryName,omitempty" tf:"query_name,omitempty"`

	QueryType []QueryTypeObservation `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type RuleMatchParameters struct {

	// +kubebuilder:validation:Optional
	ClientIPAddress []ClientIPAddressParameters `json:"clientIpAddress,omitempty" tf:"client_ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	ClientPortNumbers []ClientPortNumbersParameters `json:"clientPortNumbers,omitempty" tf:"client_port_numbers,omitempty"`

	// +kubebuilder:validation:Optional
	GeoLocation []GeoLocationParameters `json:"geoLocation,omitempty" tf:"geo_location,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []MatchProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	QueryName []QueryNameParameters `json:"queryName,omitempty" tf:"query_name,omitempty"`

	// +kubebuilder:validation:Optional
	QueryType []QueryTypeParameters `json:"queryType,omitempty" tf:"query_type,omitempty"`
}

type RuleObservation struct {
	Action []RuleActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	Match []RuleMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RuleParameters struct {

	// +kubebuilder:validation:Optional
	Action []RuleActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// +kubebuilder:validation:Optional
	Match []RuleMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

// DnsPolicySpec defines the desired state of DnsPolicy
type DnsPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DnsPolicyParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DnsPolicyInitParameters `json:"initProvider,omitempty"`
}

// DnsPolicyStatus defines the observed state of DnsPolicy.
type DnsPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DnsPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DnsPolicy is the Schema for the DnsPolicys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type DnsPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   DnsPolicySpec   `json:"spec"`
	Status DnsPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DnsPolicyList contains a list of DnsPolicys
type DnsPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DnsPolicy `json:"items"`
}

// Repository type metadata.
var (
	DnsPolicy_Kind             = "DnsPolicy"
	DnsPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DnsPolicy_Kind}.String()
	DnsPolicy_KindAPIVersion   = DnsPolicy_Kind + "." + CRDGroupVersion.String()
	DnsPolicy_GroupVersionKind = CRDGroupVersion.WithKind(DnsPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&DnsPolicy{}, &DnsPolicyList{})
}
