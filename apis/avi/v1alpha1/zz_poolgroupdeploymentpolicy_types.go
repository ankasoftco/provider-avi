/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PoolGroupDeploymentPolicyConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupDeploymentPolicyConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupDeploymentPolicyConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolGroupDeploymentPolicyInitParameters struct {
	AutoDisableOldProdPools *string `json:"autoDisableOldProdPools,omitempty" tf:"auto_disable_old_prod_pools,omitempty"`

	ConfigpbAttributes []PoolGroupDeploymentPolicyConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EvaluationDuration *string `json:"evaluationDuration,omitempty" tf:"evaluation_duration,omitempty"`

	Markers []PoolGroupDeploymentPolicyMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PoolGroupDeploymentPolicyRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	TargetTestTrafficRatio *string `json:"targetTestTrafficRatio,omitempty" tf:"target_test_traffic_ratio,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TestTrafficRatioRampup *string `json:"testTrafficRatioRampup,omitempty" tf:"test_traffic_ratio_rampup,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	WebhookRef *string `json:"webhookRef,omitempty" tf:"webhook_ref,omitempty"`
}

type PoolGroupDeploymentPolicyMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupDeploymentPolicyMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupDeploymentPolicyMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolGroupDeploymentPolicyObservation struct {
	AutoDisableOldProdPools *string `json:"autoDisableOldProdPools,omitempty" tf:"auto_disable_old_prod_pools,omitempty"`

	ConfigpbAttributes []PoolGroupDeploymentPolicyConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EvaluationDuration *string `json:"evaluationDuration,omitempty" tf:"evaluation_duration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Markers []PoolGroupDeploymentPolicyMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Rules []PoolGroupDeploymentPolicyRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`

	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	TargetTestTrafficRatio *string `json:"targetTestTrafficRatio,omitempty" tf:"target_test_traffic_ratio,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TestTrafficRatioRampup *string `json:"testTrafficRatioRampup,omitempty" tf:"test_traffic_ratio_rampup,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	WebhookRef *string `json:"webhookRef,omitempty" tf:"webhook_ref,omitempty"`
}

type PoolGroupDeploymentPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AutoDisableOldProdPools *string `json:"autoDisableOldProdPools,omitempty" tf:"auto_disable_old_prod_pools,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []PoolGroupDeploymentPolicyConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	EvaluationDuration *string `json:"evaluationDuration,omitempty" tf:"evaluation_duration,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []PoolGroupDeploymentPolicyMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []PoolGroupDeploymentPolicyRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// +kubebuilder:validation:Optional
	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	// +kubebuilder:validation:Optional
	TargetTestTrafficRatio *string `json:"targetTestTrafficRatio,omitempty" tf:"target_test_traffic_ratio,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TestTrafficRatioRampup *string `json:"testTrafficRatioRampup,omitempty" tf:"test_traffic_ratio_rampup,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	WebhookRef *string `json:"webhookRef,omitempty" tf:"webhook_ref,omitempty"`
}

type PoolGroupDeploymentPolicyRulesInitParameters struct {
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type PoolGroupDeploymentPolicyRulesObservation struct {
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type PoolGroupDeploymentPolicyRulesParameters struct {

	// +kubebuilder:validation:Optional
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// +kubebuilder:validation:Optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

// PoolGroupDeploymentPolicySpec defines the desired state of PoolGroupDeploymentPolicy
type PoolGroupDeploymentPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PoolGroupDeploymentPolicyParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PoolGroupDeploymentPolicyInitParameters `json:"initProvider,omitempty"`
}

// PoolGroupDeploymentPolicyStatus defines the observed state of PoolGroupDeploymentPolicy.
type PoolGroupDeploymentPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PoolGroupDeploymentPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PoolGroupDeploymentPolicy is the Schema for the PoolGroupDeploymentPolicys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type PoolGroupDeploymentPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   PoolGroupDeploymentPolicySpec   `json:"spec"`
	Status PoolGroupDeploymentPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PoolGroupDeploymentPolicyList contains a list of PoolGroupDeploymentPolicys
type PoolGroupDeploymentPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PoolGroupDeploymentPolicy `json:"items"`
}

// Repository type metadata.
var (
	PoolGroupDeploymentPolicy_Kind             = "PoolGroupDeploymentPolicy"
	PoolGroupDeploymentPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PoolGroupDeploymentPolicy_Kind}.String()
	PoolGroupDeploymentPolicy_KindAPIVersion   = PoolGroupDeploymentPolicy_Kind + "." + CRDGroupVersion.String()
	PoolGroupDeploymentPolicy_GroupVersionKind = CRDGroupVersion.WithKind(PoolGroupDeploymentPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&PoolGroupDeploymentPolicy{}, &PoolGroupDeploymentPolicyList{})
}
