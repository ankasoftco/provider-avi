/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupConfigurationConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type BackupConfigurationConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type BackupConfigurationConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type BackupConfigurationInitParameters struct {
	AwsBucketID *string `json:"awsBucketId,omitempty" tf:"aws_bucket_id,omitempty"`

	AwsBucketRegion *string `json:"awsBucketRegion,omitempty" tf:"aws_bucket_region,omitempty"`

	BackupFilePrefix *string `json:"backupFilePrefix,omitempty" tf:"backup_file_prefix,omitempty"`

	ConfigpbAttributes []BackupConfigurationConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	MaximumBackupsStored *string `json:"maximumBackupsStored,omitempty" tf:"maximum_backups_stored,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RemoteDirectory *string `json:"remoteDirectory,omitempty" tf:"remote_directory,omitempty"`

	RemoteFileTransferProtocol *string `json:"remoteFileTransferProtocol,omitempty" tf:"remote_file_transfer_protocol,omitempty"`

	RemoteHostname *string `json:"remoteHostname,omitempty" tf:"remote_hostname,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SaveLocal *string `json:"saveLocal,omitempty" tf:"save_local,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UploadToRemoteHost *string `json:"uploadToRemoteHost,omitempty" tf:"upload_to_remote_host,omitempty"`

	UploadToS3 *string `json:"uploadToS3,omitempty" tf:"upload_to_s3,omitempty"`
}

type BackupConfigurationObservation struct {
	AwsBucketID *string `json:"awsBucketId,omitempty" tf:"aws_bucket_id,omitempty"`

	AwsBucketRegion *string `json:"awsBucketRegion,omitempty" tf:"aws_bucket_region,omitempty"`

	BackupFilePrefix *string `json:"backupFilePrefix,omitempty" tf:"backup_file_prefix,omitempty"`

	ConfigpbAttributes []BackupConfigurationConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	MaximumBackupsStored *string `json:"maximumBackupsStored,omitempty" tf:"maximum_backups_stored,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	RemoteDirectory *string `json:"remoteDirectory,omitempty" tf:"remote_directory,omitempty"`

	RemoteFileTransferProtocol *string `json:"remoteFileTransferProtocol,omitempty" tf:"remote_file_transfer_protocol,omitempty"`

	RemoteHostname *string `json:"remoteHostname,omitempty" tf:"remote_hostname,omitempty"`

	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	SaveLocal *string `json:"saveLocal,omitempty" tf:"save_local,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UploadToRemoteHost *string `json:"uploadToRemoteHost,omitempty" tf:"upload_to_remote_host,omitempty"`

	UploadToS3 *string `json:"uploadToS3,omitempty" tf:"upload_to_s3,omitempty"`
}

type BackupConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AwsAccessKeySecretRef *v1.SecretKeySelector `json:"awsAccessKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	AwsBucketID *string `json:"awsBucketId,omitempty" tf:"aws_bucket_id,omitempty"`

	// +kubebuilder:validation:Optional
	AwsBucketRegion *string `json:"awsBucketRegion,omitempty" tf:"aws_bucket_region,omitempty"`

	// +kubebuilder:validation:Optional
	AwsSecretAccessSecretRef *v1.SecretKeySelector `json:"awsSecretAccessSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	BackupFilePrefix *string `json:"backupFilePrefix,omitempty" tf:"backup_file_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	BackupPassphraseSecretRef *v1.SecretKeySelector `json:"backupPassphraseSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []BackupConfigurationConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	MaximumBackupsStored *string `json:"maximumBackupsStored,omitempty" tf:"maximum_backups_stored,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteDirectory *string `json:"remoteDirectory,omitempty" tf:"remote_directory,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteFileTransferProtocol *string `json:"remoteFileTransferProtocol,omitempty" tf:"remote_file_transfer_protocol,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteHostname *string `json:"remoteHostname,omitempty" tf:"remote_hostname,omitempty"`

	// +kubebuilder:validation:Optional
	SSHUserRef *string `json:"sshUserRef,omitempty" tf:"ssh_user_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SaveLocal *string `json:"saveLocal,omitempty" tf:"save_local,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UploadToRemoteHost *string `json:"uploadToRemoteHost,omitempty" tf:"upload_to_remote_host,omitempty"`

	// +kubebuilder:validation:Optional
	UploadToS3 *string `json:"uploadToS3,omitempty" tf:"upload_to_s3,omitempty"`
}

// BackupConfigurationSpec defines the desired state of BackupConfiguration
type BackupConfigurationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupConfigurationParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupConfigurationInitParameters `json:"initProvider,omitempty"`
}

// BackupConfigurationStatus defines the observed state of BackupConfiguration.
type BackupConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BackupConfiguration is the Schema for the BackupConfigurations API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type BackupConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   BackupConfigurationSpec   `json:"spec"`
	Status BackupConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupConfigurationList contains a list of BackupConfigurations
type BackupConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupConfiguration `json:"items"`
}

// Repository type metadata.
var (
	BackupConfiguration_Kind             = "BackupConfiguration"
	BackupConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupConfiguration_Kind}.String()
	BackupConfiguration_KindAPIVersion   = BackupConfiguration_Kind + "." + CRDGroupVersion.String()
	BackupConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(BackupConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupConfiguration{}, &BackupConfigurationList{})
}
