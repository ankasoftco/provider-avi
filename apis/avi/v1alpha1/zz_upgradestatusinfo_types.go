/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ChecksInitParameters struct {
	CheckCode *string `json:"checkCode,omitempty" tf:"check_code,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Details []*string `json:"details,omitempty" tf:"details,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type ChecksObservation struct {
	CheckCode *string `json:"checkCode,omitempty" tf:"check_code,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Details []*string `json:"details,omitempty" tf:"details,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type ChecksParameters struct {

	// +kubebuilder:validation:Optional
	CheckCode *string `json:"checkCode,omitempty" tf:"check_code,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Details []*string `json:"details,omitempty" tf:"details,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type EventTimestampInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type EventTimestampObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type EventTimestampParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type HistoryInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	Ops *string `json:"ops,omitempty" tf:"ops,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	SeUpgradeEvents []SeUpgradeEventsInitParameters `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	SegStatus []SegStatusInitParameters `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []StateInitParameters `json:"state,omitempty" tf:"state,omitempty"`

	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	UpgradeEvents []UpgradeEventsInitParameters `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HistoryObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	Ops *string `json:"ops,omitempty" tf:"ops,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	SeUpgradeEvents []SeUpgradeEventsObservation `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	SegStatus []SegStatusObservation `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []StateObservation `json:"state,omitempty" tf:"state,omitempty"`

	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	UpgradeEvents []UpgradeEventsObservation `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HistoryParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	Ops *string `json:"ops,omitempty" tf:"ops,omitempty"`

	// +kubebuilder:validation:Optional
	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeEvents []SeUpgradeEventsParameters `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	// +kubebuilder:validation:Optional
	SegStatus []SegStatusParameters `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State []StateParameters `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeEvents []UpgradeEventsParameters `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PatchListInitParameters struct {
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type PatchListObservation struct {
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type PatchListParameters struct {

	// +kubebuilder:validation:Optional
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type PreviousPatchListInitParameters struct {
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type PreviousPatchListObservation struct {
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type PreviousPatchListParameters struct {

	// +kubebuilder:validation:Optional
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`
}

type SeGroupOptionsInitParameters struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SeGroupOptionsObservation struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SeGroupOptionsParameters struct {

	// +kubebuilder:validation:Optional
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	// +kubebuilder:validation:Optional
	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SeGroupResumeOptionsInitParameters struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SeGroupResumeOptionsObservation struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SeGroupResumeOptionsParameters struct {

	// +kubebuilder:validation:Optional
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	// +kubebuilder:validation:Optional
	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	// +kubebuilder:validation:Optional
	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SeUpgradeErrorsInitParameters struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SeUpgradeErrorsObservation struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SeUpgradeErrorsParameters struct {

	// +kubebuilder:validation:Optional
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SeUpgradeEventsInitParameters struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SeUpgradeEventsObservation struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SeUpgradeEventsParameters struct {

	// +kubebuilder:validation:Optional
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegParamsInitParameters struct {
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	SeGroupOptions []SegParamsSeGroupOptionsInitParameters `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	SeGroupResumeOptions []SegParamsSeGroupResumeOptionsInitParameters `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type SegParamsObservation struct {
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	SeGroupOptions []SegParamsSeGroupOptionsObservation `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	SeGroupResumeOptions []SegParamsSeGroupResumeOptionsObservation `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type SegParamsParameters struct {

	// +kubebuilder:validation:Optional
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupOptions []SegParamsSeGroupOptionsParameters `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupResumeOptions []SegParamsSeGroupResumeOptionsParameters `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type SegParamsSeGroupOptionsInitParameters struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SegParamsSeGroupOptionsObservation struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SegParamsSeGroupOptionsParameters struct {

	// +kubebuilder:validation:Optional
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	// +kubebuilder:validation:Optional
	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`
}

type SegParamsSeGroupResumeOptionsInitParameters struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SegParamsSeGroupResumeOptionsObservation struct {
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SegParamsSeGroupResumeOptionsParameters struct {

	// +kubebuilder:validation:Optional
	ActionOnError *string `json:"actionOnError,omitempty" tf:"action_on_error,omitempty"`

	// +kubebuilder:validation:Optional
	Disruptive *string `json:"disruptive,omitempty" tf:"disruptive,omitempty"`

	// +kubebuilder:validation:Optional
	SkipSuspended *string `json:"skipSuspended,omitempty" tf:"skip_suspended,omitempty"`
}

type SegStatusInitParameters struct {
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	SeUpgradeErrors []SeUpgradeErrorsInitParameters `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsErrors []VsErrorsInitParameters `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type SegStatusObservation struct {
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	SeUpgradeErrors []SeUpgradeErrorsObservation `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsErrors []VsErrorsObservation `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type SegStatusParameters struct {

	// +kubebuilder:validation:Optional
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	// +kubebuilder:validation:Optional
	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	// +kubebuilder:validation:Optional
	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	// +kubebuilder:validation:Optional
	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	// +kubebuilder:validation:Optional
	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	// +kubebuilder:validation:Optional
	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeErrors []SeUpgradeErrorsParameters `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsErrors []VsErrorsParameters `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	// +kubebuilder:validation:Optional
	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type SegStatusSeUpgradeErrorsInitParameters struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegStatusSeUpgradeErrorsObservation struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegStatusSeUpgradeErrorsParameters struct {

	// +kubebuilder:validation:Optional
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegStatusVsErrorsInitParameters struct {
	EventTimestamp []VsErrorsEventTimestampInitParameters `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegStatusVsErrorsObservation struct {
	EventTimestamp []VsErrorsEventTimestampObservation `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type SegStatusVsErrorsParameters struct {

	// +kubebuilder:validation:Optional
	EventTimestamp []VsErrorsEventTimestampParameters `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type StateInitParameters struct {
	LastChangedTime []StateLastChangedTimeInitParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type StateLastChangedTimeInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type StateLastChangedTimeObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type StateLastChangedTimeParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type StateObservation struct {
	LastChangedTime []StateLastChangedTimeObservation `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type StateParameters struct {

	// +kubebuilder:validation:Optional
	LastChangedTime []StateLastChangedTimeParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeEventsInitParameters struct {
	NodesEvents []UpgradeEventsNodesEventsInitParameters `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	SubEvents []UpgradeEventsSubEventsInitParameters `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeEventsNodesEventsIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeEventsNodesEventsIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeEventsNodesEventsIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type UpgradeEventsNodesEventsInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeEventsNodesEventsIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeEventsNodesEventsObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeEventsNodesEventsIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeEventsNodesEventsParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	IP []UpgradeEventsNodesEventsIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeEventsObservation struct {
	NodesEvents []UpgradeEventsNodesEventsObservation `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	SubEvents []UpgradeEventsSubEventsObservation `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeEventsParameters struct {

	// +kubebuilder:validation:Optional
	NodesEvents []UpgradeEventsNodesEventsParameters `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	// +kubebuilder:validation:Optional
	SubEvents []UpgradeEventsSubEventsParameters `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeEventsSubEventsIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeEventsSubEventsIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeEventsSubEventsIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type UpgradeEventsSubEventsInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeEventsSubEventsIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeEventsSubEventsObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeEventsSubEventsIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeEventsSubEventsParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	IP []UpgradeEventsSubEventsIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeReadinessInitParameters struct {
	Checks []ChecksInitParameters `json:"checks,omitempty" tf:"checks,omitempty"`

	ChecksCompleted *string `json:"checksCompleted,omitempty" tf:"checks_completed,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeReadinessStateInitParameters `json:"state,omitempty" tf:"state,omitempty"`

	TotalChecks *string `json:"totalChecks,omitempty" tf:"total_checks,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`
}

type UpgradeReadinessObservation struct {
	Checks []ChecksObservation `json:"checks,omitempty" tf:"checks,omitempty"`

	ChecksCompleted *string `json:"checksCompleted,omitempty" tf:"checks_completed,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeReadinessStateObservation `json:"state,omitempty" tf:"state,omitempty"`

	TotalChecks *string `json:"totalChecks,omitempty" tf:"total_checks,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`
}

type UpgradeReadinessParameters struct {

	// +kubebuilder:validation:Optional
	Checks []ChecksParameters `json:"checks,omitempty" tf:"checks,omitempty"`

	// +kubebuilder:validation:Optional
	ChecksCompleted *string `json:"checksCompleted,omitempty" tf:"checks_completed,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State []UpgradeReadinessStateParameters `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	TotalChecks *string `json:"totalChecks,omitempty" tf:"total_checks,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`
}

type UpgradeReadinessStateInitParameters struct {
	LastChangedTime []UpgradeReadinessStateLastChangedTimeInitParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeReadinessStateLastChangedTimeInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeReadinessStateLastChangedTimeObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeReadinessStateLastChangedTimeParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type UpgradeReadinessStateObservation struct {
	LastChangedTime []UpgradeReadinessStateLastChangedTimeObservation `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeReadinessStateParameters struct {

	// +kubebuilder:validation:Optional
	LastChangedTime []UpgradeReadinessStateLastChangedTimeParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusInfoInitParameters struct {
	AfterRebootRollbackFnc *string `json:"afterRebootRollbackFnc,omitempty" tf:"after_reboot_rollback_fnc,omitempty"`

	AfterRebootTaskName *string `json:"afterRebootTaskName,omitempty" tf:"after_reboot_task_name,omitempty"`

	Clean *string `json:"clean,omitempty" tf:"clean,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	FipsMode *string `json:"fipsMode,omitempty" tf:"fips_mode,omitempty"`

	History []HistoryInitParameters `json:"history,omitempty" tf:"history,omitempty"`

	ImagePath *string `json:"imagePath,omitempty" tf:"image_path,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	Params []UpgradeStatusInfoParamsInitParameters `json:"params,omitempty" tf:"params,omitempty"`

	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchList []PatchListInitParameters `json:"patchList,omitempty" tf:"patch_list,omitempty"`

	PatchReboot *string `json:"patchReboot,omitempty" tf:"patch_reboot,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	PrevImagePath *string `json:"prevImagePath,omitempty" tf:"prev_image_path,omitempty"`

	PrevPatchImagePath *string `json:"prevPatchImagePath,omitempty" tf:"prev_patch_image_path,omitempty"`

	PreviousImageRef *string `json:"previousImageRef,omitempty" tf:"previous_image_ref,omitempty"`

	PreviousPatchImageRef *string `json:"previousPatchImageRef,omitempty" tf:"previous_patch_image_ref,omitempty"`

	PreviousPatchList []PreviousPatchListInitParameters `json:"previousPatchList,omitempty" tf:"previous_patch_list,omitempty"`

	PreviousPatchVersion *string `json:"previousPatchVersion,omitempty" tf:"previous_patch_version,omitempty"`

	PreviousVersion *string `json:"previousVersion,omitempty" tf:"previous_version,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	SePatchImagePath *string `json:"sePatchImagePath,omitempty" tf:"se_patch_image_path,omitempty"`

	SePatchImageRef *string `json:"sePatchImageRef,omitempty" tf:"se_patch_image_ref,omitempty"`

	SeUpgradeEvents []UpgradeStatusInfoSeUpgradeEventsInitParameters `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	SegParams []SegParamsInitParameters `json:"segParams,omitempty" tf:"seg_params,omitempty"`

	SegStatus []UpgradeStatusInfoSegStatusInitParameters `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeStatusInfoStateInitParameters `json:"state,omitempty" tf:"state,omitempty"`

	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	System *string `json:"system,omitempty" tf:"system,omitempty"`

	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpgradeEvents []UpgradeStatusInfoUpgradeEventsInitParameters `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	UpgradeReadiness []UpgradeReadinessInitParameters `json:"upgradeReadiness,omitempty" tf:"upgrade_readiness,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusInfoObservation struct {
	AfterRebootRollbackFnc *string `json:"afterRebootRollbackFnc,omitempty" tf:"after_reboot_rollback_fnc,omitempty"`

	AfterRebootTaskName *string `json:"afterRebootTaskName,omitempty" tf:"after_reboot_task_name,omitempty"`

	Clean *string `json:"clean,omitempty" tf:"clean,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	FipsMode *string `json:"fipsMode,omitempty" tf:"fips_mode,omitempty"`

	History []HistoryObservation `json:"history,omitempty" tf:"history,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	ImagePath *string `json:"imagePath,omitempty" tf:"image_path,omitempty"`

	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	Params []UpgradeStatusInfoParamsObservation `json:"params,omitempty" tf:"params,omitempty"`

	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	PatchList []PatchListObservation `json:"patchList,omitempty" tf:"patch_list,omitempty"`

	PatchReboot *string `json:"patchReboot,omitempty" tf:"patch_reboot,omitempty"`

	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	PrevImagePath *string `json:"prevImagePath,omitempty" tf:"prev_image_path,omitempty"`

	PrevPatchImagePath *string `json:"prevPatchImagePath,omitempty" tf:"prev_patch_image_path,omitempty"`

	PreviousImageRef *string `json:"previousImageRef,omitempty" tf:"previous_image_ref,omitempty"`

	PreviousPatchImageRef *string `json:"previousPatchImageRef,omitempty" tf:"previous_patch_image_ref,omitempty"`

	PreviousPatchList []PreviousPatchListObservation `json:"previousPatchList,omitempty" tf:"previous_patch_list,omitempty"`

	PreviousPatchVersion *string `json:"previousPatchVersion,omitempty" tf:"previous_patch_version,omitempty"`

	PreviousVersion *string `json:"previousVersion,omitempty" tf:"previous_version,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	SePatchImagePath *string `json:"sePatchImagePath,omitempty" tf:"se_patch_image_path,omitempty"`

	SePatchImageRef *string `json:"sePatchImageRef,omitempty" tf:"se_patch_image_ref,omitempty"`

	SeUpgradeEvents []UpgradeStatusInfoSeUpgradeEventsObservation `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	SegParams []SegParamsObservation `json:"segParams,omitempty" tf:"seg_params,omitempty"`

	SegStatus []UpgradeStatusInfoSegStatusObservation `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State []UpgradeStatusInfoStateObservation `json:"state,omitempty" tf:"state,omitempty"`

	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	System *string `json:"system,omitempty" tf:"system,omitempty"`

	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UpgradeEvents []UpgradeStatusInfoUpgradeEventsObservation `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	UpgradeReadiness []UpgradeReadinessObservation `json:"upgradeReadiness,omitempty" tf:"upgrade_readiness,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusInfoParameters struct {

	// +kubebuilder:validation:Optional
	AfterRebootRollbackFnc *string `json:"afterRebootRollbackFnc,omitempty" tf:"after_reboot_rollback_fnc,omitempty"`

	// +kubebuilder:validation:Optional
	AfterRebootTaskName *string `json:"afterRebootTaskName,omitempty" tf:"after_reboot_task_name,omitempty"`

	// +kubebuilder:validation:Optional
	Clean *string `json:"clean,omitempty" tf:"clean,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EnablePatchRollback *string `json:"enablePatchRollback,omitempty" tf:"enable_patch_rollback,omitempty"`

	// +kubebuilder:validation:Optional
	EnableRollback *string `json:"enableRollback,omitempty" tf:"enable_rollback,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	// +kubebuilder:validation:Optional
	FipsMode *string `json:"fipsMode,omitempty" tf:"fips_mode,omitempty"`

	// +kubebuilder:validation:Optional
	History []HistoryParameters `json:"history,omitempty" tf:"history,omitempty"`

	// +kubebuilder:validation:Optional
	ImagePath *string `json:"imagePath,omitempty" tf:"image_path,omitempty"`

	// +kubebuilder:validation:Optional
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	// +kubebuilder:validation:Optional
	ObjCloudRef *string `json:"objCloudRef,omitempty" tf:"obj_cloud_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Params []UpgradeStatusInfoParamsParameters `json:"params,omitempty" tf:"params,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImagePath *string `json:"patchImagePath,omitempty" tf:"patch_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	PatchImageRef *string `json:"patchImageRef,omitempty" tf:"patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchList []PatchListParameters `json:"patchList,omitempty" tf:"patch_list,omitempty"`

	// +kubebuilder:validation:Optional
	PatchReboot *string `json:"patchReboot,omitempty" tf:"patch_reboot,omitempty"`

	// +kubebuilder:validation:Optional
	PatchVersion *string `json:"patchVersion,omitempty" tf:"patch_version,omitempty"`

	// +kubebuilder:validation:Optional
	PrevImagePath *string `json:"prevImagePath,omitempty" tf:"prev_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	PrevPatchImagePath *string `json:"prevPatchImagePath,omitempty" tf:"prev_patch_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	PreviousImageRef *string `json:"previousImageRef,omitempty" tf:"previous_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PreviousPatchImageRef *string `json:"previousPatchImageRef,omitempty" tf:"previous_patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PreviousPatchList []PreviousPatchListParameters `json:"previousPatchList,omitempty" tf:"previous_patch_list,omitempty"`

	// +kubebuilder:validation:Optional
	PreviousPatchVersion *string `json:"previousPatchVersion,omitempty" tf:"previous_patch_version,omitempty"`

	// +kubebuilder:validation:Optional
	PreviousVersion *string `json:"previousVersion,omitempty" tf:"previous_version,omitempty"`

	// +kubebuilder:validation:Optional
	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SePatchImagePath *string `json:"sePatchImagePath,omitempty" tf:"se_patch_image_path,omitempty"`

	// +kubebuilder:validation:Optional
	SePatchImageRef *string `json:"sePatchImageRef,omitempty" tf:"se_patch_image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeEvents []UpgradeStatusInfoSeUpgradeEventsParameters `json:"seUpgradeEvents,omitempty" tf:"se_upgrade_events,omitempty"`

	// +kubebuilder:validation:Optional
	SegParams []SegParamsParameters `json:"segParams,omitempty" tf:"seg_params,omitempty"`

	// +kubebuilder:validation:Optional
	SegStatus []UpgradeStatusInfoSegStatusParameters `json:"segStatus,omitempty" tf:"seg_status,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State []UpgradeStatusInfoStateParameters `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	StatediffRef *string `json:"statediffRef,omitempty" tf:"statediff_ref,omitempty"`

	// +kubebuilder:validation:Optional
	System *string `json:"system,omitempty" tf:"system,omitempty"`

	// +kubebuilder:validation:Optional
	TasksCompleted *string `json:"tasksCompleted,omitempty" tf:"tasks_completed,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TotalTasks *string `json:"totalTasks,omitempty" tf:"total_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeEvents []UpgradeStatusInfoUpgradeEventsParameters `json:"upgradeEvents,omitempty" tf:"upgrade_events,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeOps *string `json:"upgradeOps,omitempty" tf:"upgrade_ops,omitempty"`

	// +kubebuilder:validation:Optional
	UpgradeReadiness []UpgradeReadinessParameters `json:"upgradeReadiness,omitempty" tf:"upgrade_readiness,omitempty"`

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpgradeStatusInfoParamsInitParameters struct {
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	SeGroupOptions []SeGroupOptionsInitParameters `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	SeGroupResumeOptions []SeGroupResumeOptionsInitParameters `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type UpgradeStatusInfoParamsObservation struct {
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	SeGroupOptions []SeGroupOptionsObservation `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	SeGroupResumeOptions []SeGroupResumeOptionsObservation `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type UpgradeStatusInfoParamsParameters struct {

	// +kubebuilder:validation:Optional
	ImageRef *string `json:"imageRef,omitempty" tf:"image_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PatchRef *string `json:"patchRef,omitempty" tf:"patch_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupOptions []SeGroupOptionsParameters `json:"seGroupOptions,omitempty" tf:"se_group_options,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupResumeOptions []SeGroupResumeOptionsParameters `json:"seGroupResumeOptions,omitempty" tf:"se_group_resume_options,omitempty"`
}

type UpgradeStatusInfoSeUpgradeEventsInitParameters struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type UpgradeStatusInfoSeUpgradeEventsObservation struct {
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type UpgradeStatusInfoSeUpgradeEventsParameters struct {

	// +kubebuilder:validation:Optional
	FromSeRef *string `json:"fromSeRef,omitempty" tf:"from_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeGroup *string `json:"numSeGroup,omitempty" tf:"num_se_group,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	ToSeRef *string `json:"toSeRef,omitempty" tf:"to_se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type UpgradeStatusInfoSegStatusInitParameters struct {
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	SeUpgradeErrors []SegStatusSeUpgradeErrorsInitParameters `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsErrors []SegStatusVsErrorsInitParameters `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type UpgradeStatusInfoSegStatusObservation struct {
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	SeUpgradeErrors []SegStatusSeUpgradeErrorsObservation `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VsErrors []SegStatusVsErrorsObservation `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type UpgradeStatusInfoSegStatusParameters struct {

	// +kubebuilder:validation:Optional
	ControllerVersion *string `json:"controllerVersion,omitempty" tf:"controller_version,omitempty"`

	// +kubebuilder:validation:Optional
	DisruptedVsRef []*string `json:"disruptedVsRef,omitempty" tf:"disrupted_vs_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	EnqueueTime *string `json:"enqueueTime,omitempty" tf:"enqueue_time,omitempty"`

	// +kubebuilder:validation:Optional
	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	InProgress *string `json:"inProgress,omitempty" tf:"in_progress,omitempty"`

	// +kubebuilder:validation:Optional
	Notes []*string `json:"notes,omitempty" tf:"notes,omitempty"`

	// +kubebuilder:validation:Optional
	NumSe *string `json:"numSe,omitempty" tf:"num_se,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithNoVs *string `json:"numSeWithNoVs,omitempty" tf:"num_se_with_no_vs,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithVsNotScaledout *string `json:"numSeWithVsNotScaledout,omitempty" tf:"num_se_with_vs_not_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	NumSeWithVsScaledout *string `json:"numSeWithVsScaledout,omitempty" tf:"num_se_with_vs_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	NumVs *string `json:"numVs,omitempty" tf:"num_vs,omitempty"`

	// +kubebuilder:validation:Optional
	NumVsDisrupted *string `json:"numVsDisrupted,omitempty" tf:"num_vs_disrupted,omitempty"`

	// +kubebuilder:validation:Optional
	Progress *string `json:"progress,omitempty" tf:"progress,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	RequestTime *string `json:"requestTime,omitempty" tf:"request_time,omitempty"`

	// +kubebuilder:validation:Optional
	SeAlreadyUpgradedAtStart []*string `json:"seAlreadyUpgradedAtStart,omitempty" tf:"se_already_upgraded_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeDisconnectedAtStart []*string `json:"seDisconnectedAtStart,omitempty" tf:"se_disconnected_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupName *string `json:"seGroupName,omitempty" tf:"se_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupUUID *string `json:"seGroupUuid,omitempty" tf:"se_group_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	SeIPMissingAtStart []*string `json:"seIpMissingAtStart,omitempty" tf:"se_ip_missing_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SePoweredoffAtStart []*string `json:"sePoweredoffAtStart,omitempty" tf:"se_poweredoff_at_start,omitempty"`

	// +kubebuilder:validation:Optional
	SeRebootInProgressRef *string `json:"seRebootInProgressRef,omitempty" tf:"se_reboot_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeCompleted []*string `json:"seUpgradeCompleted,omitempty" tf:"se_upgrade_completed,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeErrors []SegStatusSeUpgradeErrorsParameters `json:"seUpgradeErrors,omitempty" tf:"se_upgrade_errors,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeFailed []*string `json:"seUpgradeFailed,omitempty" tf:"se_upgrade_failed,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeInProgress []*string `json:"seUpgradeInProgress,omitempty" tf:"se_upgrade_in_progress,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeNotStarted []*string `json:"seUpgradeNotStarted,omitempty" tf:"se_upgrade_not_started,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeSkipSuspended []*string `json:"seUpgradeSkipSuspended,omitempty" tf:"se_upgrade_skip_suspended,omitempty"`

	// +kubebuilder:validation:Optional
	SeUpgradeSuspended []*string `json:"seUpgradeSuspended,omitempty" tf:"se_upgrade_suspended,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithNoVs []*string `json:"seWithNoVs,omitempty" tf:"se_with_no_vs,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithVsNotScaledout []*string `json:"seWithVsNotScaledout,omitempty" tf:"se_with_vs_not_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	SeWithVsScaledout []*string `json:"seWithVsScaledout,omitempty" tf:"se_with_vs_scaledout,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Thread *string `json:"thread,omitempty" tf:"thread,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VsErrors []SegStatusVsErrorsParameters `json:"vsErrors,omitempty" tf:"vs_errors,omitempty"`

	// +kubebuilder:validation:Optional
	VsMigrateInProgressRef []*string `json:"vsMigrateInProgressRef,omitempty" tf:"vs_migrate_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	VsScaleinInProgressRef []*string `json:"vsScaleinInProgressRef,omitempty" tf:"vs_scalein_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	VsScaleoutInProgressRef []*string `json:"vsScaleoutInProgressRef,omitempty" tf:"vs_scaleout_in_progress_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Worker *string `json:"worker,omitempty" tf:"worker,omitempty"`
}

type UpgradeStatusInfoStateInitParameters struct {
	LastChangedTime []UpgradeStatusInfoStateLastChangedTimeInitParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusInfoStateLastChangedTimeInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeStatusInfoStateLastChangedTimeObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type UpgradeStatusInfoStateLastChangedTimeParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type UpgradeStatusInfoStateObservation struct {
	LastChangedTime []UpgradeStatusInfoStateLastChangedTimeObservation `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusInfoStateParameters struct {

	// +kubebuilder:validation:Optional
	LastChangedTime []UpgradeStatusInfoStateLastChangedTimeParameters `json:"lastChangedTime,omitempty" tf:"last_changed_time,omitempty"`

	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	Rebooted *string `json:"rebooted,omitempty" tf:"rebooted,omitempty"`

	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsInitParameters struct {
	NodesEvents []UpgradeStatusInfoUpgradeEventsNodesEventsInitParameters `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	SubEvents []UpgradeStatusInfoUpgradeEventsSubEventsInitParameters `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeStatusInfoUpgradeEventsNodesEventsIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeStatusInfoUpgradeEventsNodesEventsIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsNodesEventsParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	IP []UpgradeStatusInfoUpgradeEventsNodesEventsIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsObservation struct {
	NodesEvents []UpgradeStatusInfoUpgradeEventsNodesEventsObservation `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	SubEvents []UpgradeStatusInfoUpgradeEventsSubEventsObservation `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsParameters struct {

	// +kubebuilder:validation:Optional
	NodesEvents []UpgradeStatusInfoUpgradeEventsNodesEventsParameters `json:"nodesEvents,omitempty" tf:"nodes_events,omitempty"`

	// +kubebuilder:validation:Optional
	SubEvents []UpgradeStatusInfoUpgradeEventsSubEventsParameters `json:"subEvents,omitempty" tf:"sub_events,omitempty"`

	// +kubebuilder:validation:Optional
	Task *string `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeStatusInfoUpgradeEventsSubEventsIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	IP []UpgradeStatusInfoUpgradeEventsSubEventsIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type UpgradeStatusInfoUpgradeEventsSubEventsParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// +kubebuilder:validation:Optional
	IP []UpgradeStatusInfoUpgradeEventsSubEventsIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// +kubebuilder:validation:Optional
	SubTasks []*string `json:"subTasks,omitempty" tf:"sub_tasks,omitempty"`
}

type VsErrorsEventTimestampInitParameters struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type VsErrorsEventTimestampObservation struct {
	Secs *string `json:"secs,omitempty" tf:"secs,omitempty"`

	Usecs *string `json:"usecs,omitempty" tf:"usecs,omitempty"`
}

type VsErrorsEventTimestampParameters struct {

	// +kubebuilder:validation:Optional
	Secs *string `json:"secs" tf:"secs,omitempty"`

	// +kubebuilder:validation:Optional
	Usecs *string `json:"usecs" tf:"usecs,omitempty"`
}

type VsErrorsInitParameters struct {
	EventTimestamp []EventTimestampInitParameters `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type VsErrorsObservation struct {
	EventTimestamp []EventTimestampObservation `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

type VsErrorsParameters struct {

	// +kubebuilder:validation:Optional
	EventTimestamp []EventTimestampParameters `json:"eventTimestamp,omitempty" tf:"event_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	Reason []*string `json:"reason,omitempty" tf:"reason,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupHaMode *string `json:"seGroupHaMode,omitempty" tf:"se_group_ha_mode,omitempty"`

	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SeRef *string `json:"seRef,omitempty" tf:"se_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	TrafficStatus *string `json:"trafficStatus,omitempty" tf:"traffic_status,omitempty"`

	// +kubebuilder:validation:Optional
	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`

	// +kubebuilder:validation:Optional
	VsRef *string `json:"vsRef,omitempty" tf:"vs_ref,omitempty"`
}

// UpgradeStatusInfoSpec defines the desired state of UpgradeStatusInfo
type UpgradeStatusInfoSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UpgradeStatusInfoParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UpgradeStatusInfoInitParameters `json:"initProvider,omitempty"`
}

// UpgradeStatusInfoStatus defines the observed state of UpgradeStatusInfo.
type UpgradeStatusInfoStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UpgradeStatusInfoObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// UpgradeStatusInfo is the Schema for the UpgradeStatusInfos API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type UpgradeStatusInfo struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              UpgradeStatusInfoSpec   `json:"spec"`
	Status            UpgradeStatusInfoStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UpgradeStatusInfoList contains a list of UpgradeStatusInfos
type UpgradeStatusInfoList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UpgradeStatusInfo `json:"items"`
}

// Repository type metadata.
var (
	UpgradeStatusInfo_Kind             = "UpgradeStatusInfo"
	UpgradeStatusInfo_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UpgradeStatusInfo_Kind}.String()
	UpgradeStatusInfo_KindAPIVersion   = UpgradeStatusInfo_Kind + "." + CRDGroupVersion.String()
	UpgradeStatusInfo_GroupVersionKind = CRDGroupVersion.WithKind(UpgradeStatusInfo_Kind)
)

func init() {
	SchemeBuilder.Register(&UpgradeStatusInfo{}, &UpgradeStatusInfoList{})
}
