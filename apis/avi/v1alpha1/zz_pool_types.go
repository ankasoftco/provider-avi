/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsPolicyInitParameters struct {
	EnableRealtimeMetrics *string `json:"enableRealtimeMetrics,omitempty" tf:"enable_realtime_metrics,omitempty"`
}

type AnalyticsPolicyObservation struct {
	EnableRealtimeMetrics *string `json:"enableRealtimeMetrics,omitempty" tf:"enable_realtime_metrics,omitempty"`
}

type AnalyticsPolicyParameters struct {

	// +kubebuilder:validation:Optional
	EnableRealtimeMetrics *string `json:"enableRealtimeMetrics,omitempty" tf:"enable_realtime_metrics,omitempty"`
}

type ConnPoolPropertiesInitParameters struct {
	UpstreamConnpoolConnIdleTmo *string `json:"upstreamConnpoolConnIdleTmo,omitempty" tf:"upstream_connpool_conn_idle_tmo,omitempty"`

	UpstreamConnpoolConnLifeTmo *string `json:"upstreamConnpoolConnLifeTmo,omitempty" tf:"upstream_connpool_conn_life_tmo,omitempty"`

	UpstreamConnpoolConnMaxReuse *string `json:"upstreamConnpoolConnMaxReuse,omitempty" tf:"upstream_connpool_conn_max_reuse,omitempty"`

	UpstreamConnpoolServerMaxCache *string `json:"upstreamConnpoolServerMaxCache,omitempty" tf:"upstream_connpool_server_max_cache,omitempty"`
}

type ConnPoolPropertiesObservation struct {
	UpstreamConnpoolConnIdleTmo *string `json:"upstreamConnpoolConnIdleTmo,omitempty" tf:"upstream_connpool_conn_idle_tmo,omitempty"`

	UpstreamConnpoolConnLifeTmo *string `json:"upstreamConnpoolConnLifeTmo,omitempty" tf:"upstream_connpool_conn_life_tmo,omitempty"`

	UpstreamConnpoolConnMaxReuse *string `json:"upstreamConnpoolConnMaxReuse,omitempty" tf:"upstream_connpool_conn_max_reuse,omitempty"`

	UpstreamConnpoolServerMaxCache *string `json:"upstreamConnpoolServerMaxCache,omitempty" tf:"upstream_connpool_server_max_cache,omitempty"`
}

type ConnPoolPropertiesParameters struct {

	// +kubebuilder:validation:Optional
	UpstreamConnpoolConnIdleTmo *string `json:"upstreamConnpoolConnIdleTmo,omitempty" tf:"upstream_connpool_conn_idle_tmo,omitempty"`

	// +kubebuilder:validation:Optional
	UpstreamConnpoolConnLifeTmo *string `json:"upstreamConnpoolConnLifeTmo,omitempty" tf:"upstream_connpool_conn_life_tmo,omitempty"`

	// +kubebuilder:validation:Optional
	UpstreamConnpoolConnMaxReuse *string `json:"upstreamConnpoolConnMaxReuse,omitempty" tf:"upstream_connpool_conn_max_reuse,omitempty"`

	// +kubebuilder:validation:Optional
	UpstreamConnpoolServerMaxCache *string `json:"upstreamConnpoolServerMaxCache,omitempty" tf:"upstream_connpool_server_max_cache,omitempty"`
}

type DiscoveredNetworksInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []DiscoveredNetworksSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []DiscoveredNetworksSubnet6InitParameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type DiscoveredNetworksObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []DiscoveredNetworksSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []DiscoveredNetworksSubnet6Observation `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type DiscoveredNetworksParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []DiscoveredNetworksSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet6 []DiscoveredNetworksSubnet6Parameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6InitParameters struct {
	IPAddr []DiscoveredNetworksSubnet6IPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnet6Observation struct {
	IPAddr []DiscoveredNetworksSubnet6IPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnet6Parameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []DiscoveredNetworksSubnet6IPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnetInitParameters struct {
	IPAddr []DiscoveredNetworksSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnetObservation struct {
	IPAddr []DiscoveredNetworksSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []DiscoveredNetworksSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type FailActionInitParameters struct {
	LocalRsp []LocalRspInitParameters `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	Redirect []FailActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FailActionObservation struct {
	LocalRsp []LocalRspObservation `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	Redirect []FailActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FailActionParameters struct {

	// +kubebuilder:validation:Optional
	LocalRsp []LocalRspParameters `json:"localRsp,omitempty" tf:"local_rsp,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []FailActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FailActionRedirectInitParameters struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FailActionRedirectObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FailActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type HorizonProfileInitParameters struct {
	BlastPort *string `json:"blastPort,omitempty" tf:"blast_port,omitempty"`

	PcoipPort *string `json:"pcoipPort,omitempty" tf:"pcoip_port,omitempty"`
}

type HorizonProfileObservation struct {
	BlastPort *string `json:"blastPort,omitempty" tf:"blast_port,omitempty"`

	PcoipPort *string `json:"pcoipPort,omitempty" tf:"pcoip_port,omitempty"`
}

type HorizonProfileParameters struct {

	// +kubebuilder:validation:Optional
	BlastPort *string `json:"blastPort,omitempty" tf:"blast_port,omitempty"`

	// +kubebuilder:validation:Optional
	PcoipPort *string `json:"pcoipPort,omitempty" tf:"pcoip_port,omitempty"`
}

type Http2PropertiesInitParameters struct {
	MaxHttp2ControlFramesPerConnection *string `json:"maxHttp2ControlFramesPerConnection,omitempty" tf:"max_http2_control_frames_per_connection,omitempty"`

	MaxHttp2HeaderFieldSize *string `json:"maxHttp2HeaderFieldSize,omitempty" tf:"max_http2_header_field_size,omitempty"`
}

type Http2PropertiesObservation struct {
	MaxHttp2ControlFramesPerConnection *string `json:"maxHttp2ControlFramesPerConnection,omitempty" tf:"max_http2_control_frames_per_connection,omitempty"`

	MaxHttp2HeaderFieldSize *string `json:"maxHttp2HeaderFieldSize,omitempty" tf:"max_http2_header_field_size,omitempty"`
}

type Http2PropertiesParameters struct {

	// +kubebuilder:validation:Optional
	MaxHttp2ControlFramesPerConnection *string `json:"maxHttp2ControlFramesPerConnection,omitempty" tf:"max_http2_control_frames_per_connection,omitempty"`

	// +kubebuilder:validation:Optional
	MaxHttp2HeaderFieldSize *string `json:"maxHttp2HeaderFieldSize,omitempty" tf:"max_http2_header_field_size,omitempty"`
}

type LocalRspFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type LocalRspFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type LocalRspFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type LocalRspInitParameters struct {
	File []LocalRspFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type LocalRspObservation struct {
	File []LocalRspFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type LocalRspParameters struct {

	// +kubebuilder:validation:Optional
	File []LocalRspFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type MaxConnRatePerServerActionFileInitParameters struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type MaxConnRatePerServerActionFileObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type MaxConnRatePerServerActionFileParameters struct {

	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type MaxConnRatePerServerActionInitParameters struct {
	File []MaxConnRatePerServerActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []MaxConnRatePerServerActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionObservation struct {
	File []MaxConnRatePerServerActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []MaxConnRatePerServerActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionParameters struct {

	// +kubebuilder:validation:Optional
	File []MaxConnRatePerServerActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []MaxConnRatePerServerActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostInitParameters struct {
	Tokens []MaxConnRatePerServerActionRedirectHostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostObservation struct {
	Tokens []MaxConnRatePerServerActionRedirectHostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []MaxConnRatePerServerActionRedirectHostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectHostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []MaxConnRatePerServerActionRedirectHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []MaxConnRatePerServerActionRedirectPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type MaxConnRatePerServerActionRedirectObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []MaxConnRatePerServerActionRedirectHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []MaxConnRatePerServerActionRedirectPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type MaxConnRatePerServerActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	Host []MaxConnRatePerServerActionRedirectHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []MaxConnRatePerServerActionRedirectPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathInitParameters struct {
	Tokens []MaxConnRatePerServerActionRedirectPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathObservation struct {
	Tokens []MaxConnRatePerServerActionRedirectPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []MaxConnRatePerServerActionRedirectPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaxConnRatePerServerActionRedirectPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MaxConnRatePerServerInitParameters struct {
	Action []MaxConnRatePerServerActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []MaxConnRatePerServerRateLimiterInitParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type MaxConnRatePerServerObservation struct {
	Action []MaxConnRatePerServerActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []MaxConnRatePerServerRateLimiterObservation `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type MaxConnRatePerServerParameters struct {

	// +kubebuilder:validation:Optional
	Action []MaxConnRatePerServerActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	// +kubebuilder:validation:Optional
	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiter []MaxConnRatePerServerRateLimiterParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type MaxConnRatePerServerRateLimiterInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type MaxConnRatePerServerRateLimiterObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type MaxConnRatePerServerRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type NetworksInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	ServerFilter *string `json:"serverFilter,omitempty" tf:"server_filter,omitempty"`
}

type NetworksObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	ServerFilter *string `json:"serverFilter,omitempty" tf:"server_filter,omitempty"`
}

type NetworksParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ServerFilter *string `json:"serverFilter,omitempty" tf:"server_filter,omitempty"`
}

type PlacementNetworksInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []PlacementNetworksSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`
}

type PlacementNetworksObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []PlacementNetworksSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`
}

type PlacementNetworksParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []PlacementNetworksSubnetParameters `json:"subnet" tf:"subnet,omitempty"`
}

type PlacementNetworksSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PlacementNetworksSubnetInitParameters struct {
	IPAddr []PlacementNetworksSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnetObservation struct {
	IPAddr []PlacementNetworksSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PlacementNetworksSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PoolConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PoolInitParameters struct {
	AnalyticsPolicy []AnalyticsPolicyInitParameters `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	AppendPort *string `json:"appendPort,omitempty" tf:"append_port,omitempty"`

	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	AutoscaleLaunchConfigRef *string `json:"autoscaleLaunchConfigRef,omitempty" tf:"autoscale_launch_config_ref,omitempty"`

	AutoscaleNetworks []*string `json:"autoscaleNetworks,omitempty" tf:"autoscale_networks,omitempty"`

	AutoscalePolicyRef *string `json:"autoscalePolicyRef,omitempty" tf:"autoscale_policy_ref,omitempty"`

	CapacityEstimation *string `json:"capacityEstimation,omitempty" tf:"capacity_estimation,omitempty"`

	CapacityEstimationTtfbThresh *string `json:"capacityEstimationTtfbThresh,omitempty" tf:"capacity_estimation_ttfb_thresh,omitempty"`

	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []PoolConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ConnPoolProperties []ConnPoolPropertiesInitParameters `json:"connPoolProperties,omitempty" tf:"conn_pool_properties,omitempty"`

	ConnectionRampDuration *string `json:"connectionRampDuration,omitempty" tf:"connection_ramp_duration,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	DefaultServerPort *string `json:"defaultServerPort,omitempty" tf:"default_server_port,omitempty"`

	DeleteServerOnDNSRefresh *string `json:"deleteServerOnDnsRefresh,omitempty" tf:"delete_server_on_dns_refresh,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DomainName []*string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	EastWest *string `json:"eastWest,omitempty" tf:"east_west,omitempty"`

	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExternalAutoscaleGroups []*string `json:"externalAutoscaleGroups,omitempty" tf:"external_autoscale_groups,omitempty"`

	FailAction []FailActionInitParameters `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	FewestTasksFeedbackDelay *string `json:"fewestTasksFeedbackDelay,omitempty" tf:"fewest_tasks_feedback_delay,omitempty"`

	GracefulDisableTimeout *string `json:"gracefulDisableTimeout,omitempty" tf:"graceful_disable_timeout,omitempty"`

	GslbSpEnabled *string `json:"gslbSpEnabled,omitempty" tf:"gslb_sp_enabled,omitempty"`

	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	HorizonProfile []HorizonProfileInitParameters `json:"horizonProfile,omitempty" tf:"horizon_profile,omitempty"`

	HostCheckEnabled *string `json:"hostCheckEnabled,omitempty" tf:"host_check_enabled,omitempty"`

	Http2Properties []Http2PropertiesInitParameters `json:"http2Properties,omitempty" tf:"http2_properties,omitempty"`

	IgnoreServerPort *string `json:"ignoreServerPort,omitempty" tf:"ignore_server_port,omitempty"`

	IgnoreServers *bool `json:"ignoreServers,omitempty" tf:"ignore_servers,omitempty"`

	InlineHealthMonitor *string `json:"inlineHealthMonitor,omitempty" tf:"inline_health_monitor,omitempty"`

	IpaddrgroupRef *string `json:"ipaddrgroupRef,omitempty" tf:"ipaddrgroup_ref,omitempty"`

	LBAlgoRrPerSe *string `json:"lbAlgoRrPerSe,omitempty" tf:"lb_algo_rr_per_se,omitempty"`

	LBAlgorithm *string `json:"lbAlgorithm,omitempty" tf:"lb_algorithm,omitempty"`

	LBAlgorithmConsistentHashHdr *string `json:"lbAlgorithmConsistentHashHdr,omitempty" tf:"lb_algorithm_consistent_hash_hdr,omitempty"`

	LBAlgorithmCoreNonaffinity *string `json:"lbAlgorithmCoreNonaffinity,omitempty" tf:"lb_algorithm_core_nonaffinity,omitempty"`

	LBAlgorithmHash *string `json:"lbAlgorithmHash,omitempty" tf:"lb_algorithm_hash,omitempty"`

	LookupServerByName *string `json:"lookupServerByName,omitempty" tf:"lookup_server_by_name,omitempty"`

	Markers []PoolMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	MaxConcurrentConnectionsPerServer *string `json:"maxConcurrentConnectionsPerServer,omitempty" tf:"max_concurrent_connections_per_server,omitempty"`

	MaxConnRatePerServer []MaxConnRatePerServerInitParameters `json:"maxConnRatePerServer,omitempty" tf:"max_conn_rate_per_server,omitempty"`

	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	MinServersUp *string `json:"minServersUp,omitempty" tf:"min_servers_up,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Networks []NetworksInitParameters `json:"networks,omitempty" tf:"networks,omitempty"`

	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	PlacementNetworks []PlacementNetworksInitParameters `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	PoolType *string `json:"poolType,omitempty" tf:"pool_type,omitempty"`

	RequestQueueDepth *string `json:"requestQueueDepth,omitempty" tf:"request_queue_depth,omitempty"`

	RequestQueueEnabled *string `json:"requestQueueEnabled,omitempty" tf:"request_queue_enabled,omitempty"`

	ResolvePoolByDNS *string `json:"resolvePoolByDns,omitempty" tf:"resolve_pool_by_dns,omitempty"`

	RewriteHostHeaderToServerName *string `json:"rewriteHostHeaderToServerName,omitempty" tf:"rewrite_host_header_to_server_name,omitempty"`

	RewriteHostHeaderToSni *string `json:"rewriteHostHeaderToSni,omitempty" tf:"rewrite_host_header_to_sni,omitempty"`

	RoutingPool *string `json:"routingPool,omitempty" tf:"routing_pool,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	ServerDisableType *string `json:"serverDisableType,omitempty" tf:"server_disable_type,omitempty"`

	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`

	ServerReselect []ServerReselectInitParameters `json:"serverReselect,omitempty" tf:"server_reselect,omitempty"`

	ServerTimeout *string `json:"serverTimeout,omitempty" tf:"server_timeout,omitempty"`

	Servers []ServersInitParameters `json:"servers,omitempty" tf:"servers,omitempty"`

	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	SniEnabled *string `json:"sniEnabled,omitempty" tf:"sni_enabled,omitempty"`

	SpGsInfo []SpGsInfoInitParameters `json:"spGsInfo,omitempty" tf:"sp_gs_info,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Tier1Lr *string `json:"tier1Lr,omitempty" tf:"tier1_lr,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UseServicePort *string `json:"useServicePort,omitempty" tf:"use_service_port,omitempty"`

	UseServiceSSLMode *string `json:"useServiceSslMode,omitempty" tf:"use_service_ssl_mode,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type PoolMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PoolObservation struct {
	AnalyticsPolicy []AnalyticsPolicyObservation `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	AppendPort *string `json:"appendPort,omitempty" tf:"append_port,omitempty"`

	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	AutoscaleLaunchConfigRef *string `json:"autoscaleLaunchConfigRef,omitempty" tf:"autoscale_launch_config_ref,omitempty"`

	AutoscaleNetworks []*string `json:"autoscaleNetworks,omitempty" tf:"autoscale_networks,omitempty"`

	AutoscalePolicyRef *string `json:"autoscalePolicyRef,omitempty" tf:"autoscale_policy_ref,omitempty"`

	CapacityEstimation *string `json:"capacityEstimation,omitempty" tf:"capacity_estimation,omitempty"`

	CapacityEstimationTtfbThresh *string `json:"capacityEstimationTtfbThresh,omitempty" tf:"capacity_estimation_ttfb_thresh,omitempty"`

	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	ConfigpbAttributes []PoolConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	ConnPoolProperties []ConnPoolPropertiesObservation `json:"connPoolProperties,omitempty" tf:"conn_pool_properties,omitempty"`

	ConnectionRampDuration *string `json:"connectionRampDuration,omitempty" tf:"connection_ramp_duration,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	DefaultServerPort *string `json:"defaultServerPort,omitempty" tf:"default_server_port,omitempty"`

	DeleteServerOnDNSRefresh *string `json:"deleteServerOnDnsRefresh,omitempty" tf:"delete_server_on_dns_refresh,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DomainName []*string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	EastWest *string `json:"eastWest,omitempty" tf:"east_west,omitempty"`

	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExternalAutoscaleGroups []*string `json:"externalAutoscaleGroups,omitempty" tf:"external_autoscale_groups,omitempty"`

	FailAction []FailActionObservation `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	FewestTasksFeedbackDelay *string `json:"fewestTasksFeedbackDelay,omitempty" tf:"fewest_tasks_feedback_delay,omitempty"`

	GracefulDisableTimeout *string `json:"gracefulDisableTimeout,omitempty" tf:"graceful_disable_timeout,omitempty"`

	GslbSpEnabled *string `json:"gslbSpEnabled,omitempty" tf:"gslb_sp_enabled,omitempty"`

	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	HorizonProfile []HorizonProfileObservation `json:"horizonProfile,omitempty" tf:"horizon_profile,omitempty"`

	HostCheckEnabled *string `json:"hostCheckEnabled,omitempty" tf:"host_check_enabled,omitempty"`

	Http2Properties []Http2PropertiesObservation `json:"http2Properties,omitempty" tf:"http2_properties,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IgnoreServerPort *string `json:"ignoreServerPort,omitempty" tf:"ignore_server_port,omitempty"`

	IgnoreServers *bool `json:"ignoreServers,omitempty" tf:"ignore_servers,omitempty"`

	InlineHealthMonitor *string `json:"inlineHealthMonitor,omitempty" tf:"inline_health_monitor,omitempty"`

	IpaddrgroupRef *string `json:"ipaddrgroupRef,omitempty" tf:"ipaddrgroup_ref,omitempty"`

	LBAlgoRrPerSe *string `json:"lbAlgoRrPerSe,omitempty" tf:"lb_algo_rr_per_se,omitempty"`

	LBAlgorithm *string `json:"lbAlgorithm,omitempty" tf:"lb_algorithm,omitempty"`

	LBAlgorithmConsistentHashHdr *string `json:"lbAlgorithmConsistentHashHdr,omitempty" tf:"lb_algorithm_consistent_hash_hdr,omitempty"`

	LBAlgorithmCoreNonaffinity *string `json:"lbAlgorithmCoreNonaffinity,omitempty" tf:"lb_algorithm_core_nonaffinity,omitempty"`

	LBAlgorithmHash *string `json:"lbAlgorithmHash,omitempty" tf:"lb_algorithm_hash,omitempty"`

	LookupServerByName *string `json:"lookupServerByName,omitempty" tf:"lookup_server_by_name,omitempty"`

	Markers []PoolMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	MaxConcurrentConnectionsPerServer *string `json:"maxConcurrentConnectionsPerServer,omitempty" tf:"max_concurrent_connections_per_server,omitempty"`

	MaxConnRatePerServer []MaxConnRatePerServerObservation `json:"maxConnRatePerServer,omitempty" tf:"max_conn_rate_per_server,omitempty"`

	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	MinServersUp *string `json:"minServersUp,omitempty" tf:"min_servers_up,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Networks []NetworksObservation `json:"networks,omitempty" tf:"networks,omitempty"`

	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	PlacementNetworks []PlacementNetworksObservation `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	PoolType *string `json:"poolType,omitempty" tf:"pool_type,omitempty"`

	RequestQueueDepth *string `json:"requestQueueDepth,omitempty" tf:"request_queue_depth,omitempty"`

	RequestQueueEnabled *string `json:"requestQueueEnabled,omitempty" tf:"request_queue_enabled,omitempty"`

	ResolvePoolByDNS *string `json:"resolvePoolByDns,omitempty" tf:"resolve_pool_by_dns,omitempty"`

	RewriteHostHeaderToServerName *string `json:"rewriteHostHeaderToServerName,omitempty" tf:"rewrite_host_header_to_server_name,omitempty"`

	RewriteHostHeaderToSni *string `json:"rewriteHostHeaderToSni,omitempty" tf:"rewrite_host_header_to_sni,omitempty"`

	RoutingPool *string `json:"routingPool,omitempty" tf:"routing_pool,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	ServerDisableType *string `json:"serverDisableType,omitempty" tf:"server_disable_type,omitempty"`

	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`

	ServerReselect []ServerReselectObservation `json:"serverReselect,omitempty" tf:"server_reselect,omitempty"`

	ServerTimeout *string `json:"serverTimeout,omitempty" tf:"server_timeout,omitempty"`

	Servers []ServersObservation `json:"servers,omitempty" tf:"servers,omitempty"`

	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	SniEnabled *string `json:"sniEnabled,omitempty" tf:"sni_enabled,omitempty"`

	SpGsInfo []SpGsInfoObservation `json:"spGsInfo,omitempty" tf:"sp_gs_info,omitempty"`

	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	Tier1Lr *string `json:"tier1Lr,omitempty" tf:"tier1_lr,omitempty"`

	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	UseServicePort *string `json:"useServicePort,omitempty" tf:"use_service_port,omitempty"`

	UseServiceSSLMode *string `json:"useServiceSslMode,omitempty" tf:"use_service_ssl_mode,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type PoolParameters struct {

	// +kubebuilder:validation:Optional
	AnalyticsPolicy []AnalyticsPolicyParameters `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	// +kubebuilder:validation:Optional
	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	AppendPort *string `json:"appendPort,omitempty" tf:"append_port,omitempty"`

	// +kubebuilder:validation:Optional
	ApplicationPersistenceProfileRef *string `json:"applicationPersistenceProfileRef,omitempty" tf:"application_persistence_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	AutoscaleLaunchConfigRef *string `json:"autoscaleLaunchConfigRef,omitempty" tf:"autoscale_launch_config_ref,omitempty"`

	// +kubebuilder:validation:Optional
	AutoscaleNetworks []*string `json:"autoscaleNetworks,omitempty" tf:"autoscale_networks,omitempty"`

	// +kubebuilder:validation:Optional
	AutoscalePolicyRef *string `json:"autoscalePolicyRef,omitempty" tf:"autoscale_policy_ref,omitempty"`

	// +kubebuilder:validation:Optional
	CapacityEstimation *string `json:"capacityEstimation,omitempty" tf:"capacity_estimation,omitempty"`

	// +kubebuilder:validation:Optional
	CapacityEstimationTtfbThresh *string `json:"capacityEstimationTtfbThresh,omitempty" tf:"capacity_estimation_ttfb_thresh,omitempty"`

	// +kubebuilder:validation:Optional
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// +kubebuilder:validation:Optional
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigpbAttributes []PoolConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ConnPoolProperties []ConnPoolPropertiesParameters `json:"connPoolProperties,omitempty" tf:"conn_pool_properties,omitempty"`

	// +kubebuilder:validation:Optional
	ConnectionRampDuration *string `json:"connectionRampDuration,omitempty" tf:"connection_ramp_duration,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultServerPort *string `json:"defaultServerPort,omitempty" tf:"default_server_port,omitempty"`

	// +kubebuilder:validation:Optional
	DeleteServerOnDNSRefresh *string `json:"deleteServerOnDnsRefresh,omitempty" tf:"delete_server_on_dns_refresh,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DomainName []*string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	// +kubebuilder:validation:Optional
	EastWest *string `json:"eastWest,omitempty" tf:"east_west,omitempty"`

	// +kubebuilder:validation:Optional
	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ExternalAutoscaleGroups []*string `json:"externalAutoscaleGroups,omitempty" tf:"external_autoscale_groups,omitempty"`

	// +kubebuilder:validation:Optional
	FailAction []FailActionParameters `json:"failAction,omitempty" tf:"fail_action,omitempty"`

	// +kubebuilder:validation:Optional
	FewestTasksFeedbackDelay *string `json:"fewestTasksFeedbackDelay,omitempty" tf:"fewest_tasks_feedback_delay,omitempty"`

	// +kubebuilder:validation:Optional
	GracefulDisableTimeout *string `json:"gracefulDisableTimeout,omitempty" tf:"graceful_disable_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	GslbSpEnabled *string `json:"gslbSpEnabled,omitempty" tf:"gslb_sp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	HealthMonitorRefs []*string `json:"healthMonitorRefs,omitempty" tf:"health_monitor_refs,omitempty"`

	// +kubebuilder:validation:Optional
	HorizonProfile []HorizonProfileParameters `json:"horizonProfile,omitempty" tf:"horizon_profile,omitempty"`

	// +kubebuilder:validation:Optional
	HostCheckEnabled *string `json:"hostCheckEnabled,omitempty" tf:"host_check_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Http2Properties []Http2PropertiesParameters `json:"http2Properties,omitempty" tf:"http2_properties,omitempty"`

	// +kubebuilder:validation:Optional
	IgnoreServerPort *string `json:"ignoreServerPort,omitempty" tf:"ignore_server_port,omitempty"`

	// +kubebuilder:validation:Optional
	IgnoreServers *bool `json:"ignoreServers,omitempty" tf:"ignore_servers,omitempty"`

	// +kubebuilder:validation:Optional
	InlineHealthMonitor *string `json:"inlineHealthMonitor,omitempty" tf:"inline_health_monitor,omitempty"`

	// +kubebuilder:validation:Optional
	IpaddrgroupRef *string `json:"ipaddrgroupRef,omitempty" tf:"ipaddrgroup_ref,omitempty"`

	// +kubebuilder:validation:Optional
	LBAlgoRrPerSe *string `json:"lbAlgoRrPerSe,omitempty" tf:"lb_algo_rr_per_se,omitempty"`

	// +kubebuilder:validation:Optional
	LBAlgorithm *string `json:"lbAlgorithm,omitempty" tf:"lb_algorithm,omitempty"`

	// +kubebuilder:validation:Optional
	LBAlgorithmConsistentHashHdr *string `json:"lbAlgorithmConsistentHashHdr,omitempty" tf:"lb_algorithm_consistent_hash_hdr,omitempty"`

	// +kubebuilder:validation:Optional
	LBAlgorithmCoreNonaffinity *string `json:"lbAlgorithmCoreNonaffinity,omitempty" tf:"lb_algorithm_core_nonaffinity,omitempty"`

	// +kubebuilder:validation:Optional
	LBAlgorithmHash *string `json:"lbAlgorithmHash,omitempty" tf:"lb_algorithm_hash,omitempty"`

	// +kubebuilder:validation:Optional
	LookupServerByName *string `json:"lookupServerByName,omitempty" tf:"lookup_server_by_name,omitempty"`

	// +kubebuilder:validation:Optional
	Markers []PoolMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConcurrentConnectionsPerServer *string `json:"maxConcurrentConnectionsPerServer,omitempty" tf:"max_concurrent_connections_per_server,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConnRatePerServer []MaxConnRatePerServerParameters `json:"maxConnRatePerServer,omitempty" tf:"max_conn_rate_per_server,omitempty"`

	// +kubebuilder:validation:Optional
	MinHealthMonitorsUp *string `json:"minHealthMonitorsUp,omitempty" tf:"min_health_monitors_up,omitempty"`

	// +kubebuilder:validation:Optional
	MinServersUp *string `json:"minServersUp,omitempty" tf:"min_servers_up,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Networks []NetworksParameters `json:"networks,omitempty" tf:"networks,omitempty"`

	// +kubebuilder:validation:Optional
	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PlacementNetworks []PlacementNetworksParameters `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	// +kubebuilder:validation:Optional
	PoolType *string `json:"poolType,omitempty" tf:"pool_type,omitempty"`

	// +kubebuilder:validation:Optional
	RequestQueueDepth *string `json:"requestQueueDepth,omitempty" tf:"request_queue_depth,omitempty"`

	// +kubebuilder:validation:Optional
	RequestQueueEnabled *string `json:"requestQueueEnabled,omitempty" tf:"request_queue_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ResolvePoolByDNS *string `json:"resolvePoolByDns,omitempty" tf:"resolve_pool_by_dns,omitempty"`

	// +kubebuilder:validation:Optional
	RewriteHostHeaderToServerName *string `json:"rewriteHostHeaderToServerName,omitempty" tf:"rewrite_host_header_to_server_name,omitempty"`

	// +kubebuilder:validation:Optional
	RewriteHostHeaderToSni *string `json:"rewriteHostHeaderToSni,omitempty" tf:"rewrite_host_header_to_sni,omitempty"`

	// +kubebuilder:validation:Optional
	RoutingPool *string `json:"routingPool,omitempty" tf:"routing_pool,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ServerDisableType *string `json:"serverDisableType,omitempty" tf:"server_disable_type,omitempty"`

	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// +kubebuilder:validation:Optional
	ServerReselect []ServerReselectParameters `json:"serverReselect,omitempty" tf:"server_reselect,omitempty"`

	// +kubebuilder:validation:Optional
	ServerTimeout *string `json:"serverTimeout,omitempty" tf:"server_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	Servers []ServersParameters `json:"servers,omitempty" tf:"servers,omitempty"`

	// +kubebuilder:validation:Optional
	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	// +kubebuilder:validation:Optional
	SniEnabled *string `json:"sniEnabled,omitempty" tf:"sni_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	SpGsInfo []SpGsInfoParameters `json:"spGsInfo,omitempty" tf:"sp_gs_info,omitempty"`

	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Tier1Lr *string `json:"tier1Lr,omitempty" tf:"tier1_lr,omitempty"`

	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// +kubebuilder:validation:Optional
	UseServicePort *string `json:"useServicePort,omitempty" tf:"use_service_port,omitempty"`

	// +kubebuilder:validation:Optional
	UseServiceSSLMode *string `json:"useServiceSslMode,omitempty" tf:"use_service_ssl_mode,omitempty"`

	// +kubebuilder:validation:Optional
	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type ServerReselectInitParameters struct {
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	NumRetries *string `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	RetryNonidempotent *string `json:"retryNonidempotent,omitempty" tf:"retry_nonidempotent,omitempty"`

	RetryTimeout *string `json:"retryTimeout,omitempty" tf:"retry_timeout,omitempty"`

	SvrRespCode []SvrRespCodeInitParameters `json:"svrRespCode,omitempty" tf:"svr_resp_code,omitempty"`
}

type ServerReselectObservation struct {
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	NumRetries *string `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	RetryNonidempotent *string `json:"retryNonidempotent,omitempty" tf:"retry_nonidempotent,omitempty"`

	RetryTimeout *string `json:"retryTimeout,omitempty" tf:"retry_timeout,omitempty"`

	SvrRespCode []SvrRespCodeObservation `json:"svrRespCode,omitempty" tf:"svr_resp_code,omitempty"`
}

type ServerReselectParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	NumRetries *string `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	// +kubebuilder:validation:Optional
	RetryNonidempotent *string `json:"retryNonidempotent,omitempty" tf:"retry_nonidempotent,omitempty"`

	// +kubebuilder:validation:Optional
	RetryTimeout *string `json:"retryTimeout,omitempty" tf:"retry_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	SvrRespCode []SvrRespCodeParameters `json:"svrRespCode,omitempty" tf:"svr_resp_code,omitempty"`
}

type ServersIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServersIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServersIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ServersInitParameters struct {
	AutoscalingGroupName *string `json:"autoscalingGroupName,omitempty" tf:"autoscaling_group_name,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DiscoveredNetworks []DiscoveredNetworksInitParameters `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExternalOrchestrationID *string `json:"externalOrchestrationId,omitempty" tf:"external_orchestration_id,omitempty"`

	ExternalUUID *string `json:"externalUuid,omitempty" tf:"external_uuid,omitempty"`

	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []ServersIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Location []ServersLocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	NwRef *string `json:"nwRef,omitempty" tf:"nw_ref,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	PrstHdrVal *string `json:"prstHdrVal,omitempty" tf:"prst_hdr_val,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	ResolveServerByDNS *string `json:"resolveServerByDns,omitempty" tf:"resolve_server_by_dns,omitempty"`

	RewriteHostHeader *string `json:"rewriteHostHeader,omitempty" tf:"rewrite_host_header,omitempty"`

	ServerNode *string `json:"serverNode,omitempty" tf:"server_node,omitempty"`

	Static *string `json:"static,omitempty" tf:"static,omitempty"`

	VMRef *string `json:"vmRef,omitempty" tf:"vm_ref,omitempty"`

	VerifyNetwork *string `json:"verifyNetwork,omitempty" tf:"verify_network,omitempty"`
}

type ServersLocationInitParameters struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServersLocationObservation struct {
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServersLocationParameters struct {

	// +kubebuilder:validation:Optional
	Latitude *string `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// +kubebuilder:validation:Optional
	Longitude *string `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServersObservation struct {
	AutoscalingGroupName *string `json:"autoscalingGroupName,omitempty" tf:"autoscaling_group_name,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DiscoveredNetworks []DiscoveredNetworksObservation `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ExternalOrchestrationID *string `json:"externalOrchestrationId,omitempty" tf:"external_orchestration_id,omitempty"`

	ExternalUUID *string `json:"externalUuid,omitempty" tf:"external_uuid,omitempty"`

	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	IP []ServersIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Location []ServersLocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	NwRef *string `json:"nwRef,omitempty" tf:"nw_ref,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	PrstHdrVal *string `json:"prstHdrVal,omitempty" tf:"prst_hdr_val,omitempty"`

	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	ResolveServerByDNS *string `json:"resolveServerByDns,omitempty" tf:"resolve_server_by_dns,omitempty"`

	RewriteHostHeader *string `json:"rewriteHostHeader,omitempty" tf:"rewrite_host_header,omitempty"`

	ServerNode *string `json:"serverNode,omitempty" tf:"server_node,omitempty"`

	Static *string `json:"static,omitempty" tf:"static,omitempty"`

	VMRef *string `json:"vmRef,omitempty" tf:"vm_ref,omitempty"`

	VerifyNetwork *string `json:"verifyNetwork,omitempty" tf:"verify_network,omitempty"`
}

type ServersParameters struct {

	// +kubebuilder:validation:Optional
	AutoscalingGroupName *string `json:"autoscalingGroupName,omitempty" tf:"autoscaling_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DiscoveredNetworks []DiscoveredNetworksParameters `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ExternalOrchestrationID *string `json:"externalOrchestrationId,omitempty" tf:"external_orchestration_id,omitempty"`

	// +kubebuilder:validation:Optional
	ExternalUUID *string `json:"externalUuid,omitempty" tf:"external_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// +kubebuilder:validation:Optional
	IP []ServersIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Location []ServersLocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	// +kubebuilder:validation:Optional
	NwRef *string `json:"nwRef,omitempty" tf:"nw_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	PreferenceOrder *string `json:"preferenceOrder,omitempty" tf:"preference_order,omitempty"`

	// +kubebuilder:validation:Optional
	PrstHdrVal *string `json:"prstHdrVal,omitempty" tf:"prst_hdr_val,omitempty"`

	// +kubebuilder:validation:Optional
	Ratio *string `json:"ratio,omitempty" tf:"ratio,omitempty"`

	// +kubebuilder:validation:Optional
	ResolveServerByDNS *string `json:"resolveServerByDns,omitempty" tf:"resolve_server_by_dns,omitempty"`

	// +kubebuilder:validation:Optional
	RewriteHostHeader *string `json:"rewriteHostHeader,omitempty" tf:"rewrite_host_header,omitempty"`

	// +kubebuilder:validation:Optional
	ServerNode *string `json:"serverNode,omitempty" tf:"server_node,omitempty"`

	// +kubebuilder:validation:Optional
	Static *string `json:"static,omitempty" tf:"static,omitempty"`

	// +kubebuilder:validation:Optional
	VMRef *string `json:"vmRef,omitempty" tf:"vm_ref,omitempty"`

	// +kubebuilder:validation:Optional
	VerifyNetwork *string `json:"verifyNetwork,omitempty" tf:"verify_network,omitempty"`
}

type SpGsInfoInitParameters struct {
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	GsRef *string `json:"gsRef,omitempty" tf:"gs_ref,omitempty"`
}

type SpGsInfoObservation struct {
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	GsRef *string `json:"gsRef,omitempty" tf:"gs_ref,omitempty"`
}

type SpGsInfoParameters struct {

	// +kubebuilder:validation:Optional
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	// +kubebuilder:validation:Optional
	GsRef *string `json:"gsRef,omitempty" tf:"gs_ref,omitempty"`
}

type SvrRespCodeInitParameters struct {
	Codes []*float64 `json:"codes,omitempty" tf:"codes,omitempty"`

	Ranges []SvrRespCodeRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	RespCodeBlock []*string `json:"respCodeBlock,omitempty" tf:"resp_code_block,omitempty"`
}

type SvrRespCodeObservation struct {
	Codes []*float64 `json:"codes,omitempty" tf:"codes,omitempty"`

	Ranges []SvrRespCodeRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`

	RespCodeBlock []*string `json:"respCodeBlock,omitempty" tf:"resp_code_block,omitempty"`
}

type SvrRespCodeParameters struct {

	// +kubebuilder:validation:Optional
	Codes []*float64 `json:"codes,omitempty" tf:"codes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []SvrRespCodeRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`

	// +kubebuilder:validation:Optional
	RespCodeBlock []*string `json:"respCodeBlock,omitempty" tf:"resp_code_block,omitempty"`
}

type SvrRespCodeRangesInitParameters struct {
	Begin *string `json:"begin,omitempty" tf:"begin,omitempty"`

	End *string `json:"end,omitempty" tf:"end,omitempty"`
}

type SvrRespCodeRangesObservation struct {
	Begin *string `json:"begin,omitempty" tf:"begin,omitempty"`

	End *string `json:"end,omitempty" tf:"end,omitempty"`
}

type SvrRespCodeRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin *string `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end" tf:"end,omitempty"`
}

// PoolSpec defines the desired state of Pool
type PoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PoolParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PoolInitParameters `json:"initProvider,omitempty"`
}

// PoolStatus defines the observed state of Pool.
type PoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Pool is the Schema for the Pools API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type Pool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   PoolSpec   `json:"spec"`
	Status PoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PoolList contains a list of Pools
type PoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Pool `json:"items"`
}

// Repository type metadata.
var (
	Pool_Kind             = "Pool"
	Pool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Pool_Kind}.String()
	Pool_KindAPIVersion   = Pool_Kind + "." + CRDGroupVersion.String()
	Pool_GroupVersionKind = CRDGroupVersion.WithKind(Pool_Kind)
)

func init() {
	SchemeBuilder.Register(&Pool{}, &PoolList{})
}
